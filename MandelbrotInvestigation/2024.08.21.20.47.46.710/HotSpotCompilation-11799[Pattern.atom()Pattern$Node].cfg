begin_compilation
  name " HotSpotCompilation-11799[java.util.regex.Pattern.atom()]"
  method "HotSpotCompilation-11799[java.util.regex.Pattern.atom()]"
  date 1724269768096
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1116  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1166 v1169 ?15 ?687 ?231 ?264 ?688 ?123 ?125 v338 v336 ?145 v369 ?49 ?149 ?151 ?689 v372 ?71 v373 ?690 ?82 v375 ?691 ?210 v422 ?692 v423 v335 v1165 ?217 ?693 ?694 ?139 ?230 v1171 ?695 v1170 ?696 v332 ?202 ?697 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
displacement: 80
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1116 a1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1116 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.temp
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
=== Succesors ===
next: i1117 
=== Usages ===
a308 v1167 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - #next: i1117  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2417
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v852 i1117 i1124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1116 
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1117 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-80139|0xfffffffffffec6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1167 
lastLocationAccess: - 
=== Succesors ===
next: i1118 
=== Usages ===
v318 v359 
=== Predecessor ===
a1116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1167 lastLocationAccess: - #next: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1118 i1122 v334 v357 i1126 i1128 v371 v395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1118 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 5]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
j457 v194 ?231 v318 i258 i239 
=== Predecessor ===
i1117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i1117 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1118 y: i1117  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 j930 j851 j851 j851 j877 j877 j930 v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v318 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
i1118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v318 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1119 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1119 i1133 i1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1119 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
v114 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 11]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 v142 i823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
x: i1119 
y: i112 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1119 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
i1119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v597 #falseSuccessor: v598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2072) [bci: 24]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid a308 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1116 
=== Succesors ===
=== Usages ===
v1174 v1168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1116  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1118 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a308 
index: j457 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a308 index: j457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
i234 v186 v356 ?230 ?231 v232 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1168 lastLocationAccess: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid j855 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j905 j922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 7060
stableDimension: 0
stamp: i64 [7060]
stampKind: i64
value: long[7060|0x1b94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j905 j922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240]
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 v232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1123 a1129 a1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2485) [bci: 369]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 v372 v91 i137 i169 v291 v335 i239 i288 ?217 ?690 ?691 i266 i705 i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2418) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 i147 i512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j894 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 v915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 162]
rawvalue: 80
stableDimension: 0
stamp: i32 [80]
stampKind: i32
value: int[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 v204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 155]
rawvalue: 112
stableDimension: 0
stamp: i32 [112]
stampKind: i32
value: int[112|0x70]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?264 ?695 i265 ?82 ?71 v66 v372 v372 v72 v83 v417 ?15 ?696 ?125 v120 ?145 ?687 ?49 ?151 ?687 ?688 ?287 v429 ?202 ?202 ?688 ?689 v335 v335 ?210 ?210 v211 v336 ?689 ?690 ?217 v218 ?691 ?692 v227 v349 ?230 ?231 ?231 ?693 ?694 v1066 ?693 ?71 v373 ?694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1121 i1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: false
keySuccessors: [I@5b993094
keys: [I@4f167775
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
profileData: PROFILED keyProbabilities: [0.1501714800894255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010240072125195695, 0.0, 0.0, 0.0, 0.8395884477853788]
stamp: void
=== Inputs ===
value: i1120 
=== Succesors ===
successors: v187 v188 v189 v191 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i1120 #successors: v187 v188 v189 v191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 343]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1121 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1121 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.patternLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 348]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: v603 
=== Usages ===
v194 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i1121 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1118 y: i1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v601 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
i1121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v601 #falseSuccessor: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -153619
stableDimension: 0
stamp: i32 [-153619]
stampKind: i32
value: int[-153619|0xfffffffffffda7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
v602 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i201  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.nextEscaped()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 148
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 - i3 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
bci: 148
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.nextEscaped
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?687 
=== Succesors ===
next: v607 
=== Usages ===
?202 v203 v204 
=== Predecessor ===
v188 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?687 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i50 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i201 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v605 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid i912 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -154643
stableDimension: 0
stamp: i32 [-154643]
stampKind: i32
value: int[-154643|0xfffffffffffda3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i56 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i201 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid i917 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667]
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: i32 [-155667 - -154643] bits:1...10110xxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v910 
values: i912 i917 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v910 values: i912 i917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v911 v916 
=== Succesors ===
next: v915 
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v911 v916 #next: v915  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 151
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i201 a1 i3 - i3 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i201 a1 i3 - i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateBefore: ?202 
actionAndReason: i913 
speculation: j894 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?202 actionAndReason: i913 speculation: j894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 266]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1122 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1122 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 2]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
i248 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
=== Inputs ===
x: i1122 
y: i4 
=== Succesors ===
=== Usages ===
v334 ?210 ?690 ?217 ?691 i258 ?688 ?689 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1122 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i248 
stateAfter: - 
=== Succesors ===
next: i209 
=== Usages ===
=== Predecessor ===
i1122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i248 stateAfter: - #next: i209  <|@  <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>
=== Inputs ===
arguments: a1 i3 i35 i3 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i35 i3  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 287
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i248 i3 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i209 <|@
d <@d|@=== Debug Properties ===
bci: 287
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.escape
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v335 
stateDuring: ?688 
=== Succesors ===
next: v615 
=== Usages ===
?210 v211 v336 ?689 v337 
=== Predecessor ===
v334 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v335 stateDuring: ?688 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i3 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 290
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i209 a1 i3 i248 i3 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i209 a1 i3 i248 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xbc0a77ff]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 326]}
stamp: void
=== Inputs ===
stateBefore: ?210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.append(int, int)>
=== Inputs ===
arguments: a1 i209 i3 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i209 i3  <|@  <|@
tid ?689 <|@
d <@d|@=== Debug Properties ===
bci: 301
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2464
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i248 i3 i209 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i248 i3 i209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
bci: 301
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
polymorphic: false
stamp: void
targetMethod: Direct#Pattern.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v336 
stateDuring: ?689 
=== Succesors ===
next: i216 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v336 stateDuring: ?689 #next: i216  <|@  <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.isSupplementary(int)>
=== Inputs ===
arguments: i209 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i209  <|@  <|@
tid ?690 <|@
d <@d|@=== Debug Properties ===
bci: 309
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i35 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
bci: 309
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern.isSupplementary
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v337 
stateDuring: ?690 
=== Succesors ===
next: v619 
=== Usages ===
?217 v218 
=== Predecessor ===
v213 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v337 stateDuring: ?690 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i3 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v617 #falseSuccessor: v618  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i221 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i221  <|@  <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.peek()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?691 <|@
d <@d|@=== Debug Properties ===
bci: 318
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2469
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i35 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
bci: 318
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.peek
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v338 
stateDuring: ?691 
=== Succesors ===
next: v223 
=== Usages ===
i259 
=== Predecessor ===
v617 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v338 stateDuring: ?691 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
i221 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 312
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i216 a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i216 a1 i35 i248 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
reason: UnreachedCode
speculation: {0x0000000000001194[index: 140, len: 20, hash: 0xbc0a77f4]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 315]}
stamp: void
=== Inputs ===
stateBefore: ?217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2483) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1123 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1123 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: i1124 
=== Usages ===
v1173 v1172 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1123 
=== Succesors ===
=== Usages ===
i1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1124 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-88075|0xfffffffffffea7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
i290 v349 
=== Predecessor ===
a1123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1172 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
=== Inputs ===
x: i1118 
y: i35 
=== Succesors ===
=== Usages ===
v357 v359 j460 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1118 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i1117 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i239 y: i1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
i1124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v546 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1124 
y: i3 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1124 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v552 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -117275
stableDimension: 0
stamp: i32 [-117275]
stampKind: i32
value: int[-117275|0xfffffffffffe35e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
v356 
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [-2147483647 - 0]
=== Inputs ===
value: i1124 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i290 
y: i3 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i290 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 35]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1123 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v550 
address: v1173 
lastLocationAccess: - 
value: i1120 
stateAfter: - 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v550 address: v1173 lastLocationAccess: - value: i1120 stateAfter: - #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1120 
y: i126 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1120 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1120 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i132 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v629 #falseSuccessor: v630  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 16]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: i1125 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i239 stateAfter: - #next: i1125  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i239 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a308 
index: j460 
=== Succesors ===
=== Usages ===
i1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a308 index: j460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
i259 
=== Predecessor ===
v357 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
i1125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v255 
values: i221 i1125 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v255 values: i221 i1125  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v255 
values: i248 i1118 
=== Succesors ===
=== Usages ===
i267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v255 values: i248 i1118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v223 v199 
=== Succesors ===
next: v9 
=== Usages ===
i259 i258 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v223 v199 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i259 i1134 i87 
=== Succesors ===
=== Usages ===
?15 v16 ?123 ?125 i129 v392 v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i259 i1134 i87  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i258 i1126 i147 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i258 i1126 i147  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i35 i36 i36 
=== Succesors ===
=== Usages ===
?15 ?692 ?123 ?125 i36 ?49 ?151 v66 i265 v385 j461 i119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i35 i36 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: i1126 
=== Usages ===
i268 i267 v89 i266 v27 v46 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: i1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 344]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v24 ?125 i267 ?145 i137 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v16  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2422
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 i267 i3 i268 
=== Succesors ===
=== Usages ===
v878 i1130 i1132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 i267 i3 i268  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2485) [bci: 369]
stamp: i32
=== Inputs ===
x: i266 
y: i35 
=== Succesors ===
=== Usages ===
i266 ?145 i266 ?82 ?696 ?695 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i266 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: false
keySuccessors: [I@77986a7f
keys: [I@74cffa0d
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
profileData: PROFILED keyProbabilities: [0.1501714800894255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010240072125195695, 0.0, 0.0, 0.0, 0.8395884477853788]
stamp: void
=== Inputs ===
value: i268 
=== Succesors ===
successors: v17 v18 v19 v21 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i268 #successors: v17 v18 v19 v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 343]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1127 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.patternLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 348]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
v24 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i1127 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1126 y: i1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i1127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v634 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -162067
stableDimension: 0
stamp: i32 [-162067]
stampKind: i32
value: int[-162067|0xfffffffffffd86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i48 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i48  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.nextEscaped()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?692 <|@
d <@d|@=== Debug Properties ===
bci: 148
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 - i3 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
bci: 148
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.nextEscaped
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?692 
=== Succesors ===
next: v639 
=== Usages ===
?49 v51 v57 
=== Predecessor ===
v18 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?692 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i50 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
i48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -162835
stableDimension: 0
stamp: i32 [-162835]
stampKind: i32
value: int[-162835|0xfffffffffffd83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i56 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v641 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v641 #falseSuccessor: v642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -163859
stableDimension: 0
stamp: i32 [-163859]
stampKind: i32
value: int[-163859|0xfffffffffffd7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
v641 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: i32 [-163859 - -162835] bits:1...101xxxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v891 
values: i893 i899 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v891 values: i893 i899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v892 v898 
=== Succesors ===
next: v897 
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v892 v898 #next: v897  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 151
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i48 a1 i266 - i3 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i48 a1 i266 - i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateBefore: ?49 
actionAndReason: i895 
speculation: j894 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?49 actionAndReason: i895 speculation: j894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 266]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1128 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 2]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
i147 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
=== Inputs ===
x: i1128 
y: i4 
=== Succesors ===
=== Usages ===
v371 ?71 ?695 ?82 ?696 i267 ?693 ?694 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1128 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i147 
stateAfter: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
i1128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i147 stateAfter: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i3 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i266 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v646 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v645 #falseSuccessor: v646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 281]
stamp: void
=== Inputs ===
=== Succesors ===
next: i70 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i70  <|@  <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>
=== Inputs ===
arguments: a1 i3 i35 i3 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i35 i3  <|@  <|@
tid ?693 <|@
d <@d|@=== Debug Properties ===
bci: 287
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i147 i3 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
bci: 287
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.escape
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v372 
stateDuring: ?693 
=== Succesors ===
next: v651 
=== Usages ===
?71 v72 v373 ?694 v374 
=== Predecessor ===
v645 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v372 stateDuring: ?693 #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i3 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v650 
=== Usages ===
=== Predecessor ===
i70 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v649 #falseSuccessor: v650  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 290
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i70 a1 i3 i147 i3 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i70 a1 i3 i147 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xbc0a77ff]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 326]}
stamp: void
=== Inputs ===
stateBefore: ?71 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.append(int, int)>
=== Inputs ===
arguments: a1 i70 i3 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i70 i3  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 301
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2464
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i147 i3 i70 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i147 i3 i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
bci: 301
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
polymorphic: false
stamp: void
targetMethod: Direct#Pattern.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v373 
stateDuring: ?694 
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v373 stateDuring: ?694 #next: i81  <|@  <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.isSupplementary(int)>
=== Inputs ===
arguments: i70 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i70  <|@  <|@
tid ?695 <|@
d <@d|@=== Debug Properties ===
bci: 309
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
bci: 309
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern.isSupplementary
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v374 
stateDuring: ?695 
=== Succesors ===
next: v655 
=== Usages ===
?82 v83 
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v374 stateDuring: ?695 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i81 
y: i3 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i81 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v653 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v653 #falseSuccessor: v654  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i87 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i87  <|@  <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.peek()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 318
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2469
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
bci: 318
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.peek
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v375 
stateDuring: ?696 
=== Succesors ===
next: v89 
=== Usages ===
i268 
=== Predecessor ===
v653 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v375 stateDuring: ?696 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i87 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 312
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i81 a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i81 a1 i36 i147 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
reason: UnreachedCode
speculation: {0x0000000000001194[index: 140, len: 20, hash: 0xbc0a77f4]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 315]}
stamp: void
=== Inputs ===
stateBefore: ?82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 267
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2460
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 - i3 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 - i3  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.unread()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
sourceFile: Pattern.java
sourceLine: 2197
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?151 
values: a1 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?151 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0xbc0a77d6]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 285]}
stamp: void
=== Inputs ===
stateBefore: ?149 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2483) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1129 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1129 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: i1130 
=== Usages ===
a378 v1175 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1129 
=== Succesors ===
=== Usages ===
i1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1130 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-97291|0xfffffffffffe83f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
i119 v385 
=== Predecessor ===
a1129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1175 lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i1130 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i266 y: i1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
i1130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v558 #falseSuccessor: v560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1131 
=== Usages ===
v392 
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.temp
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
=== Succesors ===
next: i1132 
=== Usages ===
a394 v1177 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - #next: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1131 
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-101643|0xfffffffffffe72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: v569 
=== Usages ===
v401 
=== Predecessor ===
a1131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1177 lastLocationAccess: - #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
=== Inputs ===
x: i1126 
y: i35 
=== Succesors ===
=== Usages ===
v395 ?139 j462 v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1126 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i1132 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i137 y: i1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
i1132 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v566 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32
=== Inputs ===
x: i266 
y: i1130 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i266 y: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i3 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v657 #falseSuccessor: v658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 35]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid a378 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1129 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1129  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i266 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i266  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a378 
index: j461 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a378 index: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v558 
address: v1176 
lastLocationAccess: - 
value: i268 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v558 address: v1176 lastLocationAccess: - value: i268 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i126 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v661 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v661 #falseSuccessor: v662  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
resultBits: 16
stamp: i16
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i268  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i132 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i129 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v665 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 16]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i137 
stateAfter: - 
=== Succesors ===
next: i1133 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i137 stateAfter: - #next: i1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1133 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 19]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
v142 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 19]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
x: i1133 
y: i112 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1133 y: i112  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 383
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2489
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i1126 i3 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i1126 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
?139 v1178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1131  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iaload
code: ResolvedJavaMethodBytecode<Pattern.next()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
sourceFile: Pattern.java
sourceLine: 2098
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a394 i137 a1 
=== Succesors ===
=== Usages ===
v595 v668 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a394 i137 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
i1133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v669 #falseSuccessor: v670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2101) [bci: 31]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
next: i1134 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?139 #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i137 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j462 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
i268 
=== Predecessor ===
v595 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1134 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v260 
values: i266 i3 
=== Succesors ===
=== Usages ===
?264 v91 i512 i757 v523 v1017 v291 j526 v1150 i828 v728 v756 a983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v260 values: i266 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v262 
=== Succesors ===
next: a1135 
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v262 #next: a1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1135 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 399]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
a411 v1179 v1180 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1135 
=== Succesors ===
=== Usages ===
i1137 i1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1135 
=== Succesors ===
=== Usages ===
i1136 i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1135  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 354
bytecode: goto
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2479
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i265 - i3 
=== Succesors ===
=== Usages ===
v931 v1162 a983 i1136 i1139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i265 - i3  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2494) [bci: 393]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i35 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i265 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2494) [bci: 393]
profileData: PROFILED designatedSuccessorProbability: 0.06818919357455788
stamp: void
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v93 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1136 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-105739|0xfffffffffffe62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?264 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
v417 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?264 guard: - address: v1179 lastLocationAccess: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1136 
y: i3 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1136 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
i1136 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v576 #falseSuccessor: v574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -118555
stableDimension: 0
stamp: i32 [-118555]
stampKind: i32
value: int[-118555|0xfffffffffffe30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1137 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: a98 
=== Usages ===
v422 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: a98  <|@  <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
referencedType: [null]
returnStamp: a java.lang.Object (unchecked=a java.util.regex.Pattern$CharPredicate)
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.single(int)>
=== Inputs ===
arguments: a1 i1137 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i1137  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 404
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2495
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
bci: 404
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
polymorphic: false
stamp: a java.lang.Object
targetMethod: Direct#Pattern.single
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v422 
stateDuring: ?697 
=== Succesors ===
next: a101 
=== Usages ===
v423 
=== Predecessor ===
i1137 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v422 stateDuring: ?697 #next: a101  <|@  <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
referencedType: [null]
returnStamp: a java.util.regex.Pattern$CharProperty
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, UnresolvedJavaType<Ljava/util/regex/Pattern$CharPredicate;>]
stamp: void
targetMethod: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)>
=== Inputs ===
arguments: a1 a98 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a98  <|@  <|@
tid ?698 <|@
d <@d|@=== Debug Properties ===
bci: 407
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2495
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
bci: 407
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
polymorphic: false
stamp: a java.util.regex.Pattern$CharProperty
targetMethod: Direct#Pattern.newCharProperty
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v423 
stateDuring: ?698 
=== Succesors ===
next: v103 
=== Usages ===
v103 
=== Predecessor ===
a98 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v423 stateDuring: ?698 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 410]
stamp: void
=== Inputs ===
memoryMap: - 
result: a101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a101 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 411]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: j948 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j948 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1010 
=== Usages ===
v1196 v1197 
=== Predecessor ===
v1028 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
j1010 v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1010 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: j1011 
=== Usages ===
j955 v1198 v1199 v1200 a982 v1201 v1205 v1202 v1203 v1204 
=== Predecessor ===
j948 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - #next: j1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
j1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
v956 
=== Predecessor ===
j1010 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i265 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i265  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 v523 j952 i757 i786 v519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j526 
y: i153 
=== Succesors ===
=== Usages ===
j993 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j526 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j952 
y: j992 
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j952 y: j992  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j993 
y: j953 
=== Succesors ===
=== Usages ===
j955 v971 j995 v1202 v1203 v1204 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j993 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j954 
y: j1010 
=== Succesors ===
=== Usages ===
v956 v1012 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j954 y: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j955 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1011 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1013 v1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
j1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v958 #falseSuccessor: v957  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a983 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a983  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a983 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?264 
arguments: v947 i265 
=== Succesors ===
next: v1162 
=== Usages ===
v1162 a1008 
=== Predecessor ===
v958 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?264 arguments: v947 i265 #next: v1162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-262257|0xfffffffffffbff8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?264 
object: a983 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
a983 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?264 object: a983 #next: v987  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: j955 
stateAfter: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: j955 stateAfter: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1202 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1202 #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1203 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1203 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1204 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1204 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
value: j960 
stateAfter: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - value: j960 stateAfter: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
value: v1079 
stateAfter: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - value: v1079 stateAfter: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: i265 
stateAfter: - 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: i265 stateAfter: - #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid j994 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j954 
y: j994 
=== Succesors ===
=== Usages ===
v963 v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j954 y: j994  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j995 
y: j997 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j995 y: j997  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v963 
=== Succesors ===
trueSuccessor: v965 
falseSuccessor: v964 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v963 #trueSuccessor: v965 #falseSuccessor: v964  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v969 
values: j323 j979 
=== Succesors ===
=== Usages ===
v971 v1200 j979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v969 values: j323 j979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v968 
=== Succesors ===
next: v977 
=== Usages ===
j970 v976 v980 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v968 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j970 
y: j954 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j970 y: j954  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v976 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v972 #falseSuccessor: v976  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: j970 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: j970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: j849 stateAfter: - #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j970 
y: j996 
=== Succesors ===
=== Usages ===
j970 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j970 y: j996  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v969 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v969  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v969 
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v969 #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
length: j995 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - length: j995 #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v975 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v975 #next: v981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a982 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1010 
=== Succesors ===
next: v985 
=== Usages ===
a1008 
=== Predecessor ===
v981 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1010 #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
a982 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v986 
values: a982 a983 
=== Succesors ===
=== Usages ===
v1193 v1195 a682 ?287 v1183 v1181 v1187 v1189 v1191 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v986 values: a982 a983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v985 v987 
=== Succesors ===
next: i1138 
=== Usages ===
a1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v985 v987 #next: i1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1138 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v675 
=== Usages ===
v155 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
x: i1138 
y: i153 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1138 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
i1138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 131]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i35 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
v438 
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i265 
y: i4 
=== Succesors ===
=== Usages ===
v1150 v1149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i265 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i153 
=== Succesors ===
=== Usages ===
v1088 v1104 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: 40344
stableDimension: 0
stamp: i64 [40344]
stampKind: i64
value: long[40344|0x9d98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j930 j930 j930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1103 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1100 #falseSuccessor: v1103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i265 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1108 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1111 #falseSuccessor: v1108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1098 v1099 
=== Succesors ===
next: i1139 
=== Usages ===
v533 v749 v820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1098 v1099 #next: i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-108811|0xfffffffffffe56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?264 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: v1088 
=== Usages ===
v429 v519 v1149 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?264 guard: - address: v1179 lastLocationAccess: - #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1087 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1084 #falseSuccessor: v1087  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i1139 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i1139  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -112923
stableDimension: 0
stamp: i32 [-112923]
stampKind: i32
value: int[-112923|0xfffffffffffe46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1149 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1149 #trueSuccessor: v1095 #falseSuccessor: v1092  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1139 
y: i153 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1139 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v1093 #falseSuccessor: v1085  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1082 v1083 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1082 v1083 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1139 
y: i3 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1139 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v592 #falseSuccessor: v590  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid i943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -118811
stableDimension: 0
stamp: i32 [-118811]
stampKind: i32
value: int[-118811|0xfffffffffffe2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1140 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
v438 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1008 
index: - 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v272 
address: v1181 
lastLocationAccess: - 
value: i1140 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
i1140 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v272 address: v1181 lastLocationAccess: - value: i1140 stateAfter: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 399]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
v1190 v1194 v1192 v1188 v1186 v1182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 i822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i755 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i755  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v756 
trueValue: i265 
falseValue: i153 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v756 trueValue: i265 falseValue: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i35 i169 
=== Succesors ===
=== Usages ===
i169 v161 j466 i707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v158 values: i35 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v157 
=== Succesors ===
next: v165 
=== Usages ===
i288 v162 v170 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v157 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i757 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i757  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v164 #falseSuccessor: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1141 
=== Usages ===
v533 
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v1183 v1182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j466 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: v455 
=== Usages ===
v455 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v164 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j466 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v533 
address: v1183 
lastLocationAccess: - 
value: i1141 
stateAfter: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
i1141 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v533 address: v1183 lastLocationAccess: - value: i1141 stateAfter: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i288 
y: i35 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i288 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v158 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v158 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i265 
y: i827 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i265 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v700 
values: i288 i823 
=== Succesors ===
=== Usages ===
v701 i705 j717 i823 i734 i786 i822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: i288 i823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 158
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v723 
=== Succesors ===
next: v704 
=== Usages ===
v702 v706 i707 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v723 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i707 
y: i828 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i707 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v703 #falseSuccessor: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1142 
=== Usages ===
v820 
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1142  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i707 
=== Succesors ===
=== Usages ===
v1187 v1186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i707  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j717 
=== Succesors ===
=== Usages ===
i1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1142 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
v716 
=== Predecessor ===
v703 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v703 
=== Succesors ===
=== Usages ===
v774 v803 v716 v816 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v703  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j717 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1187 
lastLocationAccess: - 
value: i1142 
stateAfter: - 
=== Succesors ===
next: i1143 
=== Usages ===
=== Predecessor ===
i1142 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1187 lastLocationAccess: - value: i1142 stateAfter: - #next: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i35 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i705 
=== Succesors ===
=== Usages ===
v1191 v1190 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i705  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j775 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
=== Succesors ===
next: v774 
=== Usages ===
v774 
=== Predecessor ===
v716 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j775 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1191 
lastLocationAccess: - 
value: i1143 
stateAfter: - 
=== Succesors ===
next: i1144 
=== Usages ===
=== Predecessor ===
i1143 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1191 lastLocationAccess: - value: i1143 stateAfter: - #next: i1144  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i153 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i786 
=== Succesors ===
=== Usages ===
v1193 v1192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i786  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j804 
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1144 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v803 
=== Usages ===
v803 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j804 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1193 
lastLocationAccess: - 
value: i1144 
stateAfter: - 
=== Succesors ===
next: i1145 
=== Usages ===
=== Predecessor ===
i1144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1193 lastLocationAccess: - value: i1144 stateAfter: - #next: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid i822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i755 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i755  <|@  <|@
f <@~|@floating>@ <|@
tid j817 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i822 
=== Succesors ===
=== Usages ===
v1195 v1194 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i822  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j817 
=== Succesors ===
=== Usages ===
i1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j817 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1195 
lastLocationAccess: - 
value: i1145 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1195 lastLocationAccess: - value: i1145 stateAfter: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i112 
=== Succesors ===
=== Usages ===
i707 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v700 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v700 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v700 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v727 
values: i707 i732 
=== Succesors ===
=== Usages ===
v728 i732 j744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v727 values: i707 i732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 158
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v750 
=== Succesors ===
next: v731 
=== Usages ===
v729 v733 i734 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v750 #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i734 
y: i265 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i734 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v728 
=== Succesors ===
trueSuccessor: v730 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v728 #trueSuccessor: v730 #falseSuccessor: v729  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1146 
=== Usages ===
v749 
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1146  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i734 
=== Succesors ===
=== Usages ===
v1189 v1188 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i734  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j744 
=== Succesors ===
=== Usages ===
i1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v743 
=== Predecessor ===
v730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v730 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j744 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v749 
address: v1189 
lastLocationAccess: - 
value: i1146 
stateAfter: - 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v749 address: v1189 lastLocationAccess: - value: i1146 stateAfter: - #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i734 
y: i35 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i734 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v727 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v727 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v727 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: v1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1059 
=== Usages ===
v1206 v1207 
=== Predecessor ===
v1077 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
j1059 v1061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1059 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: j1060 
=== Usages ===
j1038 v1208 v1209 a1045 v1210 v1211 v1212 
=== Predecessor ===
j1035 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: j1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
j1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
v1039 
=== Predecessor ===
j1059 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1038 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j1059 
y: j1034 
=== Succesors ===
=== Usages ===
v1039 v1061 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1059 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1060 
y: j1038 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1060 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1041 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
j1060 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1041 #falseSuccessor: v1040  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1046 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1046  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 418
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2497
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 155
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?286 
values: - - - i3 a1008 
=== Succesors ===
=== Usages ===
v1164 a1046 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?286 values: - - - i3 a1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1046 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?287 
arguments: v1033 
=== Succesors ===
next: v1164 
=== Usages ===
v1164 a1057 
=== Predecessor ===
v1041 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?287 arguments: v1033 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-274801|0xfffffffffffbce8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?287 
object: a1046 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
a1046 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?287 object: a1046 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: j1038 
stateAfter: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: j1038 stateAfter: - #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1210 
=== Succesors ===
next: v1062 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1210 #next: v1062  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
value: j960 
stateAfter: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - value: j960 stateAfter: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1212 
lastLocationAccess: - 
value: v1080 
stateAfter: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1212 lastLocationAccess: - value: v1080 stateAfter: - #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - value: i3 stateAfter: - #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: a1045 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - value: j849 stateAfter: - #next: a1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1059 
=== Succesors ===
next: v1048 
=== Usages ===
a1057 
=== Predecessor ===
v1067 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1059 #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
a1045 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1049 
values: a1045 a1046 
=== Succesors ===
=== Usages ===
v1185 a684 v1184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1049 values: a1045 a1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1048 v1050 
=== Succesors ===
next: v683 
=== Usages ===
a1057 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1048 v1050 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1057 
index: - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1057 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a682 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a1008 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
value: a682 
stateAfter: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - value: a682 stateAfter: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1057 
index: - 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1057 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: Pattern.Node@116800333
stableDimension: 0
stamp: n!# java.util.regex.Pattern$Node
stampKind: n java.lang.Object
value: NarrowOop[Pattern.Node@116800333]
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: a686 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: a686 stateAfter: - #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.atom() [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a684 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom() [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$Slice
=== Inputs ===
object: a1057 
=== Succesors ===
next: v108 
=== Usages ===
v108 
=== Predecessor ===
v685 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1057 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 421]
stamp: void
=== Inputs ===
memoryMap: - 
result: a684 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a684 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1092 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -114971
stableDimension: 0
stamp: i32 [-114971]
stampKind: i32
value: int[-114971|0xfffffffffffe3ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: 35220
stableDimension: 0
stamp: i64 [35220]
stampKind: i64
value: long[35220|0x8994]
=== Inputs ===
=== Succesors ===
=== Usages ===
j930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -172051
stableDimension: 0
stamp: i32 [-172051]
stampKind: i32
value: int[-172051|0xfffffffffffd5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32 [-172051 - -112923] bits:1...1xx0xxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v926 
values: i933 i935 i940 i943 i945 i945 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v926 values: i933 i935 i940 i943 i945 i945  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i64 [0 - 40344] bits:0...0x00xxx0xx00xxx00
valueDescription: i64
=== Inputs ===
merge: v926 
values: j849 j936 j941 j849 j941 j941 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v926 values: j849 j936 j941 j849 j941 j941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v932 v934 v939 v942 v944 v1113 
=== Succesors ===
next: v931 
=== Usages ===
i929 j930 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v932 v934 v939 v942 v944 v1113 #next: v931  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
stateBefore: ?264 
actionAndReason: i929 
speculation: j930 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?264 actionAndReason: i929 speculation: j930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
reason: UnreachedCode
speculation: {0x0000000000001e14[index: 240, len: 20, hash: 0x9f162ca5]: UnreachedCode@6[HotSpotMethod<Pattern.next()>, 25]}
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid i908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -170003
stableDimension: 0
stamp: i32 [-170003]
stampKind: i32
value: int[-170003|0xfffffffffffd67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v666 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -168979
stableDimension: 0
stamp: i32 [-168979]
stampKind: i32
value: int[-168979|0xfffffffffffd6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v662 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i904 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i32 [-170003 - -168979] bits:1...1010110xx1111101101
valueDescription: i32
=== Inputs ===
merge: v900 
values: i902 i908 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v900 values: i902 i908  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i64 [6420 - 7060] bits:0...0110x1x0010100
valueDescription: i64
=== Inputs ===
merge: v900 
values: j903 j909 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v900 values: j903 j909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v901 v907 
=== Succesors ===
next: v906 
=== Usages ===
i904 j905 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v901 v907 #next: v906  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 366
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2484
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 i1126 i3 i268 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 i1126 i3 i268  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 42
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.append(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
sourceFile: Pattern.java
sourceLine: 2510
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?125 
values: a1 i268 i266 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?125 values: a1 i268 i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i904 
speculation: j905 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i904 speculation: j905  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -167955
stableDimension: 0
stamp: i32 [-167955]
stampKind: i32
value: int[-167955|0xfffffffffffd6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -102939
stableDimension: 0
stamp: i32 [-102939]
stampKind: i32
value: int[-102939|0xfffffffffffe6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v885 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid i886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -98843
stableDimension: 0
stamp: i32 [-98843]
stampKind: i32
value: int[-98843|0xfffffffffffe7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -5139
stableDimension: 0
stamp: i32 [-5139]
stampKind: i32
value: int[-5139|0xffffffffffffebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: i32 [-167955 - -5139] bits:1...1xxxxxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v873 
values: i875 i882 i886 i888 i890 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v873 values: i875 i882 i886 i888 i890  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: i64 [0 - 5780] bits:0...0x0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v873 
values: j855 j865 j849 j849 j872 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v873 values: j855 j865 j849 j849 j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v874 v881 v885 v887 v889 
=== Succesors ===
next: v878 
=== Usages ===
i876 j877 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v874 v881 v885 v887 v889 #next: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i876 
speculation: j877 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i876 speculation: j877  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i925 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -160787
stableDimension: 0
stamp: i32 [-160787]
stampKind: i32
value: int[-160787|0xfffffffffffd8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i920 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -159763
stableDimension: 0
stamp: i32 [-159763]
stampKind: i32
value: int[-159763|0xfffffffffffd8fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v626 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i32 [-160787 - -159763] bits:1...10110001x1111101101
valueDescription: i32
=== Inputs ===
merge: v918 
values: i920 i925 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v918 values: i920 i925  <|@  <|@
f <@~|@floating>@ <|@
tid j922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i64 [6420 - 7060] bits:0...0110x1x0010100
valueDescription: i64
=== Inputs ===
merge: v918 
values: j903 j909 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v918 values: j903 j909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v924 
=== Succesors ===
next: v923 
=== Usages ===
i921 j922 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v924 #next: v923  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 366
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2484
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i1118 i3 i1120 
=== Succesors ===
=== Usages ===
?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i1118 i3 i1120  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 42
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.append(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
sourceFile: Pattern.java
sourceLine: 2510
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a1 i1120 i3 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 i1120 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateBefore: ?230 
actionAndReason: i921 
speculation: j922 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?230 actionAndReason: i921 speculation: j922  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -158739
stableDimension: 0
stamp: i32 [-158739]
stampKind: i32
value: int[-158739|0xfffffffffffd93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -92187
stableDimension: 0
stamp: i32 [-92187]
stampKind: i32
value: int[-92187|0xfffffffffffe97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659]
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -152595
stableDimension: 0
stamp: i32 [-152595]
stampKind: i32
value: int[-152595|0xfffffffffffdabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -81691
stableDimension: 0
stamp: i32 [-81691]
stampKind: i32
value: int[-81691|0xfffffffffffec0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32 [-158739 - -48659] bits:1...1xxxxxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v846 
values: i854 i857 i859 i864 i867 i869 i871 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: i854 i857 i859 i864 i867 i869 i871  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i64 [0 - 5780] bits:0...0x0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v846 
values: j855 j849 j860 j865 j849 j849 j872 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: j855 j849 j860 j865 j849 j849 j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v856 v858 v863 v866 v868 v870 
=== Succesors ===
next: v852 
=== Usages ===
i850 j851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v856 v858 v863 v866 v868 v870 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i850 
speculation: j851 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i850 speculation: j851  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a1116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a1116  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v1166 v1169 ?15 ?687 ?231 ?264 ?688 ?123 ?125 v338 v336 ?145 v369 ?49 ?149 ?151 ?689 v372 ?71 v373 ?690 ?82 v375 ?691 ?210 v422 ?692 v423 v335 v1165 ?217 ?693 ?694 ?139 ?230 v1171 ?695 v1170 ?696 v332 ?202 ?697 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1165 <|@
result [v0|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1116 a1131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1116 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.temp
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
=== Succesors ===
next: i1117 
=== Usages ===
a308 v1167 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - #next: i1117  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2417
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v852 i1117 i1124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1116 
=== Succesors ===
=== Usages ===
i1117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1117 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-80139|0xfffffffffffec6f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1167 
lastLocationAccess: - 
=== Succesors ===
next: i1118 
=== Usages ===
v318 v359 
=== Predecessor ===
a1116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1167 lastLocationAccess: - #next: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1118 i1122 v334 v357 i1126 i1128 v371 v395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1118 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 5]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v541 
=== Usages ===
j457 v194 ?231 v318 i258 i239 
=== Predecessor ===
i1117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i1117 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1118 y: i1117  <|@  <|@
f <@~|@floating>@ <|@
tid j849 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1067 j930 j851 j851 j851 j877 j877 j930 v1018 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v318 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
i1118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v318 #trueSuccessor: v538 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1119 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1119  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1119 i1133 i1138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1119 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
v114 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 11]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 v142 i823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
x: i1119 
y: i112 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1119 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v598 
=== Usages ===
=== Predecessor ===
i1119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v597 #falseSuccessor: v598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2072) [bci: 24]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid a308 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1116 
=== Succesors ===
=== Usages ===
v1174 v1168 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1116  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1118 
=== Succesors ===
=== Usages ===
v1168 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1118  <|@  <|@
f <@~|@floating>@ <|@
tid v1168 <|@
result [v5|QWORD[.] + v3|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a308 
index: j457 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a308 index: j457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1168 
lastLocationAccess: - 
=== Succesors ===
next: v186 
=== Usages ===
i234 v186 v356 ?230 ?231 v232 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1168 lastLocationAccess: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid j855 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j903 <|@
result long[6420|0x1914] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 6420
stableDimension: 0
stamp: i64 [6420]
stampKind: i64
value: long[6420|0x1914]
=== Inputs ===
=== Succesors ===
=== Usages ===
j905 j922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j909 <|@
result long[7060|0x1b94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 7060
stableDimension: 0
stamp: i64 [7060]
stampKind: i64
value: long[7060|0x1b94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j905 j922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240]
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 v236 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[65536|0x10000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: 65536
stableDimension: 0
stamp: i32 [65536]
stampKind: i32
value: int[65536|0x10000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 v232 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1123 a1129 a1135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2485) [bci: 369]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 v372 v91 i137 i169 v291 v335 i239 i288 ?217 ?690 ?691 i266 i705 i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2418) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i248 i147 i512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j894 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v897 v915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result int[80|0x50] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 162]
rawvalue: 80
stableDimension: 0
stamp: i32 [80]
stampKind: i32
value: int[80|0x50]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 v204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[112|0x70] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 155]
rawvalue: 112
stableDimension: 0
stamp: i32 [112]
stampKind: i32
value: int[112|0x70]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 v203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?264 ?695 i265 ?82 ?71 v66 v372 v372 v72 v83 v417 ?15 ?696 ?125 v120 ?145 ?687 ?49 ?151 ?687 ?688 ?287 v429 ?202 ?202 ?688 ?689 v335 v335 ?210 ?210 v211 v336 ?689 ?690 ?217 v218 ?691 ?692 v227 v349 ?230 ?231 ?231 ?693 ?694 v1066 ?693 ?71 v373 ?694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1121 i1127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: false
keySuccessors: [I@5b993094
keys: [I@4f167775
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
profileData: PROFILED keyProbabilities: [0.1501714800894255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010240072125195695, 0.0, 0.0, 0.0, 0.8395884477853788]
stamp: void
=== Inputs ===
value: i1120 
=== Succesors ===
successors: v187 v188 v189 v191 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i1120 #successors: v187 v188 v189 v191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 343]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1121 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1121 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.patternLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 348]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: v603 
=== Usages ===
v194 
=== Predecessor ===
v187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1118 
y: i1121 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1118 y: i1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v601 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
i1121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v601 #falseSuccessor: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
next: v853 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v853  <|@  <|@
f <@~|@floating>@ <|@
tid i854 <|@
result int[-153619|0xfffffffffffda7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -153619
stableDimension: 0
stamp: i32 [-153619]
stampKind: i32
value: int[-153619|0xfffffffffffda7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
v602 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i201 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i201  <|@  <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.nextEscaped()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?687 <|@
d <@d|@=== Debug Properties ===
bci: 148
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 - i3 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 148
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.nextEscaped
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v332 
stateDuring: ?687 
=== Succesors ===
next: v607 
=== Usages ===
?202 v203 v204 
=== Predecessor ===
v188 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v332 stateDuring: ?687 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i50 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i201 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v605 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid i912 <|@
result int[-154643|0xfffffffffffda3ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -154643
stableDimension: 0
stamp: i32 [-154643]
stampKind: i32
value: int[-154643|0xfffffffffffda3ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i56 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i201 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v609 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v609 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid i917 <|@
result int[-155667|0xfffffffffffd9fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -155667
stableDimension: 0
stamp: i32 [-155667]
stampKind: i32
value: int[-155667|0xfffffffffffd9fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i913 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: i32 [-155667 - -154643] bits:1...10110xxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v910 
values: i912 i917 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v910 values: i912 i917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v911 v916 
=== Succesors ===
next: v915 
=== Usages ===
i913 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v911 v916 #next: v915  <|@  <|@
tid ?202 <|@
d <@d|@=== Debug Properties ===
bci: 151
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i201 a1 i3 - i3 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i201 a1 i3 - i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateBefore: ?202 
actionAndReason: i913 
speculation: j894 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?202 actionAndReason: i913 speculation: j894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 266]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1122 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1122 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 2]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
i248 
=== Predecessor ===
v610 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
=== Inputs ===
x: i1122 
y: i4 
=== Succesors ===
=== Usages ===
v334 ?210 ?690 ?217 ?691 i258 ?688 ?689 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1122 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i248 
stateAfter: - 
=== Succesors ===
next: i209 
=== Usages ===
=== Predecessor ===
i1122 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i248 stateAfter: - #next: i209  <|@  <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>
=== Inputs ===
arguments: a1 i3 i35 i3 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i35 i3  <|@  <|@
tid ?688 <|@
d <@d|@=== Debug Properties ===
bci: 287
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i248 i3 
=== Succesors ===
=== Usages ===
i209 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i209 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 287
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.escape
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v335 
stateDuring: ?688 
=== Succesors ===
next: v615 
=== Usages ===
?210 v211 v336 ?689 v337 
=== Predecessor ===
v334 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v335 stateDuring: ?688 #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i209 
y: i3 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i209 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v211 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
i209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v211 #trueSuccessor: v613 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 290
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i209 a1 i3 i248 i3 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i209 a1 i3 i248 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xbc0a77ff]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 326]}
stamp: void
=== Inputs ===
stateBefore: ?210 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v213  <|@  <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.append(int, int)>
=== Inputs ===
arguments: a1 i209 i3 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i209 i3  <|@  <|@
tid ?689 <|@
d <@d|@=== Debug Properties ===
bci: 301
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2464
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i248 i3 i209 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i248 i3 i209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
bci: 301
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
polymorphic: false
stamp: void
targetMethod: Direct#Pattern.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v336 
stateDuring: ?689 
=== Succesors ===
next: i216 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v336 stateDuring: ?689 #next: i216  <|@  <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.isSupplementary(int)>
=== Inputs ===
arguments: i209 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i209  <|@  <|@
tid ?690 <|@
d <@d|@=== Debug Properties ===
bci: 309
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i35 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 309
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern.isSupplementary
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v337 
stateDuring: ?690 
=== Succesors ===
next: v619 
=== Usages ===
?217 v218 
=== Predecessor ===
v213 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v337 stateDuring: ?690 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i3 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v617 
falseSuccessor: v618 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v617 #falseSuccessor: v618  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i221 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i221  <|@  <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.peek()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?691 <|@
d <@d|@=== Debug Properties ===
bci: 318
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2469
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
i221 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i35 i248 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i221 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 318
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.peek
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v338 
stateDuring: ?691 
=== Succesors ===
next: v223 
=== Usages ===
i259 
=== Predecessor ===
v617 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v338 stateDuring: ?691 #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
i221 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
=== Inputs ===
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v616  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 312
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i216 a1 i35 i248 i3 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i216 a1 i35 i248 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
reason: UnreachedCode
speculation: {0x0000000000001194[index: 140, len: 20, hash: 0xbc0a77f4]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 315]}
stamp: void
=== Inputs ===
stateBefore: ?217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2483) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1123 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1123 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: i1124 
=== Usages ===
v1173 v1172 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v19|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1123 
=== Succesors ===
=== Usages ===
i1124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1124 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-88075|0xfffffffffffea7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
i290 v349 
=== Predecessor ===
a1123 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v1172 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
=== Inputs ===
x: i1118 
y: i35 
=== Succesors ===
=== Usages ===
v357 v359 j460 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1118 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i1117 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i239 y: i1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
i1124 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v546 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1124 
y: i3 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1124 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v552 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v866 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v866  <|@  <|@
f <@~|@floating>@ <|@
tid i867 <|@
result int[-117275|0xfffffffffffe35e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -117275
stableDimension: 0
stamp: i32 [-117275]
stampKind: i32
value: int[-117275|0xfffffffffffe35e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
v356 
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [-2147483647 - 0]
=== Inputs ===
value: i1124 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@jdk.graal.compiler.nodes.calc.NegateNode>@ value: i1124  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i290 
y: i3 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i290 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v621 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v621 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 35]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v19|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1123 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v550 
address: v1173 
lastLocationAccess: - 
value: i1120 
stateAfter: - 
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v550 address: v1173 lastLocationAccess: - value: i1120 stateAfter: - #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1120 
y: i126 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1120 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v232 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v232 #trueSuccessor: v625 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i234 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
resultBits: 16
stamp: i16
=== Inputs ===
value: i1120 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i132 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v236 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v630 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v236 #trueSuccessor: v629 #falseSuccessor: v630  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 16]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: i1125 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i239 stateAfter: - #next: i1125  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i239 
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i239  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v5|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a308 
index: j460 
=== Succesors ===
=== Usages ===
i1125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a308 index: j460  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1125 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
i259 
=== Predecessor ===
v357 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
i1125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i259 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v255 
values: i221 i1125 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v255 values: i221 i1125  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v255 
values: i248 i1118 
=== Succesors ===
=== Usages ===
i267 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v255 values: i248 i1118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v223 v199 
=== Succesors ===
next: v9 
=== Usages ===
i259 i258 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v223 v199 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i268 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i259 i1134 i87 
=== Succesors ===
=== Usages ===
?15 v16 ?123 ?125 i129 v392 v127 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i259 i1134 i87  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i258 i1126 i147 
=== Succesors ===
=== Usages ===
?15 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i258 i1126 i147  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i35 i36 i36 
=== Succesors ===
=== Usages ===
?15 ?692 ?123 ?125 i36 ?49 ?151 v66 i265 v385 j461 i119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i35 i36 i36  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: i1126 
=== Usages ===
i268 i267 v89 i266 v27 v46 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: i1126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 344]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v16 
=== Usages ===
v24 ?125 i267 ?145 i137 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v16  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 12
bytecode: iload
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2422
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 i267 i3 i268 
=== Succesors ===
=== Usages ===
v878 i1130 i1132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 i267 i3 i268  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2485) [bci: 369]
stamp: i32
=== Inputs ===
x: i266 
y: i35 
=== Succesors ===
=== Usages ===
i266 ?145 i266 ?82 ?696 ?695 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i266 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
areKeysContiguous: false
keySuccessors: [I@77986a7f
keys: [I@74cffa0d
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
profileData: PROFILED keyProbabilities: [0.1501714800894255, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.010240072125195695, 0.0, 0.0, 0.0, 0.8395884477853788]
stamp: void
=== Inputs ===
value: i268 
=== Succesors ===
successors: v17 v18 v19 v21 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@IntegerSwitch|@jdk.graal.compiler.nodes.extended.IntegerSwitchNode>@ value: i268 #successors: v17 v18 v19 v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 343]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1127 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.patternLength
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 348]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1170 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
v24 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1170 lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i1127 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1126 y: i1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
i1127 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v634 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i875 <|@
result int[-162067|0xfffffffffffd86ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -162067
stableDimension: 0
stamp: i32 [-162067]
stampKind: i32
value: int[-162067|0xfffffffffffd86ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 147]
stamp: void
=== Inputs ===
=== Succesors ===
next: i48 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i48  <|@  <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.nextEscaped()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?692 <|@
d <@d|@=== Debug Properties ===
bci: 148
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 - i3 
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 - i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i48 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 148
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.nextEscaped
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v369 
stateDuring: ?692 
=== Succesors ===
next: v639 
=== Usages ===
?49 v51 v57 
=== Predecessor ===
v18 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v369 stateDuring: ?692 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i50 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
i48 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid i893 <|@
result int[-162835|0xfffffffffffd83ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -162835
stableDimension: 0
stamp: i32 [-162835]
stampKind: i32
value: int[-162835|0xfffffffffffd83ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i48 
y: i56 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i48 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v641 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v641 #falseSuccessor: v642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 164]
stamp: void
=== Inputs ===
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid i899 <|@
result int[-163859|0xfffffffffffd7fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
rawvalue: -163859
stableDimension: 0
stamp: i32 [-163859]
stampKind: i32
value: int[-163859|0xfffffffffffd7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
v641 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i895 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: i32 [-163859 - -162835] bits:1...101xxxxxx1111101101
valueDescription: i32
=== Inputs ===
merge: v891 
values: i893 i899 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v891 values: i893 i899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v892 v898 
=== Succesors ===
next: v897 
=== Usages ===
i895 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v892 v898 #next: v897  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 151
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
sourceFile: Pattern.java
sourceLine: 2441
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i48 a1 i266 - i3 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i48 a1 i266 - i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2442) [bci: 157]
stamp: void
=== Inputs ===
stateBefore: ?49 
actionAndReason: i895 
speculation: j894 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?49 actionAndReason: i895 speculation: j894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 266]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1128 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 2]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
i147 
=== Predecessor ===
v642 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: i32
=== Inputs ===
x: i1128 
y: i4 
=== Succesors ===
=== Usages ===
v371 ?71 ?695 ?82 ?696 i267 ?693 ?694 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1128 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i147 
stateAfter: - 
=== Succesors ===
next: v647 
=== Usages ===
=== Predecessor ===
i1128 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i147 stateAfter: - #next: v647  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i3 
=== Succesors ===
=== Usages ===
v647 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i266 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v646 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v645 #falseSuccessor: v646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 281]
stamp: void
=== Inputs ===
=== Succesors ===
next: i70 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i70  <|@  <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>
=== Inputs ===
arguments: a1 i3 i35 i3 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 i35 i3  <|@  <|@
tid ?693 <|@
d <@d|@=== Debug Properties ===
bci: 287
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i147 i3 
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i70 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 287
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.escape
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v372 
stateDuring: ?693 
=== Succesors ===
next: v651 
=== Usages ===
?71 v72 v373 ?694 v374 
=== Predecessor ===
v645 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v372 stateDuring: ?693 #next: v651  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i3 
=== Succesors ===
=== Usages ===
v651 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v649 
falseSuccessor: v650 
=== Usages ===
=== Predecessor ===
i70 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v649 #falseSuccessor: v650  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
tid ?71 <|@
d <@d|@=== Debug Properties ===
bci: 290
bytecode: istore
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
sourceFile: Pattern.java
sourceLine: 2462
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i70 a1 i3 i147 i3 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i70 a1 i3 i147 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2463) [bci: 294]
reason: UnreachedCode
speculation: {0x0000000000000f14[index: 120, len: 20, hash: 0xbc0a77ff]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 326]}
stamp: void
=== Inputs ===
stateBefore: ?71 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 297]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.append(int, int)>
=== Inputs ===
arguments: a1 i70 i3 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i70 i3  <|@  <|@
tid ?694 <|@
d <@d|@=== Debug Properties ===
bci: 301
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2464
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i147 i3 i70 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i147 i3 i70  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
bci: 301
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
polymorphic: false
stamp: void
targetMethod: Direct#Pattern.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v373 
stateDuring: ?694 
=== Succesors ===
next: i81 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v373 stateDuring: ?694 #next: i81  <|@  <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.isSupplementary(int)>
=== Inputs ===
arguments: i70 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i70  <|@  <|@
tid ?695 <|@
d <@d|@=== Debug Properties ===
bci: 309
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 309
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
polymorphic: false
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Direct#Pattern.isSupplementary
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v374 
stateDuring: ?695 
=== Succesors ===
next: v655 
=== Usages ===
?82 v83 
=== Predecessor ===
v78 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v374 stateDuring: ?695 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i81 
y: i3 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i81 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v83 
=== Succesors ===
trueSuccessor: v653 
falseSuccessor: v654 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v83 #trueSuccessor: v653 #falseSuccessor: v654  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 317]
stamp: void
=== Inputs ===
=== Succesors ===
next: i87 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i87  <|@  <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Pattern.peek()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
bci: 318
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2469
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i147 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i87 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 318
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
polymorphic: false
stamp: i32
targetMethod: Direct#Pattern.peek
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v375 
stateDuring: ?696 
=== Succesors ===
next: v89 
=== Usages ===
i268 
=== Predecessor ===
v653 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v375 stateDuring: ?696 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i87 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 312
bytecode: ifeq
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
sourceFile: Pattern.java
sourceLine: 2466
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i81 a1 i36 i147 i3 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i81 a1 i36 i147 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
reason: UnreachedCode
speculation: {0x0000000000001194[index: 140, len: 20, hash: 0xbc0a77f4]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 315]}
stamp: void
=== Inputs ===
stateBefore: ?82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v654 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 267
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2460
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 - i3 
=== Succesors ===
=== Usages ===
?149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 - i3  <|@  <|@
tid ?149 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.unread()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.unread(Pattern.java:2196) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
sourceFile: Pattern.java
sourceLine: 2197
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?151 
values: a1 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?151 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 278]
reason: UnreachedCode
speculation: {0x0000000000000c94[index: 100, len: 20, hash: 0xbc0a77d6]: UnreachedCode@6[HotSpotMethod<Pattern.atom()>, 285]}
stamp: void
=== Inputs ===
stateBefore: ?149 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2483) [bci: 357]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1129 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1129 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: i1130 
=== Usages ===
a378 v1175 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v43|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1129 
=== Succesors ===
=== Usages ===
i1130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1130 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-97291|0xfffffffffffe83f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v561 
=== Usages ===
i119 v385 
=== Predecessor ===
a1129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1175 lastLocationAccess: - #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i1130 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i266 y: i1130  <|@  <|@
f <@*|@fixed>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
i1130 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v558 #falseSuccessor: v560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1131 
=== Usages ===
v392 
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.temp
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1165 
lastLocationAccess: - 
=== Succesors ===
next: i1132 
=== Usages ===
a394 v1177 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1165 lastLocationAccess: - #next: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [v45|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1131 
=== Succesors ===
=== Usages ===
i1132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-101643|0xfffffffffffe72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: v569 
=== Usages ===
v401 
=== Predecessor ===
a1131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1177 lastLocationAccess: - #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
=== Inputs ===
x: i1126 
y: i35 
=== Succesors ===
=== Usages ===
v395 ?139 j462 v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1126 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i137 
y: i1132 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i137 y: i1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
i1132 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v566 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v659 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: i32
=== Inputs ===
x: i266 
y: i1130 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i266 y: i1130  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i3 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v657 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v657 #falseSuccessor: v658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 35]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid a378 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2502) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1129 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1129  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i266 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i266  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v48|QWORD[.] + v28|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a378 
index: j461 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a378 index: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v558 
address: v1176 
lastLocationAccess: - 
value: i268 
stateAfter: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v558 address: v1176 lastLocationAccess: - value: i268 stateAfter: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i268 
y: i126 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i268 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v661 
falseSuccessor: v662 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v661 #falseSuccessor: v662  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
resultBits: 16
stamp: i16
=== Inputs ===
value: i268 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i268  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i132 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i129 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v665 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v665 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 16]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Pattern.cursor
location: Pattern.cursor
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1166 
lastLocationAccess: - 
value: i137 
stateAfter: - 
=== Succesors ===
next: i1133 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1166 lastLocationAccess: - value: i137 stateAfter: - #next: i1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1133 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 19]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
v142 
=== Predecessor ===
v395 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 19]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
x: i1133 
y: i112 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1133 y: i112  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 383
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2489
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i36 i1126 i3 
=== Succesors ===
=== Usages ===
?139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i36 i1126 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1131 
=== Succesors ===
=== Usages ===
?139 v1178 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1131  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iaload
code: ResolvedJavaMethodBytecode<Pattern.next()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 12]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
sourceFile: Pattern.java
sourceLine: 2098
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a394 i137 a1 
=== Succesors ===
=== Usages ===
v595 v668 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a394 i137 a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v669 
falseSuccessor: v670 
=== Usages ===
=== Predecessor ===
i1133 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v669 #falseSuccessor: v670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2101) [bci: 31]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
next: i1134 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?139 #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i137 
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [v50|QWORD[.] + v46|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a394 
index: j462 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
i268 
=== Predecessor ===
v595 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1178 lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i1134 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v261  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i265 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v260 
values: i266 i3 
=== Succesors ===
=== Usages ===
?264 v91 i512 i757 v523 v1017 v291 j526 v1150 i828 v728 v756 a983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v260 values: i266 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v261 v262 
=== Succesors ===
next: a1135 
=== Usages ===
i265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v261 v262 #next: a1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1135 <|@
result v54|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.buffer
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 399]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v94 
=== Usages ===
a411 v1179 v1180 
=== Predecessor ===
v260 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v54|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1135 
=== Succesors ===
=== Usages ===
i1137 i1140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v54|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1135 
=== Succesors ===
=== Usages ===
i1136 i1139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1135  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 354
bytecode: goto
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2479
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i265 - i3 
=== Succesors ===
=== Usages ===
v931 v1162 a983 i1136 i1139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i265 - i3  <|@  <|@
f <@~|@floating>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2494) [bci: 393]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i35 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i265 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2494) [bci: 393]
profileData: PROFILED designatedSuccessorProbability: 0.06818919357455788
stamp: void
=== Inputs ===
condition: v91 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
a1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v91 #trueSuccessor: v93 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 396]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1136 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-105739|0xfffffffffffe62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?264 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
v417 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?264 guard: - address: v1179 lastLocationAccess: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1136 
y: i3 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1136 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
i1136 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v576 #falseSuccessor: v574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid i933 <|@
result int[-118555|0xfffffffffffe30e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -118555
stableDimension: 0
stamp: i32 [-118555]
stampKind: i32
value: int[-118555|0xfffffffffffe30e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1137 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: a98 
=== Usages ===
v422 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: a98  <|@  <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
referencedType: [null]
returnStamp: a java.lang.Object (unchecked=a java.util.regex.Pattern$CharPredicate)
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Pattern.single(int)>
=== Inputs ===
arguments: a1 i1137 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i1137  <|@  <|@
tid ?697 <|@
d <@d|@=== Debug Properties ===
bci: 404
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2495
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a98 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 404
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
polymorphic: false
stamp: a java.lang.Object
targetMethod: Direct#Pattern.single
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v422 
stateDuring: ?697 
=== Succesors ===
next: a101 
=== Usages ===
v423 
=== Predecessor ===
i1137 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v422 stateDuring: ?697 #next: a101  <|@  <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
referencedType: [null]
returnStamp: a java.util.regex.Pattern$CharProperty
signature: [HotSpotType<Ljava/util/regex/Pattern;, resolved>, UnresolvedJavaType<Ljava/util/regex/Pattern$CharPredicate;>]
stamp: void
targetMethod: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)>
=== Inputs ===
arguments: a1 a98 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a98  <|@  <|@
tid ?698 <|@
d <@d|@=== Debug Properties ===
bci: 407
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2495
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 407
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
polymorphic: false
stamp: a java.util.regex.Pattern$CharProperty
targetMethod: Direct#Pattern.newCharProperty
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v423 
stateDuring: ?698 
=== Succesors ===
next: v103 
=== Usages ===
v103 
=== Predecessor ===
a98 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v423 stateDuring: ?698 #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 410]
stamp: void
=== Inputs ===
memoryMap: - 
result: a101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a101 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 411]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: j948 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j948 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1010 
=== Usages ===
v1196 v1197 
=== Predecessor ===
v1028 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
j1010 v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1010 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
=== Succesors ===
next: j1011 
=== Usages ===
j955 v1198 v1199 v1200 a982 v1201 v1205 v1202 v1203 v1204 
=== Predecessor ===
j948 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - #next: j1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j948 
index: - 
=== Succesors ===
=== Usages ===
j1011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j948 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1011 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v959 
=== Usages ===
v956 
=== Predecessor ===
j1010 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v959  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i265 
=== Succesors ===
=== Usages ===
j952 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i265  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 6]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 v523 j952 i757 i786 v519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j952 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j526 
y: i153 
=== Succesors ===
=== Usages ===
j993 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j526 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j992 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j993 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j993 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j952 
y: j992 
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j952 y: j992  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j954 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j954 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j993 
y: j953 
=== Succesors ===
=== Usages ===
j955 v971 j995 v1202 v1203 v1204 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j993 y: j953  <|@  <|@
f <@~|@floating>@ <|@
tid j955 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j954 
y: j1010 
=== Succesors ===
=== Usages ===
v956 v1012 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j954 y: j1010  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1011 
y: j955 
=== Succesors ===
=== Usages ===
v959 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1011 y: j955  <|@  <|@
f <@~|@floating>@ <|@
tid j960 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1013 v1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v956 
=== Succesors ===
trueSuccessor: v958 
falseSuccessor: v957 
=== Usages ===
=== Predecessor ===
j1011 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v956 #trueSuccessor: v958 #falseSuccessor: v957  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a983 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a983  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a983 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a983 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?264 
arguments: v947 i265 
=== Succesors ===
next: v1162 
=== Usages ===
v1162 a1008 
=== Predecessor ===
v958 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?264 arguments: v947 i265 #next: v1162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-262257|0xfffffffffffbff8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?264 
object: a983 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
a983 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?264 object: a983 #next: v987  <|@  <|@
f <@*|@fixed>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1012 
=== Usages ===
=== Predecessor ===
v959 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1012  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: j955 
stateAfter: - 
=== Succesors ===
next: v1000 
=== Usages ===
=== Predecessor ===
v957 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: j955 stateAfter: - #next: v1000  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v62|QWORD + v58|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1202 
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1202 #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [v62|QWORD + v58|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1203 
=== Succesors ===
next: v1006 
=== Usages ===
=== Predecessor ===
v1000 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1203 #next: v1006  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v62|QWORD + v58|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j954 
index: j1010 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j954 index: j1010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1204 
=== Succesors ===
next: v1013 
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1204 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [v58|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
value: j960 
stateAfter: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1006 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - value: j960 stateAfter: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [v58|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
value: v1079 
stateAfter: - 
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - value: v1079 stateAfter: - #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v58|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: i265 
stateAfter: - 
=== Succesors ===
next: v966 
=== Usages ===
=== Predecessor ===
v1016 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: i265 stateAfter: - #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid j994 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j995 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j995 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j954 
y: j994 
=== Succesors ===
=== Usages ===
v963 v967 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j954 y: j994  <|@  <|@
f <@~|@floating>@ <|@
tid j997 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j995 
y: j997 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j995 y: j997  <|@  <|@
f <@*|@fixed>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v963 
=== Succesors ===
trueSuccessor: v965 
falseSuccessor: v964 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v963 #trueSuccessor: v965 #falseSuccessor: v964  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid j996 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
v965 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j970 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v969 
values: j323 j979 
=== Succesors ===
=== Usages ===
v971 v1200 j979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v969 values: j323 j979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v968 
=== Succesors ===
next: v977 
=== Usages ===
j970 v976 v980 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v968 #next: v977  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j970 
y: j954 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j970 y: j954  <|@  <|@
f <@*|@fixed>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v972 
falseSuccessor: v976 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v972 #falseSuccessor: v976  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1018 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v58|QWORD + v67|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: j970 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: j970  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: v980 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: j849 stateAfter: - #next: v980  <|@  <|@
f <@~|@floating>@ <|@
tid j979 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j970 
y: j996 
=== Succesors ===
=== Usages ===
j970 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j970 y: j996  <|@  <|@
f <@*|@fixed>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v969 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v969  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v969 
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v969 #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v58|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1010 
index: - 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1010 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1201 
lastLocationAccess: - 
length: j995 
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v964 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1201 lastLocationAccess: - length: j995 #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v975 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v975 #next: v981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a982 
=== Usages ===
=== Predecessor ===
v974 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a982  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a982 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1010 
=== Succesors ===
next: v985 
=== Usages ===
a1008 
=== Predecessor ===
v981 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1010 #next: v985  <|@  <|@
f <@*|@fixed>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
a982 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1008 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v986 
values: a982 a983 
=== Succesors ===
=== Usages ===
v1193 v1195 a682 ?287 v1183 v1181 v1187 v1189 v1191 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v986 values: a982 a983  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3691) [bci: 1]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v985 v987 
=== Succesors ===
next: i1138 
=== Usages ===
a1008 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v985 v987 #next: i1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1138 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.flags0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 1]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1169 
lastLocationAccess: - 
=== Succesors ===
next: v675 
=== Usages ===
v155 
=== Predecessor ===
v986 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1169 lastLocationAccess: - #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.has(Pattern.java:2043) [bci: 6]
at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 7]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
x: i1138 
y: i153 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1138 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v674 
=== Usages ===
=== Predecessor ===
i1138 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v673 #falseSuccessor: v674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 131]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i35 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: PROFILED designatedSuccessorProbability: 0.1428571428571428
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v271 
falseSuccessor: v272 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v271 #falseSuccessor: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v271 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1104 
=== Usages ===
v438 
=== Predecessor ===
v273 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1104  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i265 
y: i4 
=== Succesors ===
=== Usages ===
v1150 v1149 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i265 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i153 
=== Succesors ===
=== Usages ===
v1088 v1104 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j941 <|@
result long[40344|0x9d98] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: 40344
stableDimension: 0
stamp: i64 [40344]
stampKind: i64
value: long[40344|0x9d98]
=== Inputs ===
=== Succesors ===
=== Usages ===
j930 j930 j930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1100 
falseSuccessor: v1103 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1100 #falseSuccessor: v1103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1098 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i265 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1150 
=== Succesors ===
trueSuccessor: v1111 
falseSuccessor: v1108 
=== Usages ===
=== Predecessor ===
v1103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1150 #trueSuccessor: v1111 #falseSuccessor: v1108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1099 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1099  <|@  <|@
f <@*|@fixed>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
v1111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1098 v1099 
=== Succesors ===
next: i1139 
=== Usages ===
v533 v749 v820 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1098 v1099 #next: i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-108811|0xfffffffffffe56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?264 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: v1088 
=== Usages ===
v429 v519 v1149 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?264 guard: - address: v1179 lastLocationAccess: - #next: v1088  <|@  <|@
f <@*|@fixed>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v523 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1087 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v523 #trueSuccessor: v1084 #falseSuccessor: v1087  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1082 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1082  <|@  <|@
f <@*|@fixed>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1096 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1096  <|@  <|@
f <@~|@floating>@ <|@
tid v1149 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i1139 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i1139  <|@  <|@
f <@~|@floating>@ <|@
tid i945 <|@
result int[-112923|0xfffffffffffe46e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -112923
stableDimension: 0
stamp: i32 [-112923]
stampKind: i32
value: int[-112923|0xfffffffffffe46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1149 
=== Succesors ===
trueSuccessor: v1095 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
v1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1149 #trueSuccessor: v1095 #falseSuccessor: v1092  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1094 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1094  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1139 
y: i153 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1139 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v1093 
falseSuccessor: v1085 
=== Usages ===
=== Predecessor ===
v1095 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v1093 #falseSuccessor: v1085  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1083 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1083  <|@  <|@
f <@*|@fixed>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
v1085 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1082 v1083 
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1082 v1083 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1139 
y: i3 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1139 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v590 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v592 #falseSuccessor: v590  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid i943 <|@
result int[-118811|0xfffffffffffe2fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -118811
stableDimension: 0
stamp: i32 [-118811]
stampKind: i32
value: int[-118811|0xfffffffffffe2fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1140 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1140 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
v438 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v71|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1008 
index: - 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v272 
address: v1181 
lastLocationAccess: - 
value: i1140 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
i1140 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v272 address: v1181 lastLocationAccess: - value: i1140 stateAfter: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a411 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 399]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a1135 
=== Succesors ===
=== Usages ===
v1190 v1194 v1192 v1188 v1186 v1182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1135  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 i822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i755 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i755  <|@  <|@
f <@~|@floating>@ <|@
tid i757 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v756 
trueValue: i265 
falseValue: i153 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v756 trueValue: i265 falseValue: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i288 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v158 
values: i35 i169 
=== Succesors ===
=== Usages ===
i169 v161 j466 i707 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v158 values: i35 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 18
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v157 
=== Succesors ===
next: v165 
=== Usages ===
i288 v162 v170 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v157 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i288 
y: i757 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i288 y: i757  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v164 #falseSuccessor: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1141 
=== Usages ===
v533 
=== Predecessor ===
v165 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v1183 v1182 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [v76|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j466 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: v455 
=== Usages ===
v455 
=== Predecessor ===
v164 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1182 lastLocationAccess: - #next: v455  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v164 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v164  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v71|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j466 
=== Succesors ===
=== Usages ===
v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v533 
address: v1183 
lastLocationAccess: - 
value: i1141 
stateAfter: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
i1141 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v533 address: v1183 lastLocationAccess: - value: i1141 stateAfter: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i288 
y: i35 
=== Succesors ===
=== Usages ===
i288 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i288 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v158 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v158 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i827 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i828 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i265 
y: i827 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i265 y: i827  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i707 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v700 
values: i288 i823 
=== Succesors ===
=== Usages ===
v701 i705 j717 i823 i734 i786 i822 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: i288 i823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 158
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v723 
=== Succesors ===
next: v704 
=== Usages ===
v702 v706 i707 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v723 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i707 
y: i828 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i707 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.3333333333333339
stamp: void
=== Inputs ===
condition: v701 
=== Succesors ===
trueSuccessor: v703 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v701 #trueSuccessor: v703 #falseSuccessor: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1142 
=== Usages ===
v820 
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1142  <|@  <|@
f <@~|@floating>@ <|@
tid j717 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i707 
=== Succesors ===
=== Usages ===
v1187 v1186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i707  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
result [v76|QWORD[.] + v82|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j717 
=== Succesors ===
=== Usages ===
i1142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1142 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
=== Succesors ===
next: v716 
=== Usages ===
v716 
=== Predecessor ===
v703 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v703 
=== Succesors ===
=== Usages ===
v774 v803 v716 v816 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v703  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
result [v71|QWORD[.] + v82|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j717 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1187 
lastLocationAccess: - 
value: i1142 
stateAfter: - 
=== Succesors ===
next: i1143 
=== Usages ===
=== Predecessor ===
i1142 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1187 lastLocationAccess: - value: i1142 stateAfter: - #next: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i35 
=== Succesors ===
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i705 
=== Succesors ===
=== Usages ===
v1191 v1190 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i705  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v76|QWORD[.] + v84|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j775 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1190 
lastLocationAccess: - 
=== Succesors ===
next: v774 
=== Usages ===
v774 
=== Predecessor ===
v716 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1190 lastLocationAccess: - #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
result [v71|QWORD[.] + v84|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j775 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j775  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1191 
lastLocationAccess: - 
value: i1143 
stateAfter: - 
=== Succesors ===
next: i1144 
=== Usages ===
=== Predecessor ===
i1143 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1191 lastLocationAccess: - value: i1143 stateAfter: - #next: i1144  <|@  <|@
f <@~|@floating>@ <|@
tid i786 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i153 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j804 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i786 
=== Succesors ===
=== Usages ===
v1193 v1192 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i786  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
result [v76|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j804 
=== Succesors ===
=== Usages ===
i1144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1144 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v803 
=== Usages ===
v803 
=== Predecessor ===
v774 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v803  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
result [v71|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j804 
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1193 
lastLocationAccess: - 
value: i1144 
stateAfter: - 
=== Succesors ===
next: i1145 
=== Usages ===
=== Predecessor ===
i1144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1193 lastLocationAccess: - value: i1144 stateAfter: - #next: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid i822 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i755 
=== Succesors ===
=== Usages ===
j817 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i755  <|@  <|@
f <@~|@floating>@ <|@
tid j817 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i822 
=== Succesors ===
=== Usages ===
v1195 v1194 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i822  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
result [v76|QWORD[.] + v88|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j817 
=== Succesors ===
=== Usages ===
i1145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
v816 
=== Predecessor ===
v803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [v71|QWORD[.] + v88|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j817 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v820 
address: v1195 
lastLocationAccess: - 
value: i1145 
stateAfter: - 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v820 address: v1195 lastLocationAccess: - value: i1145 stateAfter: - #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i823 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i707 
y: i112 
=== Succesors ===
=== Usages ===
i707 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i707 y: i112  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v700 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v700 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v700 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v727 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i734 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v727 
values: i707 i732 
=== Succesors ===
=== Usages ===
v728 i732 j744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v727 values: i707 i732  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 158
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 6.000000000000005
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v750 
=== Succesors ===
next: v731 
=== Usages ===
v729 v733 i734 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v750 #next: v731  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i734 
y: i265 
=== Succesors ===
=== Usages ===
v731 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i734 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 137]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v728 
=== Succesors ===
trueSuccessor: v730 
falseSuccessor: v729 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v728 #trueSuccessor: v730 #falseSuccessor: v729  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 140]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1146 
=== Usages ===
v749 
=== Predecessor ===
v731 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1146  <|@  <|@
f <@~|@floating>@ <|@
tid j744 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i734 
=== Succesors ===
=== Usages ===
v1189 v1188 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i734  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [v76|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a411 
index: j744 
=== Succesors ===
=== Usages ===
i1146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a411 index: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v743 
=== Usages ===
v743 
=== Predecessor ===
v730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1188 lastLocationAccess: - #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
guards: v1097 v730 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1097 v730  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v71|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1008 
index: j744 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1008 index: j744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v749 
address: v1189 
lastLocationAccess: - 
value: i1146 
stateAfter: - 
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v749 address: v1189 lastLocationAccess: - value: i1146 stateAfter: - #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 149]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i32
=== Inputs ===
x: i734 
y: i35 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i734 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3705) [bci: 134]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
loopBegin: v727 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v727 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v731 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v727 #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: v1077 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: v1077  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1059 
=== Usages ===
v1206 v1207 
=== Predecessor ===
v1077 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
j1059 v1061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1059 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: j1060 
=== Usages ===
j1038 v1208 v1209 a1045 v1210 v1211 v1212 
=== Predecessor ===
j1035 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: j1060  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j1035 
index: - 
=== Succesors ===
=== Usages ===
j1060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1060 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
=== Succesors ===
next: v1042 
=== Usages ===
v1039 
=== Predecessor ===
j1059 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - #next: v1042  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1038 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1038 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: i64
=== Inputs ===
x: j1059 
y: j1034 
=== Succesors ===
=== Usages ===
v1039 v1061 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1059 y: j1034  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1060 
y: j1038 
=== Succesors ===
=== Usages ===
v1042 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j1060 y: j1038  <|@  <|@
f <@*|@fixed>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1041 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
j1060 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1041 #falseSuccessor: v1040  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1046 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1046  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 418
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2497
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?287 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?287 <|@
d <@d|@=== Debug Properties ===
bci: 155
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Pattern.newSlice(int[], int, boolean)>
localsSize: 6
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3708
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?286 
values: - - - i3 a1008 
=== Succesors ===
=== Usages ===
v1164 a1046 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?286 values: - - - i3 a1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1033 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1046 <|@
result v97|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?287 
arguments: v1033 
=== Succesors ===
next: v1164 
=== Usages ===
v1164 a1057 
=== Predecessor ===
v1041 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?287 arguments: v1033 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-274801|0xfffffffffffbce8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?287 
object: a1046 
=== Succesors ===
next: v1050 
=== Usages ===
=== Predecessor ===
a1046 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?287 object: a1046 #next: v1050  <|@  <|@
f <@*|@fixed>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
v1164 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
value: j1038 
stateAfter: - 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1040 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - value: j1038 stateAfter: - #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v94|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
address: v1210 
=== Succesors ===
next: v1062 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1210 #next: v1062  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [v94|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
value: j960 
stateAfter: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - value: j960 stateAfter: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
result [v94|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1212 
lastLocationAccess: - 
value: v1080 
stateAfter: - 
=== Succesors ===
next: v1066 
=== Usages ===
=== Predecessor ===
v1062 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1212 lastLocationAccess: - value: v1080 stateAfter: - #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
result [v94|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - value: i3 stateAfter: - #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v94|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j1059 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1059 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
value: j849 
stateAfter: - 
=== Succesors ===
next: a1045 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - value: j849 stateAfter: - #next: a1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1045 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j1059 
=== Succesors ===
next: v1048 
=== Usages ===
a1057 
=== Predecessor ===
v1067 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j1059 #next: v1048  <|@  <|@
f <@*|@fixed>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
a1045 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1057 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v1049 
values: a1045 a1046 
=== Succesors ===
=== Usages ===
v1185 a684 v1184 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v1049 values: a1045 a1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1048 v1050 
=== Succesors ===
next: v683 
=== Usages ===
a1057 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1048 v1050 #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
result [v100|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1057 
index: - 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1057 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a682 <|@
result v101|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a1008 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
value: a682 
stateAfter: - 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - value: a682 stateAfter: - #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v100|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1057 
index: - 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1057 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a686 <|@
result NarrowOop[Pattern.Node@116800333] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
rawvalue: Pattern.Node@116800333
stableDimension: 0
stamp: n!# java.util.regex.Pattern$Node
stampKind: n java.lang.Object
value: NarrowOop[Pattern.Node@116800333]
=== Inputs ===
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 171]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: a686 
stateAfter: - 
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v683 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: a686 stateAfter: - #next: v685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.regex.Pattern.atom() [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a684 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a684 <|@
result v100|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom() [bci: -6] Placeholder
stamp: a!# java.util.regex.Pattern$Slice
=== Inputs ===
object: a1057 
=== Succesors ===
next: v108 
=== Usages ===
v108 
=== Predecessor ===
v685 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1057 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 421]
stamp: void
=== Inputs ===
memoryMap: - 
result: a684 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a684 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 147]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
=== Predecessor ===
v1096 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1092 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3706) [bci: 148]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
result int[-114971|0xfffffffffffe3ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -114971
stableDimension: 0
stamp: i32 [-114971]
stampKind: i32
value: int[-114971|0xfffffffffffe3ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v1108 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.newSlice(Pattern.java:3692) [bci: 10]
at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j936 <|@
result long[35220|0x8994] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: 35220
stableDimension: 0
stamp: i64 [35220]
stampKind: i64
value: long[35220|0x8994]
=== Inputs ===
=== Succesors ===
=== Usages ===
j930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
result int[-172051|0xfffffffffffd5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
rawvalue: -172051
stableDimension: 0
stamp: i32 [-172051]
stampKind: i32
value: int[-172051|0xfffffffffffd5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i929 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i32 [-172051 - -112923] bits:1...1xx0xxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v926 
values: i933 i935 i940 i943 i945 i945 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v926 values: i933 i935 i940 i943 i945 i945  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: i64 [0 - 40344] bits:0...0x00xxx0xx00xxx00
valueDescription: i64
=== Inputs ===
merge: v926 
values: j849 j936 j941 j849 j941 j941 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v926 values: j849 j936 j941 j849 j941 j941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v932 v934 v939 v942 v944 v1113 
=== Succesors ===
next: v931 
=== Usages ===
i929 j930 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v932 v934 v939 v942 v944 v1113 #next: v931  <|@  <|@
f <@*|@fixed>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 403]
stamp: void
=== Inputs ===
stateBefore: ?264 
actionAndReason: i929 
speculation: j930 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?264 actionAndReason: i929 speculation: j930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v671 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2099) [bci: 22]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
reason: UnreachedCode
speculation: {0x0000000000001e14[index: 240, len: 20, hash: 0x9f162ca5]: UnreachedCode@6[HotSpotMethod<Pattern.next()>, 25]}
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v907 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid i908 <|@
result int[-170003|0xfffffffffffd67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -170003
stableDimension: 0
stamp: i32 [-170003]
stampKind: i32
value: int[-170003|0xfffffffffffd67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v666 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid i902 <|@
result int[-168979|0xfffffffffffd6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -168979
stableDimension: 0
stamp: i32 [-168979]
stampKind: i32
value: int[-168979|0xfffffffffffd6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
v662 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i904 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i32 [-170003 - -168979] bits:1...1010110xx1111101101
valueDescription: i32
=== Inputs ===
merge: v900 
values: i902 i908 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v900 values: i902 i908  <|@  <|@
f <@~|@floating>@ <|@
tid j905 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i64 [6420 - 7060] bits:0...0110x1x0010100
valueDescription: i64
=== Inputs ===
merge: v900 
values: j903 j909 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v900 values: j903 j909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v901 v907 
=== Succesors ===
next: v906 
=== Usages ===
i904 j905 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v901 v907 #next: v906  <|@  <|@
tid ?125 <|@
d <@d|@=== Debug Properties ===
bci: 366
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2484
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i266 i1126 i3 i268 
=== Succesors ===
=== Usages ===
?123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i266 i1126 i3 i268  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 42
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.append(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
sourceFile: Pattern.java
sourceLine: 2510
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?125 
values: a1 i268 i266 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?125 values: a1 i268 i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i904 
speculation: j905 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i904 speculation: j905  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i890 <|@
result int[-167955|0xfffffffffffd6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -167955
stableDimension: 0
stamp: i32 [-167955]
stampKind: i32
value: int[-167955|0xfffffffffffd6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v658 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
result int[-102939|0xfffffffffffe6de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -102939
stableDimension: 0
stamp: i32 [-102939]
stampKind: i32
value: int[-102939|0xfffffffffffe6de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v885 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid i886 <|@
result int[-98843|0xfffffffffffe7de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -98843
stableDimension: 0
stamp: i32 [-98843]
stampKind: i32
value: int[-98843|0xfffffffffffe7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v881 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v881  <|@  <|@
f <@~|@floating>@ <|@
tid i882 <|@
result int[-5139|0xffffffffffffebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
rawvalue: -5139
stableDimension: 0
stamp: i32 [-5139]
stampKind: i32
value: int[-5139|0xffffffffffffebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i876 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: i32 [-167955 - -5139] bits:1...1xxxxxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v873 
values: i875 i882 i886 i888 i890 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v873 values: i875 i882 i886 i888 i890  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: i64 [0 - 5780] bits:0...0x0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v873 
values: j855 j865 j849 j849 j872 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v873 values: j855 j865 j849 j849 j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v874 v881 v885 v887 v889 
=== Succesors ===
next: v878 
=== Usages ===
i876 j877 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v874 v881 v885 v887 v889 #next: v878  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2478) [bci: 351]
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i876 
speculation: j877 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v873 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i876 speculation: j877  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:9230) [bci: 3]
at java.util.regex.Pattern.isSupplementary(Pattern.java:2225) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i925 <|@
result int[-160787|0xfffffffffffd8bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -160787
stableDimension: 0
stamp: i32 [-160787]
stampKind: i32
value: int[-160787|0xfffffffffffd8bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i920 <|@
result int[-159763|0xfffffffffffd8fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
rawvalue: -159763
stableDimension: 0
stamp: i32 [-159763]
stampKind: i32
value: int[-159763|0xfffffffffffd8fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
v626 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i921 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i32 [-160787 - -159763] bits:1...10110001x1111101101
valueDescription: i32
=== Inputs ===
merge: v918 
values: i920 i925 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v918 values: i920 i925  <|@  <|@
f <@~|@floating>@ <|@
tid j922 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: i64 [6420 - 7060] bits:0...0110x1x0010100
valueDescription: i64
=== Inputs ===
merge: v918 
values: j903 j909 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v918 values: j903 j909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v919 v924 
=== Succesors ===
next: v923 
=== Usages ===
i921 j922 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v919 v924 #next: v923  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 366
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Pattern.atom()>
localsSize: 7
locksSize: 0
sourceFile: Pattern.java
sourceLine: 2484
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 i1118 i3 i1120 
=== Succesors ===
=== Usages ===
?230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 i1118 i3 i1120  <|@  <|@
tid ?230 <|@
d <@d|@=== Debug Properties ===
bci: 42
bytecode: return
code: ResolvedJavaMethodBytecode<Pattern.append(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2509) [bci: 41]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
sourceFile: Pattern.java
sourceLine: 2510
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?231 
values: a1 i1120 i3 
=== Succesors ===
=== Usages ===
v923 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 i1120 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.isSupplementary(Pattern.java:2224) [bci: 4]
at java.util.regex.Pattern.atom(Pattern.java:2486) [bci: 374]
stamp: void
=== Inputs ===
stateBefore: ?230 
actionAndReason: i921 
speculation: j922 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?230 actionAndReason: i921 speculation: j922  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.append(Pattern.java:2503) [bci: 9]
at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@~|@floating>@ <|@
tid i871 <|@
result int[-158739|0xfffffffffffd93ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -158739
stableDimension: 0
stamp: i32 [-158739]
stampKind: i32
value: int[-158739|0xfffffffffffd93ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
stamp: void
=== Inputs ===
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
result int[-92187|0xfffffffffffe97e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -92187
stableDimension: 0
stamp: i32 [-92187]
stampKind: i32
value: int[-92187|0xfffffffffffe97e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid i864 <|@
result int[-48659|0xffffffffffff41ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659]
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v191 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2070) [bci: 15]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j851 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i859 <|@
result int[-152595|0xfffffffffffdabed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -152595
stableDimension: 0
stamp: i32 [-152595]
stampKind: i32
value: int[-152595|0xfffffffffffdabed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@~|@floating>@ <|@
tid i857 <|@
result int[-81691|0xfffffffffffec0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
rawvalue: -81691
stableDimension: 0
stamp: i32 [-81691]
stampKind: i32
value: int[-81691|0xfffffffffffec0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v846 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i850 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i32 [-158739 - -48659] bits:1...1xxxxxxxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v846 
values: i854 i857 i859 i864 i867 i869 i871 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: i854 i857 i859 i864 i867 i869 i871  <|@  <|@
f <@~|@floating>@ <|@
tid j851 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: i64 [0 - 5780] bits:0...0x0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v846 
values: j855 j849 j860 j865 j849 j849 j872 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v846 values: j855 j849 j860 j865 j849 j849 j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v853 v856 v858 v863 v866 v868 v870 
=== Succesors ===
next: v852 
=== Usages ===
i850 j851 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v853 v856 v858 v863 v866 v868 v870 #next: v852  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.peek(Pattern.java:2069) [bci: 8]
at java.util.regex.Pattern.atom(Pattern.java:2420) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i850 
speculation: j851 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v846 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i850 speculation: j851  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v100|q [0, 1[[420, 422[[496, 498[[540, 541[[544, 546[[570, 572[[1262, 1264[[1328, 1330[[1336, 1338[[1340, 1342[[1366, 1368[[1430, 1432[[1474, 1475[[1478, 1480[[1504, 1506[[1534, 1536[[1570, 1572[[1600, 1601[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v66|q [0, 1[[420, 421[[492, 497[[538, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1426, 1431[[1472, 1475[[1478, 1479[[1504, 1505[[1598, 1601[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v40|d [0, 1[[420, 421[[490, 497[[536, 541[[544, 545[[570, 571[[1326, 1329[[1334, 1337[[1366, 1367[[1424, 1431[[1470, 1475[[1478, 1479[[1504, 1505[[1568, 1570[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[418, 421[[488, 497[[534, 541[[542, 545[[568, 571[[1324, 1329[[1332, 1337[[1364, 1367[[1422, 1431[[1468, 1475[[1476, 1479[[1502, 1505[[1532, 1534[[1566, 1570[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[[1600, 1601[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[420, 421[[494, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1428, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [26, 940[[1266, 1332[[1344, 1510[[1542, 1655[[1656, 1687[[1688, 1719[[1720, 1761[[1762, 1833[[1834, 1875[[1876, 1917[[1918, 1949[[1950, 2021[[2022, 2053[[2054, 2075[[2076, 2117[[2118, 2149[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 48 MustHaveRegister 120 MustHaveRegister 196 MustHaveRegister 250 MustHaveRegister 276 MustHaveRegister 296 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 397 LiveAtLoopEnd 418 ShouldHaveRegister 456 MustHaveRegister 458 MustHaveRegister 488 ShouldHaveRegister 534 ShouldHaveRegister 568 ShouldHaveRegister 575 LiveAtLoopEnd 586 MustHaveRegister 608 MustHaveRegister 632 MustHaveRegister 804 MustHaveRegister 1324 ShouldHaveRegister 1332 ShouldHaveRegister 1364 ShouldHaveRegister 1418 MustHaveRegister 1420 MustHaveRegister 1422 ShouldHaveRegister 1468 ShouldHaveRegister 1502 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [28, 92[28 MustHaveRegister 30 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [30, 126[30 MustHaveRegister 34 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v25|d [32, 201[[598, 608[[1980, 2021[32 MustHaveRegister 34 ShouldHaveRegister 94 MustHaveRegister 124 ShouldHaveRegister 200 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v1|d [92, 198[92 MustHaveRegister 94 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [94, 184[[1980, 2021[94 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 ShouldHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v7|d [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [100, 103[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[v11|q]" v11|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v12|d DWORD "[v12|d]" v12|d rax|q [1368, 1384[[1656, 1666[[1688, 1719[1368 MustHaveRegister 1370 ShouldHaveRegister 1382 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [1698, 1714[1714 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [1418, 1509[[1634, 1655[[1740, 1761[1418 MustHaveRegister 1420 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|q [1432, 1476[[1634, 1655[1432 MustHaveRegister 1434 MustHaveRegister 1470 ShouldHaveRegister 1476 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|q [1480, 1484[[1740, 1761[1480 MustHaveRegister 1482 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d rax|q [1506, 1509[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [120, 168[120 MustHaveRegister 122 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [122, 152[122 MustHaveRegister 138 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v3|d [124, 198[124 MustHaveRegister 126 ShouldHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v20|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v24|d [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v3|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v52|d [212, 352[[576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1876, 1917[[1918, 1928[[2086, 2117[254 ShouldHaveRegister 260 MustHaveRegister 336 MustHaveRegister 338 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v29|d [212, 318[[576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v30|d [212, 352[[398, 462[[576, 597[[1730, 1740[[1762, 1772[[1802, 1833[[1834, 1875[[1876, 1917[[1918, 1928[[2086, 2117[252 ShouldHaveRegister 280 ShouldHaveRegister 314 MustHaveRegister 336 MustHaveRegister 460 MustHaveRegister 596 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v27|d [250, 397[[576, 586[[1666, 1687[[1876, 1917[250 MustHaveRegister 298 ShouldHaveRegister 396 ShouldHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v28|d [252, 397[[398, 575[[1666, 1687[[2054, 2075[252 MustHaveRegister 396 ShouldHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [258, 261[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[v35|q]" v35|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[v36|d]" v36|d rax|q [422, 438[[1834, 1875[422 MustHaveRegister 424 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [1854, 1870[1870 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v38|d [456, 575[[1928, 1949[[2054, 2075[456 MustHaveRegister 458 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d rax|q [498, 542[[1928, 1949[498 MustHaveRegister 500 MustHaveRegister 536 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d rax|q [546, 550[[2054, 2075[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d rax|q [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [276, 334[276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [278, 315[278 MustHaveRegister 280 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [296, 374[296 MustHaveRegister 300 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v29|d [298, 394[[1666, 1687[298 MustHaveRegister 300 MustHaveRegister 370 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v28|d [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v43|d [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [372, 376[372 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v45|d [374, 394[[1666, 1687[374 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [392, 393[392 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[v52|d]" v52|d v26|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v28|d [620, 1150[[1266, 1278[[1542, 1634[[1720, 1730[[1792, 1802[[2022, 2053[634 ShouldHaveRegister 664 ShouldHaveRegister 718 MustHaveRegister 818 ShouldHaveRegister 832 ShouldHaveRegister 834 ShouldHaveRegister 846 MustHaveRegister 882 ShouldHaveRegister 966 ShouldHaveRegister 968 MustHaveRegister 1020 MustHaveRegister 1126 MustHaveRegister 1149 LiveAtLoopEnd 1568 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [632, 964[[1266, 1322[[1542, 1604[632 MustHaveRegister 880 MustHaveRegister 960 MustHaveRegister 964 MustHaveRegister 1276 MustHaveRegister 1322 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [1322, 1326[1322 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q rax|q [1330, 1334[1330 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q rax|q [1338, 1340[1338 MustHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [662, 788[[1578, 1604[662 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 714 MustHaveRegister 716 MustHaveRegister 718 MustHaveRegister 762 MustHaveRegister 767 LiveAtLoopEnd 788 ShouldHaveRegister 1600 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v53|d [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|q [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v61|q [670, 768[670 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 720 MustHaveRegister 744 MustHaveRegister 767 LiveAtLoopEnd  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|q [672, 706[672 MustHaveRegister 674 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [1564, 1566[1564 MustHaveRegister 1566 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q rax|q [1572, 1577[1572 MustHaveRegister 1574 MustHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [720, 724[[1578, 1598[720 MustHaveRegister 722 ShouldHaveRegister 1598 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v68|q [734, 764[744 ShouldHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v67|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v58|q [788, 791[788 MustHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v70|q [792, 1256[[1510, 1542[962 MustHaveRegister 1000 MustHaveRegister 1005 LiveAtLoopEnd 1082 MustHaveRegister 1088 MustHaveRegister 1094 MustHaveRegister 1100 MustHaveRegister 1105 LiveAtLoopEnd 1144 MustHaveRegister 1149 LiveAtLoopEnd 1256 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d -1 [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v53|d [832, 894[832 MustHaveRegister 846 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[v74|d]" v74|d -1 [880, 938[880 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v54|d [964, 1150[964 MustHaveRegister 998 MustHaveRegister 1005 LiveAtLoopEnd 1080 MustHaveRegister 1086 MustHaveRegister 1092 MustHaveRegister 1098 MustHaveRegister 1105 LiveAtLoopEnd 1142 MustHaveRegister 1149 LiveAtLoopEnd  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [968, 1006[968 MustHaveRegister 982 MustHaveRegister 1005 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v80|d [972, 1002[[1006, 1023[982 ShouldHaveRegister 998 MustHaveRegister 1000 MustHaveRegister 1002 ShouldHaveRegister 1022 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [998, 1000[998 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v78|d [1002, 1005[1002 MustHaveRegister 1004 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d -1 [1020, 1106[1020 MustHaveRegister 1034 MustHaveRegister 1105 LiveAtLoopEnd  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d v78|d [1024, 1102[[1106, 1115[1034 ShouldHaveRegister 1080 MustHaveRegister 1082 MustHaveRegister 1084 ShouldHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister 1102 MustHaveRegister 1114 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [1080, 1082[1080 MustHaveRegister 1082 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d v82|d [1084, 1088[1084 MustHaveRegister 1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [1086, 1088[1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [1090, 1094[1090 MustHaveRegister 1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1092, 1094[1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1096, 1100[1096 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d -1 [1102, 1105[1102 MustHaveRegister 1104 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d v82|d [1116, 1146[1126 ShouldHaveRegister 1142 MustHaveRegister 1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [1142, 1144[1142 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d v91|d [1146, 1149[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q -1 [1188, 1228[1188 MustHaveRegister 1190 MustHaveRegister 1218 MustHaveRegister 1220 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister 1226 MustHaveRegister 1228 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [1190, 1216[1190 MustHaveRegister 1192 MustHaveRegister 1216 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [1530, 1532[1530 MustHaveRegister 1532 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q rax|q [1536, 1541[1536 MustHaveRegister 1538 MustHaveRegister 1540 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q v94|q [1228, 1231[1228 MustHaveRegister 1230 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q v99|q [1232, 1262[1258 MustHaveRegister 1260 MustHaveRegister 1262 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v71|q [1256, 1258[1256 MustHaveRegister 1258 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d -1 [2032, 2048[2048 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q -1 [2032, 2050[2050 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d -1 [1896, 1912[1912 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q -1 [1896, 1914[1914 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [2096, 2112[2112 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q -1 [2096, 2114[2114 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d -1 [2000, 2016[2016 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[v109|q]" v109|q -1 [2000, 2018[2018 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [2128, 2144[2144 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[v111|q]" v111|q -1 [2128, 2146[2146 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v100|q [0, 1[[420, 422[[496, 498[[540, 541[[544, 546[[570, 572[[1262, 1264[[1328, 1330[[1336, 1338[[1340, 1342[[1366, 1368[[1430, 1432[[1474, 1475[[1478, 1480[[1504, 1506[[1534, 1536[[1570, 1572[[1600, 1601[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v66|q [0, 1[[420, 421[[492, 497[[538, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1426, 1431[[1472, 1475[[1478, 1479[[1504, 1505[[1598, 1601[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v40|d [0, 1[[420, 421[[490, 497[[536, 541[[544, 545[[570, 571[[1326, 1329[[1334, 1337[[1366, 1367[[1424, 1431[[1470, 1475[[1478, 1479[[1504, 1505[[1568, 1570[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[418, 421[[488, 497[[534, 541[[542, 545[[568, 571[[1324, 1329[[1332, 1337[[1364, 1367[[1422, 1431[[1468, 1475[[1476, 1479[[1502, 1505[[1532, 1534[[1566, 1570[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[[1600, 1601[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[420, 421[[494, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1428, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 417[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 48 MustHaveRegister 120 MustHaveRegister 196 MustHaveRegister 250 MustHaveRegister 276 MustHaveRegister 296 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 397 LiveAtLoopEnd  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d -1 [28, 92[28 MustHaveRegister 30 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [30, 126[30 MustHaveRegister 34 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v25|d [32, 201[[598, 608[[1980, 2021[32 MustHaveRegister 34 ShouldHaveRegister 94 MustHaveRegister 124 ShouldHaveRegister 200 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q v1|d [92, 198[92 MustHaveRegister 94 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [94, 184[[1980, 2021[94 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 ShouldHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v7|d [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [100, 103[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rdi|q]" v11|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v12|d DWORD "[rax|d]" v12|d rax|q [1368, 1384[[1656, 1666[[1688, 1719[1368 MustHaveRegister 1370 ShouldHaveRegister 1382 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [1698, 1714[1714 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v14|d [1418, 1423[1418 MustHaveRegister 1420 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|q [1432, 1473[1432 MustHaveRegister 1434 MustHaveRegister 1470 ShouldHaveRegister  "OneSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1480, 1484[[1740, 1761[1480 MustHaveRegister 1482 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|q [1506, 1509[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [120, 168[120 MustHaveRegister 122 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [122, 152[122 MustHaveRegister 138 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v3|d [124, 198[124 MustHaveRegister 126 ShouldHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d v20|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d v24|d [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v23|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v3|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v52|d [212, 352[254 ShouldHaveRegister 260 MustHaveRegister 336 MustHaveRegister 338 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d v29|d [212, 318[[576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v30|d [212, 352[252 ShouldHaveRegister 280 ShouldHaveRegister 314 MustHaveRegister 336 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[r9|d]" v29|d v27|d [250, 397[[576, 586[[1666, 1687[[1876, 1917[250 MustHaveRegister 298 ShouldHaveRegister 396 ShouldHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v28|d [252, 397[252 MustHaveRegister 396 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v32|d [258, 261[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rdx|q]" v35|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[rax|d]" v36|d rax|q [422, 438[[1834, 1875[422 MustHaveRegister 424 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [1854, 1870[1870 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d v38|d [456, 462[456 MustHaveRegister 458 MustHaveRegister  "OneSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|q [498, 539[498 MustHaveRegister 500 MustHaveRegister 536 ShouldHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|q [546, 550[[2054, 2075[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|q [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [276, 334[276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdi|d]" v44|d -1 [278, 315[278 MustHaveRegister 280 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdx|d]" v45|d -1 [296, 374[296 MustHaveRegister 300 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v29|d [298, 394[[1666, 1687[298 MustHaveRegister 300 MustHaveRegister 370 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rbp|d]" v47|d v28|d [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|d [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [372, 376[372 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q v45|d [374, 394[[1666, 1687[374 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q -1 [392, 393[392 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r10|d]" v52|d v26|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v28|d [620, 1150[[1266, 1278[[1542, 1634[[1720, 1730[[1792, 1802[[2022, 2053[634 ShouldHaveRegister 664 ShouldHaveRegister 718 MustHaveRegister 818 ShouldHaveRegister 832 ShouldHaveRegister 834 ShouldHaveRegister 846 MustHaveRegister 882 ShouldHaveRegister 966 ShouldHaveRegister 968 MustHaveRegister 1020 MustHaveRegister 1126 MustHaveRegister 1149 LiveAtLoopEnd 1568 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [632, 964[[1266, 1322[[1542, 1604[632 MustHaveRegister 880 MustHaveRegister 960 MustHaveRegister 964 MustHaveRegister 1276 MustHaveRegister 1322 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [1322, 1326[1322 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q rax|q [1330, 1334[1330 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [1338, 1340[1338 MustHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r11|q]" v58|q -1 [662, 788[[1578, 1604[662 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 714 MustHaveRegister 716 MustHaveRegister 718 MustHaveRegister 762 MustHaveRegister 767 LiveAtLoopEnd 788 ShouldHaveRegister 1600 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v53|d [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v61|q [670, 768[670 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 720 MustHaveRegister 744 MustHaveRegister 767 LiveAtLoopEnd  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|q [672, 706[672 MustHaveRegister 674 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [1564, 1566[1564 MustHaveRegister 1566 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q rax|q [1572, 1577[1572 MustHaveRegister 1574 MustHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r9|q]" v66|q -1 [720, 724[[1578, 1598[720 MustHaveRegister 722 ShouldHaveRegister 1598 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdx|q]" v67|q v68|q [734, 764[744 ShouldHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q v67|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v58|q [788, 791[788 MustHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r11|q]" v71|q v70|q [792, 1256[[1510, 1542[962 MustHaveRegister 1000 MustHaveRegister 1005 LiveAtLoopEnd 1082 MustHaveRegister 1088 MustHaveRegister 1094 MustHaveRegister 1100 MustHaveRegister 1105 LiveAtLoopEnd 1144 MustHaveRegister 1149 LiveAtLoopEnd 1256 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d -1 [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rax|d]" v73|d v53|d [832, 894[832 MustHaveRegister 846 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d -1 [880, 938[880 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rax|d]" v75|d -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v54|d [964, 1150[964 MustHaveRegister 998 MustHaveRegister 1005 LiveAtLoopEnd 1080 MustHaveRegister 1086 MustHaveRegister 1092 MustHaveRegister 1098 MustHaveRegister 1105 LiveAtLoopEnd 1142 MustHaveRegister 1149 LiveAtLoopEnd  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [968, 1006[968 MustHaveRegister 982 MustHaveRegister 1005 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d v80|d [972, 1002[[1006, 1023[982 ShouldHaveRegister 998 MustHaveRegister 1000 MustHaveRegister 1002 ShouldHaveRegister 1022 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [998, 1000[998 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v78|d [1002, 1005[1002 MustHaveRegister 1004 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d -1 [1020, 1106[1020 MustHaveRegister 1034 MustHaveRegister 1105 LiveAtLoopEnd  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v78|d [1024, 1102[[1106, 1115[1034 ShouldHaveRegister 1080 MustHaveRegister 1082 MustHaveRegister 1084 ShouldHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister 1102 MustHaveRegister 1114 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdx|d]" v83|d -1 [1080, 1082[1080 MustHaveRegister 1082 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d v82|d [1084, 1088[1084 MustHaveRegister 1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r9|d]" v85|d -1 [1086, 1088[1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1090, 1094[1090 MustHaveRegister 1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d -1 [1092, 1094[1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rdx|d]" v88|d -1 [1096, 1100[1096 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r9|d]" v89|d -1 [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d -1 [1102, 1105[1102 MustHaveRegister 1104 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d v82|d [1116, 1146[1126 ShouldHaveRegister 1142 MustHaveRegister 1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rax|d]" v92|d -1 [1142, 1144[1142 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v91|d [1146, 1149[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1188, 1228[1188 MustHaveRegister 1190 MustHaveRegister 1218 MustHaveRegister 1220 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister 1226 MustHaveRegister 1228 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1190, 1216[1190 MustHaveRegister 1192 MustHaveRegister 1216 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [1530, 1532[1530 MustHaveRegister 1532 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rax|q]" v97|q rax|q [1536, 1541[1536 MustHaveRegister 1538 MustHaveRegister 1540 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v94|q [1228, 1231[1228 MustHaveRegister 1230 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q v99|q [1232, 1262[1258 MustHaveRegister 1260 MustHaveRegister 1262 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v71|q [1256, 1258[1256 MustHaveRegister 1258 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [2032, 2048[2048 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r11|q]" v103|q -1 [2032, 2050[2050 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r11|d]" v104|d -1 [1896, 1912[1912 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rcx|q]" v105|q -1 [1896, 1914[1914 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [2096, 2112[2112 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [2096, 2114[2114 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[r10|d]" v108|d -1 [2000, 2016[2016 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [2000, 2018[2018 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [2128, 2144[2144 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [2128, 2146[2146 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[r10|q]" v0|q v0|q [417, 419[418 ShouldHaveRegister  "SpillInDominator"
  v113|d DWORD "[vstack:1|d]" v28|d v28|d [398, 419[ "OneSpillStore"
  v114|d DWORD "[vstack:2|d]" v30|d v30|d [398, 419[ "OneSpillStore"
  v115|d DWORD "[vstack:1|d]" v28|d v28|d [419, 438[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v30|d v30|d [419, 575[[1666, 1687[574 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:0|q]" v0|q v0|q [419, 438[ "SpillInDominator"
  v118|d DWORD "[r10|d]" v26|d v26|d [576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1876, 1917[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v119|q QWORD "[rsi|q]" v0|q v0|q [438, 487[456 MustHaveRegister 458 MustHaveRegister  "SpillInDominator"
  v120|d DWORD "[r8|d]" v28|d v28|d [438, 462[[576, 597[[1730, 1740[[1762, 1772[[1802, 1833[[1834, 1875[[1876, 1917[[1918, 1928[[2086, 2117[460 MustHaveRegister 596 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[rcx|d]" v30|d v30|d [2054, 2075[ "OneSpillStore"
  v122|q QWORD "[r10|q]" v0|q v0|q [487, 495[488 ShouldHaveRegister  "SpillInDominator"
  v123|d DWORD "[vstack:4|d]" v39|d v39|d [462, 489[ "OneSpillStore"
  v124|d DWORD "[vstack:4|d]" v39|d v39|d [489, 495[ "OneSpillStore"
  v125|q QWORD "[vstack:0|q]" v0|q v0|q [495, 576[534 ShouldHaveRegister 568 ShouldHaveRegister 575 LiveAtLoopEnd  "SpillInDominator"
  v126|d DWORD "[vstack:4|d]" v39|d v39|d [495, 575[[1928, 1949[574 ShouldHaveRegister  "OneSpillStore"
  v127|q QWORD "[rsi|q]" v0|q v0|q [576, 940[[1266, 1323[586 MustHaveRegister 608 MustHaveRegister 632 MustHaveRegister 804 MustHaveRegister  "SpillInDominator"
  v128|d DWORD "[rdx|d]" v39|d v39|d [2054, 2075[ "OneSpillStore"
  v129|d DWORD "[vstack:5|d]" v40|d v40|d [539, 542[542 ShouldHaveRegister  "OneSpillStore"
  v130|d DWORD "[rax|d]" v40|d v40|d [1928, 1949[ "OneSpillStore"
  v131|q QWORD "[r10|q]" v0|q v0|q [1323, 1327[1324 ShouldHaveRegister  "SpillInDominator"
  v132|q QWORD "[vstack:0|q]" v0|q v0|q [1327, 1332[[1344, 1384[1332 ShouldHaveRegister 1364 ShouldHaveRegister  "SpillInDominator"
  v133|q QWORD "[rsi|q]" v0|q v0|q [1384, 1421[1418 MustHaveRegister 1420 MustHaveRegister  "SpillInDominator"
  v134|q QWORD "[r10|q]" v0|q v0|q [1421, 1429[1422 ShouldHaveRegister  "SpillInDominator"
  v135|d DWORD "[vstack:6|d]" v15|d v15|d [1423, 1429[ "OneSpillStore"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [1429, 1510[[1542, 1655[[1656, 1687[[1688, 1719[[1720, 1761[[1762, 1833[[1834, 1875[[1876, 1917[[1918, 1949[[1950, 2021[[2022, 2053[[2054, 2075[[2076, 2117[[2118, 2128[1468 ShouldHaveRegister 1502 ShouldHaveRegister  "SpillInDominator"
  v137|d DWORD "[vstack:6|d]" v15|d v15|d [1429, 1509[[1634, 1655[1508 ShouldHaveRegister  "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [2128, 2149[ "SpillInDominator"
  v139|d DWORD "[rdx|d]" v15|d v15|d [1740, 1761[ "OneSpillStore"
  v140|d DWORD "[vstack:7|d]" v16|d v16|d [1473, 1476[1476 ShouldHaveRegister  "OneSpillStore"
  v141|d DWORD "[rax|d]" v16|d v16|d [1634, 1655[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v100|q [0, 1[[420, 422[[496, 498[[540, 541[[544, 546[[570, 572[[1262, 1264[[1328, 1330[[1336, 1338[[1340, 1342[[1366, 1368[[1430, 1432[[1474, 1475[[1478, 1480[[1504, 1506[[1534, 1536[[1570, 1572[[1600, 1601[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v66|q [0, 1[[420, 421[[492, 497[[538, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1426, 1431[[1472, 1475[[1478, 1479[[1504, 1505[[1598, 1601[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v40|d [0, 1[[420, 421[[490, 497[[536, 541[[544, 545[[570, 571[[1326, 1329[[1334, 1337[[1366, 1367[[1424, 1431[[1470, 1475[[1478, 1479[[1504, 1505[[1568, 1570[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[418, 421[[488, 497[[534, 541[[542, 545[[568, 571[[1324, 1329[[1332, 1337[[1364, 1367[[1422, 1431[[1468, 1475[[1476, 1479[[1502, 1505[[1532, 1534[[1566, 1570[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[[1600, 1601[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[420, 421[[494, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1428, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 417[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 48 MustHaveRegister 120 MustHaveRegister 196 MustHaveRegister 250 MustHaveRegister 276 MustHaveRegister 296 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 397 LiveAtLoopEnd  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [28, 92[28 MustHaveRegister 30 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [30, 126[30 MustHaveRegister 34 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v25|d [32, 201[[598, 608[[1980, 2021[32 MustHaveRegister 34 ShouldHaveRegister 94 MustHaveRegister 124 ShouldHaveRegister 200 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q v1|d [92, 198[92 MustHaveRegister 94 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [94, 184[[1980, 2021[94 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 ShouldHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v7|d [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [100, 103[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rdi|q]" v11|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v12|d DWORD "[rax|d]" v12|d rax|q [1368, 1384[[1656, 1666[[1688, 1719[1368 MustHaveRegister 1370 ShouldHaveRegister 1382 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [1698, 1714[1714 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v14|d [1418, 1423[1418 MustHaveRegister 1420 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|q [1432, 1473[1432 MustHaveRegister 1434 MustHaveRegister 1470 ShouldHaveRegister  "OneSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1480, 1484[[1740, 1761[1480 MustHaveRegister 1482 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|q [1506, 1509[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [120, 168[120 MustHaveRegister 122 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [122, 152[122 MustHaveRegister 138 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v3|d [124, 198[124 MustHaveRegister 126 ShouldHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d v20|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d v24|d [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v23|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v3|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v52|d [212, 352[254 ShouldHaveRegister 260 MustHaveRegister 336 MustHaveRegister 338 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d v29|d [212, 318[[576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v30|d [212, 352[252 ShouldHaveRegister 280 ShouldHaveRegister 314 MustHaveRegister 336 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[r9|d]" v29|d v27|d [250, 397[[576, 586[[1666, 1687[[1876, 1917[250 MustHaveRegister 298 ShouldHaveRegister 396 ShouldHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v28|d [252, 397[252 MustHaveRegister 396 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v32|d [258, 261[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rdx|q]" v35|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[rax|d]" v36|d rax|q [422, 438[[1834, 1875[422 MustHaveRegister 424 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [1854, 1870[1870 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d v38|d [456, 462[456 MustHaveRegister 458 MustHaveRegister  "OneSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|q [498, 539[498 MustHaveRegister 500 MustHaveRegister 536 ShouldHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|q [546, 550[[2054, 2075[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|q [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [276, 334[276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdi|d]" v44|d -1 [278, 315[278 MustHaveRegister 280 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdx|d]" v45|d -1 [296, 374[296 MustHaveRegister 300 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v29|d [298, 394[[1666, 1687[298 MustHaveRegister 300 MustHaveRegister 370 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rbp|d]" v47|d v28|d [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|d [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [372, 376[372 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q v45|d [374, 394[[1666, 1687[374 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q -1 [392, 393[392 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r10|d]" v52|d v26|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v28|d [620, 1150[[1266, 1278[[1542, 1634[[1720, 1730[[1792, 1802[[2022, 2053[634 ShouldHaveRegister 664 ShouldHaveRegister 718 MustHaveRegister 818 ShouldHaveRegister 832 ShouldHaveRegister 834 ShouldHaveRegister 846 MustHaveRegister 882 ShouldHaveRegister 966 ShouldHaveRegister 968 MustHaveRegister 1020 MustHaveRegister 1126 MustHaveRegister 1149 LiveAtLoopEnd 1568 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [632, 964[[1266, 1322[[1542, 1604[632 MustHaveRegister 880 MustHaveRegister 960 MustHaveRegister 964 MustHaveRegister 1276 MustHaveRegister 1322 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [1322, 1326[1322 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q rax|q [1330, 1334[1330 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [1338, 1340[1338 MustHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r11|q]" v58|q -1 [662, 788[[1578, 1604[662 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 714 MustHaveRegister 716 MustHaveRegister 718 MustHaveRegister 762 MustHaveRegister 767 LiveAtLoopEnd 788 ShouldHaveRegister 1600 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v53|d [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v61|q [670, 768[670 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 720 MustHaveRegister 744 MustHaveRegister 767 LiveAtLoopEnd  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|q [672, 706[672 MustHaveRegister 674 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [1564, 1566[1564 MustHaveRegister 1566 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q rax|q [1572, 1577[1572 MustHaveRegister 1574 MustHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r9|q]" v66|q -1 [720, 724[[1578, 1598[720 MustHaveRegister 722 ShouldHaveRegister 1598 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdx|q]" v67|q v68|q [734, 764[744 ShouldHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q v67|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v58|q [788, 791[788 MustHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r11|q]" v71|q v70|q [792, 1256[[1510, 1542[962 MustHaveRegister 1000 MustHaveRegister 1005 LiveAtLoopEnd 1082 MustHaveRegister 1088 MustHaveRegister 1094 MustHaveRegister 1100 MustHaveRegister 1105 LiveAtLoopEnd 1144 MustHaveRegister 1149 LiveAtLoopEnd 1256 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d -1 [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rax|d]" v73|d v53|d [832, 894[832 MustHaveRegister 846 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d -1 [880, 938[880 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rax|d]" v75|d -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v54|d [964, 1150[964 MustHaveRegister 998 MustHaveRegister 1005 LiveAtLoopEnd 1080 MustHaveRegister 1086 MustHaveRegister 1092 MustHaveRegister 1098 MustHaveRegister 1105 LiveAtLoopEnd 1142 MustHaveRegister 1149 LiveAtLoopEnd  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [968, 1006[968 MustHaveRegister 982 MustHaveRegister 1005 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d v80|d [972, 1002[[1006, 1023[982 ShouldHaveRegister 998 MustHaveRegister 1000 MustHaveRegister 1002 ShouldHaveRegister 1022 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [998, 1000[998 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v78|d [1002, 1005[1002 MustHaveRegister 1004 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d -1 [1020, 1106[1020 MustHaveRegister 1034 MustHaveRegister 1105 LiveAtLoopEnd  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v78|d [1024, 1102[[1106, 1115[1034 ShouldHaveRegister 1080 MustHaveRegister 1082 MustHaveRegister 1084 ShouldHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister 1102 MustHaveRegister 1114 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdx|d]" v83|d -1 [1080, 1082[1080 MustHaveRegister 1082 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d v82|d [1084, 1088[1084 MustHaveRegister 1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r9|d]" v85|d -1 [1086, 1088[1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1090, 1094[1090 MustHaveRegister 1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d -1 [1092, 1094[1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rdx|d]" v88|d -1 [1096, 1100[1096 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r9|d]" v89|d -1 [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d -1 [1102, 1105[1102 MustHaveRegister 1104 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d v82|d [1116, 1146[1126 ShouldHaveRegister 1142 MustHaveRegister 1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rax|d]" v92|d -1 [1142, 1144[1142 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v91|d [1146, 1149[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1188, 1228[1188 MustHaveRegister 1190 MustHaveRegister 1218 MustHaveRegister 1220 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister 1226 MustHaveRegister 1228 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1190, 1216[1190 MustHaveRegister 1192 MustHaveRegister 1216 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [1530, 1532[1530 MustHaveRegister 1532 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rax|q]" v97|q rax|q [1536, 1541[1536 MustHaveRegister 1538 MustHaveRegister 1540 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v94|q [1228, 1231[1228 MustHaveRegister 1230 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q v99|q [1232, 1262[1258 MustHaveRegister 1260 MustHaveRegister 1262 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v71|q [1256, 1258[1256 MustHaveRegister 1258 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [2032, 2048[2048 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r11|q]" v103|q -1 [2032, 2050[2050 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r11|d]" v104|d -1 [1896, 1912[1912 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rcx|q]" v105|q -1 [1896, 1914[1914 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [2096, 2112[2112 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [2096, 2114[2114 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[r10|d]" v108|d -1 [2000, 2016[2016 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [2000, 2018[2018 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [2128, 2144[2144 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [2128, 2146[2146 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[r10|q]" v0|q v0|q [417, 419[418 ShouldHaveRegister  "StoreAtDefinition"
  v113|d DWORD "[vstack:1|d]" v28|d v28|d [398, 419[ "OneSpillStore"
  v114|d DWORD "[vstack:2|d]" v30|d v30|d [398, 419[ "OneSpillStore"
  v115|d DWORD "[vstack:1|d]" v28|d v28|d [419, 438[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v30|d v30|d [419, 575[[1666, 1687[574 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:0|q]" v0|q v0|q [419, 438[ "StoreAtDefinition"
  v118|d DWORD "[r10|d]" v26|d v26|d [576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1876, 1917[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v119|q QWORD "[rsi|q]" v0|q v0|q [438, 487[456 MustHaveRegister 458 MustHaveRegister  "StoreAtDefinition"
  v120|d DWORD "[r8|d]" v28|d v28|d [438, 462[[576, 597[[1730, 1740[[1762, 1772[[1802, 1833[[1834, 1875[[1876, 1917[[1918, 1928[[2086, 2117[460 MustHaveRegister 596 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[rcx|d]" v30|d v30|d [2054, 2075[ "OneSpillStore"
  v122|q QWORD "[r10|q]" v0|q v0|q [487, 495[488 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[vstack:4|d]" v39|d v39|d [462, 489[ "OneSpillStore"
  v124|d DWORD "[vstack:4|d]" v39|d v39|d [489, 495[ "OneSpillStore"
  v125|q QWORD "[vstack:0|q]" v0|q v0|q [495, 576[534 ShouldHaveRegister 568 ShouldHaveRegister 575 LiveAtLoopEnd  "StoreAtDefinition"
  v126|d DWORD "[vstack:4|d]" v39|d v39|d [495, 575[[1928, 1949[574 ShouldHaveRegister  "OneSpillStore"
  v127|q QWORD "[rsi|q]" v0|q v0|q [576, 940[[1266, 1323[586 MustHaveRegister 608 MustHaveRegister 632 MustHaveRegister 804 MustHaveRegister  "StoreAtDefinition"
  v128|d DWORD "[rdx|d]" v39|d v39|d [2054, 2075[ "OneSpillStore"
  v129|d DWORD "[vstack:5|d]" v40|d v40|d [539, 542[542 ShouldHaveRegister  "OneSpillStore"
  v130|d DWORD "[rax|d]" v40|d v40|d [1928, 1949[ "OneSpillStore"
  v131|q QWORD "[r10|q]" v0|q v0|q [1323, 1327[1324 ShouldHaveRegister  "StoreAtDefinition"
  v132|q QWORD "[vstack:0|q]" v0|q v0|q [1327, 1332[[1344, 1384[1332 ShouldHaveRegister 1364 ShouldHaveRegister  "StoreAtDefinition"
  v133|q QWORD "[rsi|q]" v0|q v0|q [1384, 1421[1418 MustHaveRegister 1420 MustHaveRegister  "StoreAtDefinition"
  v134|q QWORD "[r10|q]" v0|q v0|q [1421, 1429[1422 ShouldHaveRegister  "StoreAtDefinition"
  v135|d DWORD "[vstack:6|d]" v15|d v15|d [1423, 1429[ "OneSpillStore"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [1429, 1510[[1542, 1655[[1656, 1687[[1688, 1719[[1720, 1761[[1762, 1833[[1834, 1875[[1876, 1917[[1918, 1949[[1950, 2021[[2022, 2053[[2054, 2075[[2076, 2117[[2118, 2128[1468 ShouldHaveRegister 1502 ShouldHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:6|d]" v15|d v15|d [1429, 1509[[1634, 1655[1508 ShouldHaveRegister  "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [2128, 2149[ "StoreAtDefinition"
  v139|d DWORD "[rdx|d]" v15|d v15|d [1740, 1761[ "OneSpillStore"
  v140|d DWORD "[vstack:7|d]" v16|d v16|d [1473, 1476[1476 ShouldHaveRegister  "OneSpillStore"
  v141|d DWORD "[rax|d]" v16|d v16|d [1634, 1655[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v23|DWORD, v3|DWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v25|DWORD, int[1|0x1]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v52|DWORD, v29|DWORD, v30|DWORD] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [v42|DWORD, v39|DWORD, v30|DWORD] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [v28|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [v68|QWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [v70|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [v80|DWORD] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [v90|DWORD] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [v82|DWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [v93|DWORD] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [v99|QWORD[.]] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [v18|DWORD, v15|DWORD] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [v97|QWORD[.]] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [v65|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [int[-112923|0xfffffffffffe46e5], long[40344|0x9d98]] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [int[-118811|0xfffffffffffe2fe5], long[0|0x0]] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [int[-155667|0xfffffffffffd9fed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [int[-154643|0xfffffffffffda3ed]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [int[-114971|0xfffffffffffe3ee5], long[40344|0x9d98]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [int[-98843|0xfffffffffffe7de5], long[0|0x0]] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [int[-5139|0xffffffffffffebed], long[20|0x14]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [int[-81691|0xfffffffffffec0e5], long[0|0x0]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [int[-92187|0xfffffffffffe97e5], long[0|0x0]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [int[-118555|0xfffffffffffe30e5], long[0|0x0]] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [int[-162067|0xfffffffffffd86ed], long[1300|0x514]] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [int[-163859|0xfffffffffffd7fed]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [int[-162835|0xfffffffffffd83ed]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [int[-170003|0xfffffffffffd67ed], long[7060|0x1b94]] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [int[-168979|0xfffffffffffd6bed], long[6420|0x1914]] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [int[-102939|0xfffffffffffe6de5], long[0|0x0]] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [int[-48659|0xffffffffffff41ed], long[20|0x14]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [int[-117275|0xfffffffffffe35e5], long[0|0x0]] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [int[-152595|0xfffffffffffdabed], long[5140|0x1414]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [int[-160787|0xfffffffffffd8bed], long[7060|0x1b94]] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [int[-159763|0xfffffffffffd8fed], long[6420|0x1914]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [int[-172051|0xfffffffffffd5fed], long[35220|0x8994]] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [int[-158739|0xfffffffffffd93ed], long[5780|0x1694]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [int[-167955|0xfffffffffffd6fed], long[5780|0x1694]] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [int[-153619|0xfffffffffffda7ed], long[1300|0x514]] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v100|q [0, 1[[420, 422[[496, 498[[540, 541[[544, 546[[570, 572[[1262, 1264[[1328, 1330[[1336, 1338[[1340, 1342[[1366, 1368[[1430, 1432[[1474, 1475[[1478, 1480[[1504, 1506[[1534, 1536[[1570, 1572[[1600, 1601[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v66|q [0, 1[[420, 421[[492, 497[[538, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1426, 1431[[1472, 1475[[1478, 1479[[1504, 1505[[1598, 1601[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v40|d [0, 1[[420, 421[[490, 497[[536, 541[[544, 545[[570, 571[[1326, 1329[[1334, 1337[[1366, 1367[[1424, 1431[[1470, 1475[[1478, 1479[[1504, 1505[[1568, 1570[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 26[[418, 421[[488, 497[[534, 541[[542, 545[[568, 571[[1324, 1329[[1332, 1337[[1364, 1367[[1422, 1431[[1468, 1475[[1476, 1479[[1502, 1505[[1532, 1534[[1566, 1570[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[[1600, 1601[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[420, 421[[494, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1428, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[[496, 497[[540, 541[[544, 545[[570, 571[[1328, 1329[[1336, 1337[[1366, 1367[[1430, 1431[[1474, 1475[[1478, 1479[[1504, 1505[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [26, 417[26 MustHaveRegister 28 MustHaveRegister 32 MustHaveRegister 48 MustHaveRegister 120 MustHaveRegister 196 MustHaveRegister 250 MustHaveRegister 276 MustHaveRegister 296 MustHaveRegister 370 MustHaveRegister 372 MustHaveRegister 397 LiveAtLoopEnd  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [28, 92[28 MustHaveRegister 30 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [30, 126[30 MustHaveRegister 34 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d v25|d [32, 201[[598, 608[[1980, 2021[32 MustHaveRegister 34 ShouldHaveRegister 94 MustHaveRegister 124 ShouldHaveRegister 200 ShouldHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q v1|d [92, 198[92 MustHaveRegister 94 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [94, 184[[1980, 2021[94 MustHaveRegister 96 ShouldHaveRegister 102 MustHaveRegister 168 MustHaveRegister 170 ShouldHaveRegister 182 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rcx|d]" v7|d -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rcx|d]" v8|d v7|d [98, 100[98 MustHaveRegister 100 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v8|d [100, 103[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rdi|q]" v11|q -1 [102, 103[102 MustHaveRegister  "NoDefinitionFound"
  v12|d DWORD "[rax|d]" v12|d rax|q [1368, 1384[[1656, 1666[[1688, 1719[1368 MustHaveRegister 1370 ShouldHaveRegister 1382 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [1698, 1714[1714 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v14|d [1418, 1423[1418 MustHaveRegister 1420 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|q [1432, 1473[1432 MustHaveRegister 1434 MustHaveRegister 1470 ShouldHaveRegister  "OneSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1480, 1484[[1740, 1761[1480 MustHaveRegister 1482 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d rax|q [1506, 1509[1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rcx|d]" v19|d -1 [120, 168[120 MustHaveRegister 122 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbx|d]" v20|d -1 [122, 152[122 MustHaveRegister 138 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rdi|d]" v21|d v3|d [124, 198[124 MustHaveRegister 126 ShouldHaveRegister 196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rbx|d]" v22|d v20|d [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d v24|d [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r10|d]" v24|d v23|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v3|d [202, 211[210 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[r10|d]" v26|d v52|d [212, 352[254 ShouldHaveRegister 260 MustHaveRegister 336 MustHaveRegister 338 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d v29|d [212, 318[[576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d v30|d [212, 352[252 ShouldHaveRegister 280 ShouldHaveRegister 314 MustHaveRegister 336 MustHaveRegister  "OneSpillStore"
  v29|d DWORD "[r9|d]" v29|d v27|d [250, 397[[576, 586[[1666, 1687[[1876, 1917[250 MustHaveRegister 298 ShouldHaveRegister 396 ShouldHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v28|d [252, 397[252 MustHaveRegister 396 ShouldHaveRegister  "OneSpillStore"
  v31|d DWORD "[rbx|d]" v31|d -1 [254, 256[254 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[rbx|d]" v33|d v32|d [258, 261[258 MustHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rdx|q]" v35|q -1 [260, 261[260 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[rax|d]" v36|d rax|q [422, 438[[1834, 1875[422 MustHaveRegister 424 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r10|d]" v37|d -1 [1854, 1870[1870 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdx|d]" v39|d v38|d [456, 462[456 MustHaveRegister 458 MustHaveRegister  "OneSpillStore"
  v40|d DWORD "[rax|d]" v40|d rax|q [498, 539[498 MustHaveRegister 500 MustHaveRegister 536 ShouldHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d rax|q [546, 550[[2054, 2075[546 MustHaveRegister 548 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rax|d]" v42|d rax|q [572, 575[572 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d -1 [276, 334[276 MustHaveRegister 278 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdi|d]" v44|d -1 [278, 315[278 MustHaveRegister 280 MustHaveRegister 314 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdx|d]" v45|d -1 [296, 374[296 MustHaveRegister 300 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d v29|d [298, 394[[1666, 1687[298 MustHaveRegister 300 MustHaveRegister 370 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rbp|d]" v47|d v28|d [314, 316[314 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|d [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r10|d]" v49|d -1 [372, 376[372 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q v45|d [374, 394[[1666, 1687[374 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q -1 [392, 393[392 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[r10|d]" v52|d v26|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d v28|d [620, 1150[[1266, 1278[[1542, 1634[[1720, 1730[[1792, 1802[[2022, 2053[634 ShouldHaveRegister 664 ShouldHaveRegister 718 MustHaveRegister 818 ShouldHaveRegister 832 ShouldHaveRegister 834 ShouldHaveRegister 846 MustHaveRegister 882 ShouldHaveRegister 966 ShouldHaveRegister 968 MustHaveRegister 1020 MustHaveRegister 1126 MustHaveRegister 1149 LiveAtLoopEnd 1568 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [632, 964[[1266, 1322[[1542, 1604[632 MustHaveRegister 880 MustHaveRegister 960 MustHaveRegister 964 MustHaveRegister 1276 MustHaveRegister 1322 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rdx|d]" v55|d -1 [1322, 1326[1322 MustHaveRegister 1326 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q rax|q [1330, 1334[1330 MustHaveRegister 1334 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q rax|q [1338, 1340[1338 MustHaveRegister 1340 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[r11|q]" v58|q -1 [662, 788[[1578, 1604[662 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 714 MustHaveRegister 716 MustHaveRegister 718 MustHaveRegister 762 MustHaveRegister 767 LiveAtLoopEnd 788 ShouldHaveRegister 1600 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v53|d [664, 666[664 MustHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [666, 668[666 MustHaveRegister 668 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [668, 670[668 MustHaveRegister 670 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v61|q [670, 768[670 MustHaveRegister 672 ShouldHaveRegister 708 MustHaveRegister 710 MustHaveRegister 712 MustHaveRegister 720 MustHaveRegister 744 MustHaveRegister 767 LiveAtLoopEnd  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v62|q [672, 706[672 MustHaveRegister 674 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q -1 [1564, 1566[1564 MustHaveRegister 1566 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q rax|q [1572, 1577[1572 MustHaveRegister 1574 MustHaveRegister 1576 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[r9|q]" v66|q -1 [720, 724[[1578, 1598[720 MustHaveRegister 722 ShouldHaveRegister 1598 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdx|q]" v67|q v68|q [734, 764[744 ShouldHaveRegister 762 MustHaveRegister 764 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q v67|q [764, 767[764 MustHaveRegister 766 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r11|q]" v70|q v58|q [788, 791[788 MustHaveRegister 790 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[r11|q]" v71|q v70|q [792, 1256[[1510, 1542[962 MustHaveRegister 1000 MustHaveRegister 1005 LiveAtLoopEnd 1082 MustHaveRegister 1088 MustHaveRegister 1094 MustHaveRegister 1100 MustHaveRegister 1105 LiveAtLoopEnd 1144 MustHaveRegister 1149 LiveAtLoopEnd 1256 MustHaveRegister  "NoSpillStore"
  v72|d DWORD "[rax|d]" v72|d -1 [804, 806[804 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rax|d]" v73|d v53|d [832, 894[832 MustHaveRegister 846 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v74|d DWORD "[rdx|d]" v74|d -1 [880, 938[880 MustHaveRegister 894 MustHaveRegister 906 ShouldHaveRegister 938 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rax|d]" v75|d -1 [960, 962[960 MustHaveRegister 962 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[r10|q]" v76|q v54|d [964, 1150[964 MustHaveRegister 998 MustHaveRegister 1005 LiveAtLoopEnd 1080 MustHaveRegister 1086 MustHaveRegister 1092 MustHaveRegister 1098 MustHaveRegister 1105 LiveAtLoopEnd 1142 MustHaveRegister 1149 LiveAtLoopEnd  "NoSpillStore"
  v77|d DWORD "[rax|d]" v77|d -1 [968, 1006[968 MustHaveRegister 982 MustHaveRegister 1005 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rsi|d]" v78|d v80|d [972, 1002[[1006, 1023[982 ShouldHaveRegister 998 MustHaveRegister 1000 MustHaveRegister 1002 ShouldHaveRegister 1022 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rdx|d]" v79|d -1 [998, 1000[998 MustHaveRegister 1000 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v78|d [1002, 1005[1002 MustHaveRegister 1004 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d -1 [1020, 1106[1020 MustHaveRegister 1034 MustHaveRegister 1105 LiveAtLoopEnd  "NoSpillStore"
  v82|d DWORD "[rsi|d]" v82|d v78|d [1024, 1102[[1106, 1115[1034 ShouldHaveRegister 1080 MustHaveRegister 1082 MustHaveRegister 1084 ShouldHaveRegister 1090 MustHaveRegister 1096 MustHaveRegister 1102 MustHaveRegister 1114 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[rdx|d]" v83|d -1 [1080, 1082[1080 MustHaveRegister 1082 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[rdx|d]" v84|d v82|d [1084, 1088[1084 MustHaveRegister 1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r9|d]" v85|d -1 [1086, 1088[1086 MustHaveRegister 1088 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[rdx|d]" v86|d -1 [1090, 1094[1090 MustHaveRegister 1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r9|d]" v87|d -1 [1092, 1094[1092 MustHaveRegister 1094 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[rdx|d]" v88|d -1 [1096, 1100[1096 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r9|d]" v89|d -1 [1098, 1100[1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[rsi|d]" v90|d -1 [1102, 1105[1102 MustHaveRegister 1104 ShouldHaveRegister  "NoSpillStore"
  v91|d DWORD "[rsi|d]" v91|d v82|d [1116, 1146[1126 ShouldHaveRegister 1142 MustHaveRegister 1144 MustHaveRegister 1146 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[rax|d]" v92|d -1 [1142, 1144[1142 MustHaveRegister 1144 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[rsi|d]" v93|d v91|d [1146, 1149[1146 MustHaveRegister 1148 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q -1 [1188, 1228[1188 MustHaveRegister 1190 MustHaveRegister 1218 MustHaveRegister 1220 MustHaveRegister 1222 MustHaveRegister 1224 MustHaveRegister 1226 MustHaveRegister 1228 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q -1 [1190, 1216[1190 MustHaveRegister 1192 MustHaveRegister 1216 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rsi|q]" v96|q -1 [1530, 1532[1530 MustHaveRegister 1532 ShouldHaveRegister  "NoSpillStore"
  v97|q QWORD "[rax|q]" v97|q rax|q [1536, 1541[1536 MustHaveRegister 1538 MustHaveRegister 1540 ShouldHaveRegister  "NoSpillStore"
  v99|q QWORD "[rax|q]" v99|q v94|q [1228, 1231[1228 MustHaveRegister 1230 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rax|q]" v100|q v99|q [1232, 1262[1258 MustHaveRegister 1260 MustHaveRegister 1262 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[r11|d]" v101|d v71|q [1256, 1258[1256 MustHaveRegister 1258 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [2032, 2048[2048 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r11|q]" v103|q -1 [2032, 2050[2050 MustHaveRegister  "NoSpillStore"
  v104|d DWORD "[r11|d]" v104|d -1 [1896, 1912[1912 MustHaveRegister  "NoSpillStore"
  v105|q QWORD "[rcx|q]" v105|q -1 [1896, 1914[1914 MustHaveRegister  "NoSpillStore"
  v106|d DWORD "[r9|d]" v106|d -1 [2096, 2112[2112 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rcx|q]" v107|q -1 [2096, 2114[2114 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[r10|d]" v108|d -1 [2000, 2016[2016 MustHaveRegister  "NoSpillStore"
  v109|q QWORD "[r11|q]" v109|q -1 [2000, 2018[2018 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[r10|d]" v110|d -1 [2128, 2144[2144 MustHaveRegister  "NoSpillStore"
  v111|q QWORD "[r11|q]" v111|q -1 [2128, 2146[2146 MustHaveRegister  "NoSpillStore"
  v112|q QWORD "[r10|q]" v0|q v0|q [417, 419[418 ShouldHaveRegister  "StoreAtDefinition"
  v113|d DWORD "[vstack:1|d]" v28|d v28|d [398, 419[ "OneSpillStore"
  v114|d DWORD "[vstack:2|d]" v30|d v30|d [398, 419[ "OneSpillStore"
  v115|d DWORD "[vstack:1|d]" v28|d v28|d [419, 438[ "OneSpillStore"
  v116|d DWORD "[vstack:2|d]" v30|d v30|d [419, 575[[1666, 1687[574 ShouldHaveRegister  "OneSpillStore"
  v117|q QWORD "[vstack:0|q]" v0|q v0|q [419, 438[ "StoreAtDefinition"
  v118|d DWORD "[r10|d]" v26|d v26|d [576, 588[[1730, 1740[[1762, 1772[[1802, 1812[[1876, 1917[[1918, 1928[[2086, 2117[ "NoSpillStore"
  v119|q QWORD "[rsi|q]" v0|q v0|q [438, 487[456 MustHaveRegister 458 MustHaveRegister  "StoreAtDefinition"
  v120|d DWORD "[r8|d]" v28|d v28|d [438, 462[[576, 597[[1730, 1740[[1762, 1772[[1802, 1833[[1834, 1875[[1876, 1917[[1918, 1928[[2086, 2117[460 MustHaveRegister 596 ShouldHaveRegister  "OneSpillStore"
  v121|d DWORD "[rcx|d]" v30|d v30|d [2054, 2075[ "OneSpillStore"
  v122|q QWORD "[r10|q]" v0|q v0|q [487, 495[488 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[vstack:4|d]" v39|d v39|d [462, 489[ "OneSpillStore"
  v124|d DWORD "[vstack:4|d]" v39|d v39|d [489, 495[ "OneSpillStore"
  v125|q QWORD "[vstack:0|q]" v0|q v0|q [495, 576[534 ShouldHaveRegister 568 ShouldHaveRegister 575 LiveAtLoopEnd  "StoreAtDefinition"
  v126|d DWORD "[vstack:4|d]" v39|d v39|d [495, 575[[1928, 1949[574 ShouldHaveRegister  "OneSpillStore"
  v127|q QWORD "[rsi|q]" v0|q v0|q [576, 940[[1266, 1323[586 MustHaveRegister 608 MustHaveRegister 632 MustHaveRegister 804 MustHaveRegister  "StoreAtDefinition"
  v128|d DWORD "[rdx|d]" v39|d v39|d [2054, 2075[ "OneSpillStore"
  v129|d DWORD "[vstack:5|d]" v40|d v40|d [539, 542[542 ShouldHaveRegister  "OneSpillStore"
  v130|d DWORD "[rax|d]" v40|d v40|d [1928, 1949[ "OneSpillStore"
  v131|q QWORD "[r10|q]" v0|q v0|q [1323, 1327[1324 ShouldHaveRegister  "StoreAtDefinition"
  v132|q QWORD "[vstack:0|q]" v0|q v0|q [1327, 1332[[1344, 1384[1332 ShouldHaveRegister 1364 ShouldHaveRegister  "StoreAtDefinition"
  v133|q QWORD "[rsi|q]" v0|q v0|q [1384, 1421[1418 MustHaveRegister 1420 MustHaveRegister  "StoreAtDefinition"
  v134|q QWORD "[r10|q]" v0|q v0|q [1421, 1429[1422 ShouldHaveRegister  "StoreAtDefinition"
  v135|d DWORD "[vstack:6|d]" v15|d v15|d [1423, 1429[ "OneSpillStore"
  v136|q QWORD "[vstack:0|q]" v0|q v0|q [1429, 1510[[1542, 1655[[1656, 1687[[1688, 1719[[1720, 1761[[1762, 1833[[1834, 1875[[1876, 1917[[1918, 1949[[1950, 2021[[2022, 2053[[2054, 2075[[2076, 2117[[2118, 2128[1468 ShouldHaveRegister 1502 ShouldHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:6|d]" v15|d v15|d [1429, 1509[[1634, 1655[1508 ShouldHaveRegister  "OneSpillStore"
  v138|q QWORD "[rsi|q]" v0|q v0|q [2128, 2149[ "StoreAtDefinition"
  v139|d DWORD "[rdx|d]" v15|d v15|d [1740, 1761[ "OneSpillStore"
  v140|d DWORD "[vstack:7|d]" v16|d v16|d [1473, 1476[1476 ShouldHaveRegister  "OneSpillStore"
  v141|d DWORD "[rax|d]" v16|d v16|d [1634, 1655[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [v24|DWORD, v25|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [v26|DWORD, v27|DWORD, v28|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [v53|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [v67|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [v71|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [v82|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [v91|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [v100|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] // MoveResolver resolve mapping <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [v13|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] // MoveResolver resolve mapping <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-5139|0xffffffffffffebed] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] // MoveResolver resolve mapping <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] // MoveResolver resolve mapping <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] // MoveResolver resolve mapping <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] // MoveResolver resolve mapping <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] // MoveResolver resolve mapping <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] // MoveResolver resolve mapping <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [v104|DWORD, v105|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] // MoveResolver resolve mapping <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] // MoveResolver resolve mapping <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [v108|DWORD, v109|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[35220|0x8994] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] // MoveResolver resolve mapping <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] // MoveResolver resolve mapping <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [v106|DWORD, v107|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [v110|DWORD, v111|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: v4|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v6|DWORD = MOV input: [v5|QWORD[.] + v3|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v7|DWORD = IMUL x: v6|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction v8|DWORD = SAR x: v7|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction v9|DWORD = AND x: v8|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: v6|DWORD, ~hash: v9|DWORD) {entryScratch: v11|QWORD, scratch: v10|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction v21|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v21|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction v22|DWORD = NEG value: v20|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v22|DWORD, y: v22|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [v19|DWORD[_] * 8 + 16], y: v6|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v6|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v21|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction v23|DWORD = MOV input: [v5|QWORD[.] + v21|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction v30|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction v31|DWORD = IMUL x: v26|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction v32|DWORD = SAR x: v31|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction v33|DWORD = AND x: v32|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: v26|DWORD, ~hash: v33|DWORD) {entryScratch: v35|QWORD, scratch: v34|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction v43|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: v44|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction v45|DWORD[_] = MOV input: [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction v46|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: v46|DWORD, y: [v45|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction v47|DWORD = SUB (x: v28|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: v47|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [v48|QWORD[.] + v28|DWORD * 4 + 16], y: v26|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v26|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v46|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction v49|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: v49|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: v51|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction v52|DWORD = MOV input: [v50|QWORD[.] + v46|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = MOVE input: v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = STACKMOVE (input: v114|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = STACKMOVE (input: v113|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  422  <|@ instruction v36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: v36|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction v38|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction v39|DWORD = ADD (x: v38|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v39|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: v28|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v124|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  498  <|@ instruction v40|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v40|DWORD, y: v40|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] v40|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: v40|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  546  <|@ instruction v41|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: v41|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  572  <|@ instruction v42|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v42|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: v29|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction v54|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v58|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction v59|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction v60|QWORD = SHL x: v59|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction v61|QWORD = LEA address: [v60|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction v62|QWORD = AND x: v61|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction v63|QWORD = ADD (x: v62|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: v63|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: v63|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [v62|QWORD + v58|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [v58|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [v58|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [v58|QWORD + 12], y: v53|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction v66|QWORD = LEA address: [v62|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: v66|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: v62|QWORD, y: v67|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [v58|QWORD + v67|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction v68|QWORD = LEA address: [v67|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction v70|QWORD[.] = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction v72|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: v72|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction v73|DWORD = DEC value: v53|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction v74|DWORD = MOV input: [v54|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: v74|DWORD, y: v73|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: v74|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: v74|DWORD, y: v74|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction v75|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [v71|QWORD[.] + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: v53|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v53|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v79|DWORD = MOV input: [v76|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [v71|QWORD[.] + v78|DWORD * 4 + 16], y: v79|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction v80|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction v81|DWORD = LEA address: [v53|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: v81|DWORD, y: v82|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction v83|DWORD = MOV input: [v76|QWORD[.] + v82|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [v71|QWORD[.] + v82|DWORD * 4 + 16], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction v84|DWORD = INC value: v82|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction v85|DWORD = MOV input: [v76|QWORD[.] + v84|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [v71|QWORD[.] + v84|DWORD * 4 + 16], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction v86|DWORD = LEA address: [v82|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction v87|DWORD = MOV input: [v76|QWORD[.] + v86|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [v71|QWORD[.] + v86|DWORD * 4 + 16], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction v88|DWORD = LEA address: [v82|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction v89|DWORD = MOV input: [v76|QWORD[.] + v88|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [v71|QWORD[.] + v88|DWORD * 4 + 16], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction v90|DWORD = LEA address: [v82|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v91|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction v92|DWORD = MOV input: [v76|QWORD[.] + v91|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [v71|QWORD[.] + v91|DWORD * 4 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction v93|DWORD = INC value: v91|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction v94|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction v95|QWORD = LEA address: [v94|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: v95|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: v95|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [v94|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [v94|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [v94|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [v94|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [v94|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction v99|QWORD[.] = MOVE input: v94|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction v101|DWORD[_] = COMPRESSPOINTER (input: v71|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [v100|QWORD[.] + 16], y: v101|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [v100|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1262  <|@ instruction rax|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v54|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction v55|DWORD = MOV input: [v54|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rdx|DWORD = MOVE input: v55|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: v0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1330  <|@ instruction v56|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1338  <|@ instruction v57|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction rax|QWORD[.] = MOVE input: v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1368  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction v14|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction v15|DWORD = ADD (x: v14|DWORD, ~y: [v0|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v135|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1432  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] v16|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1480  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: v17|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr 1506  <|@ instruction v18|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction v96|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1532  <|@ instruction rsi|QWORD = MOVE input: v96|QWORD moveKind: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1536  <|@ instruction v97|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] v71|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [v97|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction v64|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1566  <|@ instruction rsi|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1572  <|@ instruction v65|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [v65|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v65|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: v66|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [v58|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v16|DWORD 
locals: v0|QWORD[.] int[0|0x0] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: v50|QWORD[.] v46|DWORD 
locals: v0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: v0|QWORD[.] v30|DWORD v29|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] // MoveResolver resolve mapping <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v13|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v12|DWORD 
locals: v0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] // MoveResolver resolve mapping <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE input: v137|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v17|DWORD 
locals: v0|QWORD[.] int[1|0x1] v15|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-5139|0xffffffffffffebed] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] // MoveResolver resolve mapping <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] // MoveResolver resolve mapping <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: v0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] // MoveResolver resolve mapping <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] // MoveResolver resolve mapping <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v37|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: v36|DWORD 
locals: v0|QWORD[.] v28|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] // MoveResolver resolve mapping <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] // MoveResolver resolve mapping <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v104|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v105|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v26|DWORD v28|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] v28|DWORD v29|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] // MoveResolver resolve mapping <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: v40|DWORD 
locals: v0|QWORD[.] int[0|0x0] v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] // MoveResolver resolve mapping <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v108|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v109|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: v0|QWORD[.] v6|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: v0|QWORD[.] int[0|0x0] v3|DWORD int[0|0x0] v6|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[35220|0x8994] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] // MoveResolver resolve mapping <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: v0|QWORD[.] v53|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: v41|DWORD 
locals: v0|QWORD[.] v30|DWORD v39|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] // MoveResolver resolve mapping <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v106|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v107|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: v0|QWORD[.] v28|DWORD v27|DWORD int[0|0x0] v26|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v110|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v111|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: v0|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] vstack:1|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] vstack:5|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: vstack:0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] vstack:7|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: vstack:0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: vstack:0|QWORD[.] vstack:2|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] // MoveResolver resolve mapping <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] // MoveResolver resolve mapping <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] // MoveResolver resolve mapping <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] // MoveResolver resolve mapping <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: vstack:0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] // MoveResolver resolve mapping <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] // MoveResolver resolve mapping <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] // MoveResolver resolve mapping <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] // MoveResolver resolve mapping <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] // MoveResolver resolve mapping <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] // MoveResolver resolve mapping <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] // MoveResolver resolve mapping <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] // MoveResolver resolve mapping <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: vstack:0|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  126  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  254  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  256  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  258  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  260  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  280  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  300  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  336  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] vstack:1|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  456  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  492  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  494  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] vstack:5|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  634  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr  668  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr  670  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  672  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  708  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  710  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  712  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  714  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  764  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  806  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  834  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr  882  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  962  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr  966  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  968  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1004  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1022  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1082  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1086  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1088  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1098  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1144  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1148  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1190  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1192  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1220  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1222  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1224  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1226  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1228  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1258  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1260  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1264  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: vstack:0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1332  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1334  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1342  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr 1370  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr 1418  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr 1420  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1424  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1426  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1428  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1430  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr 1434  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] vstack:7|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr 1476  <|@ instruction rsi|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr 1482  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1538  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1540  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1568  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1570  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1574  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1576  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1600  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1602  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1612  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] // MoveResolver resolve mapping <|@ <|@
      nr 1622  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1632  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr 1652  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1654  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] // MoveResolver resolve mapping <|@ <|@
      nr 1664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 1686  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: vstack:0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: vstack:0|QWORD[.] vstack:2|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] // MoveResolver resolve mapping <|@ <|@
      nr 1696  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] // MoveResolver resolve mapping <|@ <|@
      nr 1728  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1732  <|@ instruction NOP <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] // MoveResolver resolve mapping <|@ <|@
      nr 1738  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr 1758  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 1760  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] // MoveResolver resolve mapping <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1790  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] // MoveResolver resolve mapping <|@ <|@
      nr 1800  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] // MoveResolver resolve mapping <|@ <|@
      nr 1810  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr 1830  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr 1832  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: vstack:0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] // MoveResolver resolve mapping <|@ <|@
      nr 1842  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] // MoveResolver resolve mapping <|@ <|@
      nr 1852  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1872  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr 1874  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1876  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] // MoveResolver resolve mapping <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] // MoveResolver resolve mapping <|@ <|@
      nr 1894  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1898  <|@ instruction NOP <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1914  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1916  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] // MoveResolver resolve mapping <|@ <|@
      nr 1926  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1930  <|@ instruction NOP <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr 1946  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr 1948  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1958  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1960  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1978  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] // MoveResolver resolve mapping <|@ <|@
      nr 1988  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1992  <|@ instruction NOP <|@ <|@
      nr 1994  <|@ instruction NOP <|@ <|@
      nr 1996  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2020  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] // MoveResolver resolve mapping <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2050  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2052  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr 2072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr 2074  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2078  <|@ instruction NOP <|@ <|@
      nr 2080  <|@ instruction NOP <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2084  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2086  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] // MoveResolver resolve mapping <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction NOP <|@ <|@
      nr 2112  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2114  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2116  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: vstack:0|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2120  <|@ instruction NOP <|@ <|@
      nr 2122  <|@ instruction NOP <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2126  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2148  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction vstack:1|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] vstack:1|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction vstack:4|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] vstack:5|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] vstack:2|DWORD vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: vstack:0|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction vstack:6|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction vstack:7|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] vstack:7|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: vstack:0|QWORD[.] int[1|0x1] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:6|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: vstack:0|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: vstack:0|QWORD[.] vstack:2|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2272  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2224  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: vstack:0|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] int[0|0x0] vstack:4|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2240  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: vstack:0|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: vstack:0|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: vstack:0|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: vstack:0|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2208  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: vstack:0|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [26, 2272[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [616, 708[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [614, 2016[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [736, 880[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [836, 840[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [272, 386[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [344, 348[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [26, 2272[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:32|d]" vstack:1|d -1 [616, 708[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:28|d]" vstack:2|d -1 [614, 2016[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:32|d]" vstack:4|d -1 [736, 880[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [836, 840[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:28|d]" vstack:6|d -1 [272, 386[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [344, 348[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2272  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2224  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2272  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2224  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2256  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2208  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@reference-map: [rax:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@reference-map: [rdx:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" "B16" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD <|@ <|@
      nr  102  <|@ instruction HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B17" "B106" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  428  <|@ instruction rdi|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B105" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = NEG value: rbx|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B103" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  490  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B102" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605737559986458026
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B14" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B45" "B36" 
    successors "B25" "B27" "B39" "B100" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618057546834977307
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 16 numbPhis: 3 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  576  <|@ instruction rcx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr  584  <|@ instruction HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B40" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12] <|@ <|@
      nr  944  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD <|@ <|@
      nr  962  <|@ instruction rax|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: rsi|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  966  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B94" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1040  <|@ instruction BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617035480073136337
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: rsi|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: rsi|QWORD[.] rcx|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383] <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1060  <|@ instruction r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] stack:32|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  642  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  728  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  730  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  770  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  774  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  836  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] stack:36|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  840  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  844  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4588512169572299873
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B46" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4605829794356472583
    begin_IR
      LIR
      nr 1066  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B5" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4606568225146471261
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD <|@ <|@
      nr 1210  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD <|@ <|@
      nr 1212  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr 1214  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B58" 
    xhandlers
    flags 
    probability 4606484295090459312
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1288  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1290  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1292  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1294  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1298  <|@ instruction r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD <|@ <|@
      nr 1300  <|@ instruction CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4606401204335007483
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1312  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636062702047677505
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1344  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1346  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636126967553847279
    begin_IR
      LIR
      nr 1314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4606401204335007484
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4606484295090459313
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B52" 
    successors "B61" "B91" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1414  <|@ instruction BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4606568225146471262
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction rax|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr 1452  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B90" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354] <|@ <|@
      nr 1500  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B89" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    probability 4605369224346300570
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1608  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1610  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1612  <|@ instruction CMP x: r8|DWORD y: 3 size: DWORD <|@ <|@
      nr 1614  <|@ instruction rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr 1616  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1618  <|@ instruction JUMP ~outgoingValues: [] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B76" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1652  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B77" 
    successors "B77" "B78" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4605441891061462431
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B79" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4600865624718930094
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction NOP <|@ <|@
      nr 1706  <|@ instruction NOP <|@ <|@
      nr 1708  <|@ instruction NOP <|@ <|@
      nr 1710  <|@ instruction NOP <|@ <|@
      nr 1712  <|@ instruction NOP <|@ <|@
      nr 1714  <|@ instruction NOP <|@ <|@
      nr 1716  <|@ instruction NOP <|@ <|@
      nr 1718  <|@ instruction NOP <|@ <|@
      nr 1720  <|@ instruction NOP <|@ <|@
      nr 1722  <|@ instruction NOP <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1730  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1734  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD <|@ <|@
      nr 1740  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1742  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1744  <|@ instruction rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD <|@ <|@
      nr 1746  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1750  <|@ instruction rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD <|@ <|@
      nr 1752  <|@ instruction JUMP ~outgoingValues: [] destination: B80 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors "B80" "B81" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4608074322773415033
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605369224346300571
    begin_IR
      LIR
      nr 1754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction NOP <|@ <|@
      nr 1760  <|@ instruction NOP <|@ <|@
      nr 1762  <|@ instruction JUMP ~outgoingValues: [] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B82" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575804291551412490
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1792  <|@ instruction MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction rsi|DWORD = INC value: rsi|DWORD size: DWORD <|@ <|@
      nr 1796  <|@ instruction JUMP ~outgoingValues: [] destination: B83 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B83" 
    successors "B83" "B84" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4605441891061462432
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction NOP <|@ <|@
      nr 1774  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 4605369224346300572
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction JUMP ~outgoingValues: [] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B62" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1810  <|@ instruction NOP <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1828  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1830  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4606484295090459315
    begin_IR
      LIR
      nr 1860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr 1886  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1888  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed} <|@ <|@
      nr 1890  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1892  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1894  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1896  <|@ instruction JUMP ~outgoingValues: [] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 4606568225146471264
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3 <|@ <|@
      nr 1924  <|@ instruction MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr 1926  <|@ instruction MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333] <|@ <|@
      nr 1928  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B67" 
    xhandlers
    flags 
    probability 4600865624718930074
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B47" 
    xhandlers
    flags 
    probability 4594578518064714724
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B85" 
    xhandlers
    flags 
    probability 4593964023491218191
    begin_IR
      LIR
      nr 1428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: rsi|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors 
    xhandlers
    flags 
    probability 4589577969891534104
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1164  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404]
stack: stack:48|QWORD[.] 
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404] <|@ <|@
      nr 1170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407] <|@ <|@
      nr 1176  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148]
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148] <|@ <|@
      nr  168  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B11" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  266  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  276  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  278  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287] <|@ <|@
      nr  282  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  344  <|@ instruction stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301]
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] stack:32|DWORD - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301] <|@ <|@
      nr  348  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309] <|@ <|@
      nr  352  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B23" 
    xhandlers
    flags 
    probability 4577056621461985067
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318]
locals: stack:48|QWORD[.] int[1|0x1] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318] <|@ <|@
      nr  376  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" 
    xhandlers
    flags 
    probability 4576525145365818147
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction NOP <|@ <|@
      nr 1848  <|@ instruction NOP <|@ <|@
      nr 1850  <|@ instruction NOP <|@ <|@
      nr 1852  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>} <|@ <|@
      nr 1854  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418] <|@ <|@
      nr 1856  <|@ st <@st|@reference-map: [rax:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155]
locals: - - - int[0|0x0] r11|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418] <|@ <|@
      nr 1858  <|@ instruction JUMP ~outgoingValues: [] destination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4576525145365818146
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354] <|@ <|@
      nr 1246  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:354] <|@ <|@
      nr 1248  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576471430129970498
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1380  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1996  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD <|@ <|@
      nr 2014  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD <|@ <|@
      nr 2016  <|@ st <@st|@reference-map: [rdx:0, stack:0]
live-base-pointers: []
java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15]
stack: rdx|QWORD[.] rax|DWORD 
locals: stack:48|QWORD[.] - 
java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383]
locals: stack:48|QWORD[.] stack:28|DWORD r9|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:15, 383] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction rcx|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2042  <|@ instruction r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed] <|@ <|@
      nr 2044  <|@ instruction JUMP ~outgoingValues: [] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B94" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2048  <|@ instruction NOP <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2064  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2066  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r10|DWORD r8|DWORD - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] r8|DWORD r9|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1548  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B49" "B91" "B90" "B74" "B89" "B71" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1992  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:354] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  304  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:28|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  226  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1954  <|@ instruction r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5] <|@ <|@
      nr 1956  <|@ instruction JUMP ~outgoingValues: [] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed] <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2198  <|@ instruction NOP <|@ <|@
      nr 2200  <|@ instruction NOP <|@ <|@
      nr 2202  <|@ instruction NOP <|@ <|@
      nr 2204  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2206  <|@ instruction r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed] <|@ <|@
      nr 2210  <|@ instruction JUMP ~outgoingValues: [] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B4" "B109" "B108" "B107" "B18" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 2276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  128  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2278  <|@ instruction NOP <|@ <|@
      nr 2280  <|@ instruction NOP <|@ <|@
      nr 2282  <|@ instruction NOP <|@ <|@
      nr 2284  <|@ instruction NOP <|@ <|@
      nr 2286  <|@ instruction NOP <|@ <|@
      nr 2288  <|@ instruction NOP <|@ <|@
      nr 2290  <|@ instruction NOP <|@ <|@
      nr 2292  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2294  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2296  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0]
locals: rsi|QWORD[.] - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2096  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2106  <|@ instruction r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5] <|@ <|@
      nr 2108  <|@ instruction JUMP ~outgoingValues: [] destination: B99 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B26" "B100" "B99" "B98" "B97" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction NOP <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2144  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12]
locals: stack:48|QWORD[.] r8|DWORD r11|DWORD int[0|0x0] r10|DWORD - - 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD <|@ <|@
      nr  404  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[1|0x1] rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2112  <|@ instruction NOP <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction rcx|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2120  <|@ instruction r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed] <|@ <|@
      nr 2122  <|@ instruction JUMP ~outgoingValues: [] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2262  <|@ instruction NOP <|@ <|@
      nr 2264  <|@ instruction NOP <|@ <|@
      nr 2266  <|@ instruction NOP <|@ <|@
      nr 2268  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2270  <|@ instruction r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5] <|@ <|@
      nr 2274  <|@ instruction JUMP ~outgoingValues: [] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2214  <|@ instruction NOP <|@ <|@
      nr 2216  <|@ instruction NOP <|@ <|@
      nr 2218  <|@ instruction NOP <|@ <|@
      nr 2220  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5] <|@ <|@
      nr 2226  <|@ instruction JUMP ~outgoingValues: [] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5] <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312]
stack: rax|DWORD 
locals: stack:48|QWORD[.] rcx|DWORD rdx|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:312] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD <|@ <|@
      nr  922  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD <|@ <|@
      nr  924  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10]
locals: stack:48|QWORD[.] 
java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267]
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:10, 267] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  702  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD <|@ <|@
      nr  704  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151]
stack: rax|DWORD 
locals: stack:48|QWORD[.] r8|DWORD - int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:151] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1932  <|@ instruction NOP <|@ <|@
      nr 1934  <|@ instruction NOP <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction r11|QWORD = MOVE input: long[40344|0x9d98] <|@ <|@
      nr 1940  <|@ instruction r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr 1942  <|@ instruction JUMP ~outgoingValues: [] destination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B96" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2020  <|@ instruction NOP <|@ <|@
      nr 2022  <|@ instruction NOP <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction rcx|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2028  <|@ instruction r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed] <|@ <|@
      nr 2030  <|@ instruction JUMP ~outgoingValues: [] destination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1582  <|@ instruction r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5] <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B74 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2092  <|@ instruction r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5] <|@ <|@
      nr 2094  <|@ instruction JUMP ~outgoingValues: [] destination: B98 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 2078  <|@ instruction r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed] <|@ <|@
      nr 2080  <|@ instruction JUMP ~outgoingValues: [] destination: B97 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  126  <|@ instruction r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed] <|@ <|@
      nr  130  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  454  <|@ instruction r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  608  <|@ instruction r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed] <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2148  <|@ instruction NOP <|@ <|@
      nr 2150  <|@ instruction NOP <|@ <|@
      nr 2152  <|@ instruction NOP <|@ <|@
      nr 2154  <|@ instruction r11|QWORD = MOVE input: long[7060|0x1b94] <|@ <|@
      nr 2156  <|@ instruction r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed] <|@ <|@
      nr 2158  <|@ instruction JUMP ~outgoingValues: [] destination: B102 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" "B102" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2176  <|@ instruction NOP <|@ <|@
      nr 2178  <|@ instruction NOP <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2194  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42]
locals: stack:48|QWORD[.] r9|DWORD int[0|0x0] - 
java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366]
locals: stack:48|QWORD[.] int[0|0x0] r8|DWORD int[0|0x0] r9|DWORD - - 
>@ <|@ instruction DEOPT info [bci:42, 366] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed] <|@ <|@
      nr  656  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B92" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction r11|QWORD = MOVE input: long[35220|0x8994] <|@ <|@
      nr 1968  <|@ instruction r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed] <|@ <|@
      nr 1970  <|@ instruction JUMP ~outgoingValues: [] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2246  <|@ instruction NOP <|@ <|@
      nr 2248  <|@ instruction NOP <|@ <|@
      nr 2250  <|@ instruction NOP <|@ <|@
      nr 2252  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 2254  <|@ instruction r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~outgoingValues: [] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290]
stack: rax|DWORD 
locals: stack:48|QWORD[.] int[0|0x0] stack:32|DWORD int[0|0x0] - - - 
>@ <|@ instruction DEOPT info [bci:290] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2238  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr 2242  <|@ instruction JUMP ~outgoingValues: [] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B104" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction r11|QWORD = MOVE input: long[6420|0x1914] <|@ <|@
      nr 2170  <|@ instruction r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed] <|@ <|@
      nr 2172  <|@ instruction JUMP ~outgoingValues: [] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_1      
     2: iconst_m1     
     3: istore_2      
     4: iconst_0      
     5: istore_3      
     6: aload_0       
     7: invokevirtual #102        // peek:()int
    10: istore        4
    12: iload         4
    14: lookupswitch  [13] {0: 343, 36: 144, 40: 144, 41: 144, 42: 128, 43: 128, 46: 144, 63: 128, 91: 144, 92: 147, 94: 144, 123: 128, 124: 144} default: 357
   128: iload_1       
   129: iconst_1      
   130: if_icmple     391
   133: aload_0       
   134: iload_2       
   135: putfield      #101        // cursor:int
   138: iinc          
   141: goto          391
   144: goto          391
   147: aload_0       
   148: invokevirtual #130        // nextEscaped:()int
   151: istore        4
   153: iload         4
   155: bipush        112
   157: if_icmpeq     167
   160: iload         4
   162: bipush        80
   164: if_icmpne     266
   167: iload_1       
   168: ifle          178
   171: aload_0       
   172: invokevirtual #131        // unread:()void
   175: goto          391
   178: iload         4
   180: bipush        80
   182: if_icmpne     189
   185: iconst_1      
   186: goto          190
   189: iconst_0      
   190: istore        5
   192: iconst_1      
   193: istore        6
   195: aload_0       
   196: invokevirtual #125        // next:()int
   199: istore        4
   201: iload         4
   203: bipush        123
   205: if_icmpeq     215
   208: aload_0       
   209: invokevirtual #131        // unread:()void
   212: goto          218
   215: iconst_0      
   216: istore        6
   218: aload_0       
   219: sipush        128
   222: invokevirtual #87         // has:(int)boolean
   225: ifeq          253
   228: aload_0       
   229: bipush        16
   231: invokevirtual #87         // has:(int)boolean
   234: ifne          253
   237: new           #514        // java.util.regex.Pattern$NFCCharProperty
   240: dup           
   241: aload_0       
   242: iload         6
   244: iload         5
   246: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   249: invokespecial #128        // java.util.regex.Pattern$NFCCharProperty.<init>:(java.util.regex.Pattern$CharPredicate)void
   252: areturn       
   253: aload_0       
   254: aload_0       
   255: iload         6
   257: iload         5
   259: invokevirtual #132        // family:(boolean, boolean)java.util.regex.Pattern$CharPredicate
   262: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   265: areturn       
   266: aload_0       
   267: invokevirtual #131        // unread:()void
   270: aload_0       
   271: getfield      #101        // cursor:int
   274: istore_2      
   275: aload_0       
   276: iconst_0      
   277: iload_1       
   278: ifne          285
   281: iconst_1      
   282: goto          286
   285: iconst_0      
   286: iconst_0      
   287: invokevirtual #144        // escape:(boolean, boolean, boolean)int
   290: istore        4
   292: iload         4
   294: iflt          326
   297: aload_0       
   298: iload         4
   300: iload_1       
   301: invokevirtual #145        // append:(int, int)void
   304: iinc          
   307: iload         4
   309: invokestatic  #91         // isSupplementary:(int)boolean
   312: ifeq          317
   315: iconst_1      
   316: istore_3      
   317: aload_0       
   318: invokevirtual #102        // peek:()int
   321: istore        4
   323: goto          12
   326: iload_1       
   327: ifne          335
   330: aload_0       
   331: getfield      #38         // root:java.util.regex.Pattern$Node
   334: areturn       
   335: aload_0       
   336: iload_2       
   337: putfield      #101        // cursor:int
   340: goto          391
   343: aload_0       
   344: getfield      #101        // cursor:int
   347: aload_0       
   348: getfield      #80         // patternLength:int
   351: if_icmplt     357
   354: goto          391
   357: aload_0       
   358: getfield      #101        // cursor:int
   361: istore_2      
   362: aload_0       
   363: iload         4
   365: iload_1       
   366: invokevirtual #145        // append:(int, int)void
   369: iinc          
   372: iload         4
   374: invokestatic  #91         // isSupplementary:(int)boolean
   377: ifeq          382
   380: iconst_1      
   381: istore_3      
   382: aload_0       
   383: invokevirtual #125        // next:()int
   386: istore        4
   388: goto          12
   391: iload_1       
   392: iconst_1      
   393: if_icmpne     411
   396: aload_0       
   397: aload_0       
   398: aload_0       
   399: getfield      #93         // buffer:int[]
   402: iconst_0      
   403: iaload        
   404: invokevirtual #146        // single:(int)java.util.regex.Pattern$CharPredicate
   407: invokevirtual #129        // newCharProperty:(java.util.regex.Pattern$CharPredicate)java.util.regex.Pattern$CharProperty
   410: areturn       
   411: aload_0       
   412: aload_0       
   413: getfield      #93         // buffer:int[]
   416: iload_1       
   417: iload_3       
   418: invokevirtual #98         // newSlice:(int[], int, boolean)java.util.regex.Pattern$Node
   421: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85040d00009090909090909090909048896c242048893424448b5650468b1cd50c000000448b4620453bd80f869e0a00009090909090448b4e10490fbae1020f825b0c00009090909090909090909090909090909090909049c1e203478b4c82104169c91b010000c1f90483e10f488d1d16000000488b3ccb413bf90f858900000048c1ff204803dfffe300000000970600007c000000540c0000000000008000000028000000540c0000000000008000000029000000540c00002a000000540c000000000000800000002b000000540c00005b000000540c00003f000000540c00005c0000002a07000024000000540c00002e000000540c00005e000000540c00007b000000540c0000909090909090908b4e3c8b1ccd0c000000418bf8ffc7443bdf0f86ba0900009090909085db0f84e60a00009090909090f7db85db0f8de2080000909090909044890ccd100000004181f9000001000f8d950b000090909090664181f900d80f83d70a00009090909090897e20458b54ba10909090458bd841b801000000666690909090909090909090909090909090909090448b4e20418bc8ffc14169da1b010000c1fb0483e30f488d3d19000000488b14df413bd20f858c00000048c1fa204803faffe766669000000000420200007c000000ea080000000000008000000028000000ea080000000000008000000029000000ea0800002a000000ea08000000000000800000002b000000ea0800005b000000ea0800003f000000ea0800005c0000003101000024000000ea0800002e000000ea0800005e000000ea0800007b000000ea0800009090909090908b5e3c8b3cdd0c000000413bf80f86f10700009090909090908b5650418bc1ffc03b04d50c0000000f83560900009090909090418be82bef85ed0f8d590900009090909090909048c1e30346895483104181fa000001000f8d9406000090909090664181fa00d80f83ed0800009090909090909090894620448b561048c1e203490fbae2020f82380600009090909090904d8b9758040000418502448b548210448bc1458bd9e987feffff894c241444894424109090909090909090904c8bd690e8000000000f1f84000000000083f8700f84480900009090909083f8500f842d080000448b442410488b342490909090909090baffffffff0356208956204585c00f85df070000895424109090909090909090909090904c8bd6ba00000000b90100000041b8000000006690e8000000000f1f84000000000085c00f8c1a090000909090909090909090909090909090488b34248bd0b9000000008944240c90e8000000000f1f8400000000008b74240c666690e8000000000f1f84000000000085c00f852b0700009090909090909090488b3424666690e8000000000f1f840000000000448b442414448b5c2410448bd0488b3424e976fdffff90909090443b4e240f8c0e0800009090909090909090448b563c4183f8010f840d0300009090909090909090909090904d8b9fb8010000418bc048c1e002488d40174883e0f8488bd04903d3493b97c80100000f875d0400009090909090909090909090909090498997b8010000420f18841800010000420f18841840010000420f1884188001000049c7030100000041c74308addeadde4589430c4c8d48f04981f9000800000f833b04000090909048c7c210000000e92d0000006666660f1f840000000000666666906666660f1f8400000000009090909090909049c7041300000000488d520890909090483bc277e49090909090909090909090908b4610480fbae0010f826a070000909090904183f8010f8c0f0200009090909090418bc0ffc84183f8020f8cd701000090909090443bc00f86b70400009090909090909090428b14d50c0000004183f8020f8ca8010000909090903bd00f86280600009090909083fa020f82f90300009090909090909085d20f8436060000909090909090909090428b04d5100000004189431049c1e2034183f803b802000000410f4cc0be01000000e91b000000660f1f840000000000909090909090418b54b210418954b310ffc6909090903bc67fe6909090909090418d40fce9610000006666660f1f840000000000666666900f1f840000000000909090909090909090909090909090909090909090418b54b210418954b3108bd6ffc2458b4c921045894c93108d5602458b4c921045894c93108d5603458b4c921045894c93108d7604909090903bc67fae909090e918000000660f1f440000909090909090418b44b210418944b310ffc690909090443bc67fe59090909090909090909090498b87b8010000488d7018493bb7c80100000f87fb010000909090909090909090904989b7b80100000f18801801000048c70001000000c74008addeaddec7400c0000000048c7401000000000909090909090909090909049c1eb0344895810c7400caddeadde488b6c24204883c428493ba7500400000f870b060000c5f877c3909090e96cfeffff909090e931feffff90909090443b46240f8cd704000090909041b800000000e9e8fcffff909090e943ffffff9090909042833cd50c000000000f84a0030000909090909090909090909090909090909090909090428b14d5100000004c8bd690e8000000000f1f840000000000488b3424488bd0e8000000000f1f840000000000488b6c24204883c428493ba7500400000f877c050000c5f877c3909090909090909090488b3424e8000000000f1f84000000000083f8700f84440200009090909083f8500f84f3010000488b3424909090909090909090909090909090baffffffff0356208956204c8bd689542414ba00000000b90100000041b800000000e8000000000f1f84000000000085c00f8c7f010000909090909090909090909090909090488b34248bd0b9000000008944241090e8000000000f1f8400000000008b742410666690e8000000000f1f84000000000085c00f85180200009090909090909090488b3424666690e8000000000f1f840000000000448b442414448bd0488b3424e9d8f8ffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500e913feffff9090909090909090909048beaddeaddeaddeadde418bd0e8000000000f1f84000000000085004c8bd8488b3424e911fcffff909090909090909090498bc9498d7b104833c0f348aa488b3424e9eefbffff894c24149090909090909041c78784040000ed63fdff49c78790040000141e0000e8000000000f1f84000000000090909048c7c11419000041bbed6bfdff9090909090909045899f8404000049898f90040000e8000000000f1f84000000000090909049c7c3989d000041bae546feff90909090909090458997840400004d899f90040000e8000000000f1f8400000000009090909090909041c78784040000ed9bfdff49c78790040000140f0000e8000000000f1f84000000000090909041baed9ffdff909090909090904589978404000049c78790040000140a0000e8000000000f1f84000000000090909049c7c3989d000041bae53efeffe970ffffff90909041baeda3fdffebba90909049c7c39416000041baed93fdff488b342490909090909090458997840400004d899f90040000e8000000000f1f84000000000090909048c7c10000000041b9e57dfeff9090909090909045898f8404000049898f90040000e8000000000f1f8400000000008b5424149090909090909041c78784040000ed97fdff49c7879004000094110000e8000000000f1f84000000000090909048c7c11400000041b9edebffffeb9e90909049c7c30000000041bae5c0feffe953ffffff90909049c7c30000000041bae597feffe93effffff90909049c7c30000000041bae530feffe97efeffff8b5424108b4c24149090909090909041c78784040000ed73fdff49c7879004000094110000e8000000000f1f8400000000009090909090909041c78784040000ed7bfdff49c78790040000940c0000e8000000000f1f840000000000448b44241090909041baed7ffdff909090909090904589978404000049c78790040000140a0000e8000000000f1f84000000000090909049c7c3989d000041bae546feffe9d9fdffff90909048c7c1941b000041bbed67fdffe992fdffff90909049c7c30000000041bae52ffeffe9affdffff90909048c7c10000000041b9e56dfeffe97bfeffff90909048c7c19416000041b9ed6ffdffe966feffff90909049c7c31405000041baeda7fdffe91bfeffff90909049c7c30000000041bae535feffe906feffff90909048c7c11405000041b9ed86fdffe927feffff90909049c7c3941b000041baed8bfdff90909090909090458997840400004d899f90040000e8000000000f1f840000000000448b44241090909041baed83fdffe9edfeffff90909049c7c39489000041baed5ffdffe9ecfcffff90909049c7c31414000041baedabfdffe982fdffff9090909090909041c78784040000ed77fdff49c78790040000140f0000e8000000000f1f84000000000090909049c7c31400000041baed41ffffe943fdffff90909049c7c31419000041baed8ffdffe94dffffff48896c2420e800000000e9edf2fffff4488d0de1f9ffff49898f68040000e99ff2fffff4488d0d70faffff49898f68040000e98bf2fffff441c78784040000f5c6feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a7feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f583feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f572feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f556feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f562feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fcefbff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffffbff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  JumpTable 192 8 0 15  <||@
  JumpTable 520 8 0 15  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD  <||@
  Comment 73 26 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 28 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 81 30 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 32 r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 93 34 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD  <||@
  Comment 102 block B1 null  <||@
  Comment 102 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 38 NOP  <||@
  Comment 103 40 NOP  <||@
  Comment 104 42 NOP  <||@
  Comment 105 44 NOP  <||@
  Comment 106 46 NOP  <||@
  Comment 107 48 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 50 BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2  <||@
  Comment 122 block B2 null  <||@
  Comment 122 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 122 54 NOP  <||@
  Comment 123 56 NOP  <||@
  Comment 124 58 NOP  <||@
  Comment 125 60 NOP  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 145 94 r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 150 96 rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD  <||@
  Comment 157 98 rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD  <||@
  Comment 160 100 rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD  <||@
  Comment 163 102 HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107]  <||@
  Comment 320 block B16 null  <||@
  Comment 320 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 320 410 NOP  <||@
  Comment 321 412 NOP  <||@
  Comment 322 414 NOP  <||@
  Comment 323 416 NOP  <||@
  Comment 324 418 NOP  <||@
  Comment 325 420 NOP  <||@
  Comment 326 422 NOP  <||@
  Comment 327 424 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 330 426 rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 330 [rcx:0, rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 330 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 337 428 rdi|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 342 430 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD  <||@
  Comment 351 block B17 null  <||@
  Comment 351 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 434 NOP  <||@
  Comment 352 436 NOP  <||@
  Comment 353 438 NOP  <||@
  Comment 354 440 NOP  <||@
  Comment 355 442 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 363 block B19 null  <||@
  Comment 363 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 462 NOP  <||@
  Comment 364 464 NOP  <||@
  Comment 365 466 NOP  <||@
  Comment 366 468 NOP  <||@
  Comment 367 470 NOP  <||@
  Comment 368 472 rbx|DWORD = NEG value: rbx|DWORD size: DWORD  <||@
  Comment 370 474 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD  <||@
  Comment 378 block B20 null  <||@
  Comment 378 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 478 NOP  <||@
  Comment 379 480 NOP  <||@
  Comment 380 482 NOP  <||@
  Comment 381 484 NOP  <||@
  Comment 382 486 NOP  <||@
  Comment 383 488 MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 391 490 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 404 block B21 null  <||@
  Comment 404 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 494 NOP  <||@
  Comment 405 496 NOP  <||@
  Comment 406 498 NOP  <||@
  Comment 407 500 NOP  <||@
  Comment 408 502 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null  <||@
  Comment 420 block B22 null  <||@
  Comment 420 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 506 NOP  <||@
  Comment 421 508 NOP  <||@
  Comment 422 510 NOP  <||@
  Comment 423 512 NOP  <||@
  Comment 424 514 NOP  <||@
  Comment 425 516 MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 428 518 r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 433 520 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 433 block B23 null  <||@
  Comment 433 522 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 433 524 NOP  <||@
  Comment 434 526 NOP  <||@
  Comment 435 528 NOP  <||@
  Comment 436 530 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 439 532 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 445 534 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 445 block B24 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 445 536 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 448 538 NOP  <||@
  Comment 449 540 NOP  <||@
  Comment 450 542 NOP  <||@
  Comment 451 544 NOP  <||@
  Comment 452 546 NOP  <||@
  Comment 453 548 NOP  <||@
  Comment 454 550 NOP  <||@
  Comment 455 552 NOP  <||@
  Comment 456 554 NOP  <||@
  Comment 457 556 NOP  <||@
  Comment 458 558 NOP  <||@
  Comment 459 560 NOP  <||@
  Comment 460 562 NOP  <||@
  Comment 461 564 NOP  <||@
  Comment 462 566 NOP  <||@
  Comment 463 568 NOP  <||@
  Comment 464 570 NOP  <||@
  Comment 465 572 NOP  <||@
  Comment 466 574 r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 470 576 rcx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 475 578 rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD  <||@
  Comment 482 580 rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD  <||@
  Comment 485 582 rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD  <||@
  Comment 488 584 HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100]  <||@
  Comment 648 block B39 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 648 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 928 NOP  <||@
  Comment 649 930 NOP  <||@
  Comment 650 932 NOP  <||@
  Comment 651 934 NOP  <||@
  Comment 652 936 NOP  <||@
  Comment 653 938 NOP  <||@
  Comment 654 940 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 657 942 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12]  <||@
  Comment 657 [rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 664 944 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD  <||@
  Comment 673 block B40 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 673 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 948 NOP  <||@
  Comment 674 950 NOP  <||@
  Comment 675 952 NOP  <||@
  Comment 676 954 NOP  <||@
  Comment 677 956 NOP  <||@
  Comment 678 958 NOP  <||@
  Comment 679 960 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 682 962 rax|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 687 964 CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12]  <||@
  Comment 687 [rdx:0, rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 687 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 700 block B41 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 700 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 968 NOP  <||@
  Comment 701 970 NOP  <||@
  Comment 702 972 NOP  <||@
  Comment 703 974 NOP  <||@
  Comment 704 976 NOP  <||@
  Comment 705 978 rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 710 980 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD  <||@
  Comment 718 block B42 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 718 982 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 984 NOP  <||@
  Comment 719 986 NOP  <||@
  Comment 720 988 NOP  <||@
  Comment 721 990 NOP  <||@
  Comment 722 992 NOP  <||@
  Comment 723 994 NOP  <||@
  Comment 724 996 NOP  <||@
  Comment 725 998 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 729 1000 MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 734 1002 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 747 block B43 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 747 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 1006 NOP  <||@
  Comment 748 1008 NOP  <||@
  Comment 749 1010 NOP  <||@
  Comment 750 1012 NOP  <||@
  Comment 751 1014 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null  <||@
  Comment 763 block B44 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 763 1016 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 1018 NOP  <||@
  Comment 764 1020 NOP  <||@
  Comment 765 1022 NOP  <||@
  Comment 766 1024 NOP  <||@
  Comment 767 1026 NOP  <||@
  Comment 768 1028 NOP  <||@
  Comment 769 1030 NOP  <||@
  Comment 770 1032 NOP  <||@
  Comment 771 1034 MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD  <||@
  Comment 774 1036 r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 778 1038 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 782 1040 BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2  <||@
  Comment 793 block B45 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 793 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 1044 NOP  <||@
  Comment 794 1046 NOP  <||@
  Comment 795 1048 NOP  <||@
  Comment 796 1050 NOP  <||@
  Comment 797 1052 NOP  <||@
  Comment 798 1054 NOP  <||@
  Comment 799 1056 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383]  <||@
  Comment 806 [rdx:0, rsi:0, stack:0]at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |-         
     stack:   |rdx|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383, duringCall: true, rethrow: false]
              |0             |1          |2         |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rcx|DWORD  |r9|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 806 {infopoint: SAFEPOINT}  <||@
  Comment 806 POLL_FAR  <||@
  Comment 809 1058 r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 814 1060 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 817 1062 r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 820 1064 JUMP ~outgoingValues: [] destination: B45 -> B24  <||@
  Comment 825 block B27 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 825 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 614 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 829 616 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 834 618 NOP  <||@
  Comment 835 620 NOP  <||@
  Comment 836 622 NOP  <||@
  Comment 837 624 NOP  <||@
  Comment 838 626 NOP  <||@
  Comment 839 628 NOP  <||@
  Comment 840 630 NOP  <||@
  Comment 841 632 NOP  <||@
  Comment 842 634 NOP  <||@
  Comment 843 636 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 846 640 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148]  <||@
  Comment 847 {HotSpotMethod<Pattern.nextEscaped()>}  <||@
  Comment 847 INVOKESPECIAL  <||@
  Comment 852 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148, duringCall: true, rethrow: false]
              |0                  |1               |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:32|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 860 642 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null  <||@
  Comment 869 block B29 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 869 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 660 NOP  <||@
  Comment 870 662 NOP  <||@
  Comment 871 664 NOP  <||@
  Comment 872 666 NOP  <||@
  Comment 873 668 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null  <||@
  Comment 882 block B32 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 882 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 708 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 887 710 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 891 712 NOP  <||@
  Comment 892 714 NOP  <||@
  Comment 893 716 NOP  <||@
  Comment 894 718 NOP  <||@
  Comment 895 720 NOP  <||@
  Comment 896 722 NOP  <||@
  Comment 897 724 NOP  <||@
  Comment 898 726 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 903 728 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD  <||@
  Comment 906 730 MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD  <||@
  Comment 909 732 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD  <||@
  Comment 918 block B33 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 918 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 736 stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 922 738 NOP  <||@
  Comment 923 740 NOP  <||@
  Comment 924 742 NOP  <||@
  Comment 925 744 NOP  <||@
  Comment 926 746 NOP  <||@
  Comment 927 748 NOP  <||@
  Comment 928 750 NOP  <||@
  Comment 929 752 NOP  <||@
  Comment 930 754 NOP  <||@
  Comment 931 756 NOP  <||@
  Comment 932 758 NOP  <||@
  Comment 933 760 NOP  <||@
  Comment 934 762 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 937 766 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 942 768 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 947 770 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 953 772 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287]  <||@
  Comment 955 {HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>}  <||@
  Comment 955 INVOKESPECIAL  <||@
  Comment 960 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 968 774 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 976 block B35 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 976 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 800 NOP  <||@
  Comment 977 802 NOP  <||@
  Comment 978 804 NOP  <||@
  Comment 979 806 NOP  <||@
  Comment 980 808 NOP  <||@
  Comment 981 810 NOP  <||@
  Comment 982 812 NOP  <||@
  Comment 983 814 NOP  <||@
  Comment 984 816 NOP  <||@
  Comment 985 818 NOP  <||@
  Comment 986 820 NOP  <||@
  Comment 987 822 NOP  <||@
  Comment 988 824 NOP  <||@
  Comment 989 826 NOP  <||@
  Comment 990 828 NOP  <||@
  Comment 991 830 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 995 832 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 997 834 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1002 836 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1006 838 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301]  <||@
  Comment 1007 {HotSpotMethod<Pattern.append(int, int)>}  <||@
  Comment 1007 INVOKESPECIAL  <||@
  Comment 1012 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4               |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |stack:36|DWORD  |-  |-   <||@
  Comment 1020 840 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1024 842 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309]  <||@
  Comment 1027 {HotSpotMethod<Pattern.isSupplementary(int)>}  <||@
  Comment 1027 INVOKESTATIC  <||@
  Comment 1032 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309, duringCall: true, rethrow: false]
              |0                  |1               |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1040 844 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1048 block B36 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 1048 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1048 848 NOP  <||@
  Comment 1049 850 NOP  <||@
  Comment 1050 852 NOP  <||@
  Comment 1051 854 NOP  <||@
  Comment 1052 856 NOP  <||@
  Comment 1053 858 NOP  <||@
  Comment 1054 860 NOP  <||@
  Comment 1055 862 NOP  <||@
  Comment 1056 864 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1060 866 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318]  <||@
  Comment 1063 {HotSpotMethod<Pattern.peek()>}  <||@
  Comment 1063 INVOKESPECIAL  <||@
  Comment 1068 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318, duringCall: true, rethrow: false]
              |0                  |1               |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1076 868 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1081 870 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1086 872 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1089 874 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 876 JUMP ~outgoingValues: [] destination: B36 -> B24  <||@
  Comment 1098 block B25 null  <||@
  Comment 1098 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 588 NOP  <||@
  Comment 1099 590 NOP  <||@
  Comment 1100 592 NOP  <||@
  Comment 1101 594 NOP  <||@
  Comment 1102 596 CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD  <||@
  Comment 1112 block B46 null  <||@
  Comment 1112 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1112 1068 NOP  <||@
  Comment 1113 1070 NOP  <||@
  Comment 1114 1072 NOP  <||@
  Comment 1115 1074 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1115 block B47 null  <||@
  Comment 1115 1076 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1115 1078 NOP  <||@
  Comment 1116 1080 NOP  <||@
  Comment 1117 1082 NOP  <||@
  Comment 1118 1084 NOP  <||@
  Comment 1119 1086 NOP  <||@
  Comment 1120 1088 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 1124 1090 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1134 block B51 null  <||@
  Comment 1134 1178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1134 1180 NOP  <||@
  Comment 1135 1182 NOP  <||@
  Comment 1136 1184 NOP  <||@
  Comment 1137 1186 NOP  <||@
  Comment 1138 1188 NOP  <||@
  Comment 1139 1190 NOP  <||@
  Comment 1140 1192 NOP  <||@
  Comment 1141 1194 NOP  <||@
  Comment 1142 1196 NOP  <||@
  Comment 1143 1198 NOP  <||@
  Comment 1144 1200 NOP  <||@
  Comment 1145 1202 NOP  <||@
  Comment 1146 1204 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1153 1206 rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1156 1208 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 1160 1210 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 1164 1212 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 1168 1214 rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1174 1216 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1187 block B53 null  <||@
  Comment 1187 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1187 1256 NOP  <||@
  Comment 1188 1258 NOP  <||@
  Comment 1189 1260 NOP  <||@
  Comment 1190 1262 NOP  <||@
  Comment 1191 1264 NOP  <||@
  Comment 1192 1266 NOP  <||@
  Comment 1193 1268 NOP  <||@
  Comment 1194 1270 NOP  <||@
  Comment 1195 1272 NOP  <||@
  Comment 1196 1274 NOP  <||@
  Comment 1197 1276 NOP  <||@
  Comment 1198 1278 NOP  <||@
  Comment 1199 1280 NOP  <||@
  Comment 1200 1282 NOP  <||@
  Comment 1201 1284 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1208 1286 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 1217 1288 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 1226 1290 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 1235 1292 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 1242 1294 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1242 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1250 1296 MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1254 1298 r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 1258 1300 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1271 block B54 null  <||@
  Comment 1271 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 1304 NOP  <||@
  Comment 1272 1306 NOP  <||@
  Comment 1273 1308 NOP  <||@
  Comment 1274 1310 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1281 1312 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 1286 block B56 loop 1 depth 1 header:969|LoopBegin  <||@
  Comment 1286 1326 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1312 1328 NOP  <||@
  Comment 1313 1330 NOP  <||@
  Comment 1314 1332 NOP  <||@
  Comment 1315 1334 NOP  <||@
  Comment 1316 1336 NOP  <||@
  Comment 1317 1338 NOP  <||@
  Comment 1318 1340 NOP  <||@
  Comment 1319 1342 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1327 1344 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1331 1346 JUMP ~outgoingValues: [] destination: B56 -> B55  <||@
  Comment 1331 block B55 loop 1 depth 1 header:969|LoopBegin  <||@
  Comment 1331 1314 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1331 1316 NOP  <||@
  Comment 1332 1318 NOP  <||@
  Comment 1333 1320 NOP  <||@
  Comment 1334 1322 NOP  <||@
  Comment 1335 1324 CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1340 block B57 null  <||@
  Comment 1340 1348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 1350 NOP  <||@
  Comment 1341 1352 NOP  <||@
  Comment 1342 1354 NOP  <||@
  Comment 1343 1356 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1343 block B59 null  <||@
  Comment 1343 1386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1343 1388 NOP  <||@
  Comment 1344 1390 NOP  <||@
  Comment 1345 1392 NOP  <||@
  Comment 1346 1394 NOP  <||@
  Comment 1347 1396 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1347 1398 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1347 block B60 null  <||@
  Comment 1347 1400 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1347 1402 NOP  <||@
  Comment 1348 1404 NOP  <||@
  Comment 1349 1406 NOP  <||@
  Comment 1350 1408 NOP  <||@
  Comment 1351 1410 NOP  <||@
  Comment 1352 1412 rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1355 1414 BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1  <||@
  Comment 1366 block B61 null  <||@
  Comment 1366 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1366 1418 NOP  <||@
  Comment 1367 1420 NOP  <||@
  Comment 1368 1422 NOP  <||@
  Comment 1369 1424 NOP  <||@
  Comment 1370 1426 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1380 block B63 null  <||@
  Comment 1380 1438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1380 1440 NOP  <||@
  Comment 1381 1442 NOP  <||@
  Comment 1382 1444 NOP  <||@
  Comment 1383 1446 NOP  <||@
  Comment 1384 1448 NOP  <||@
  Comment 1385 1450 rax|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 1390 1452 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1400 block B65 null  <||@
  Comment 1400 1464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1400 1466 NOP  <||@
  Comment 1401 1468 NOP  <||@
  Comment 1402 1470 NOP  <||@
  Comment 1403 1472 NOP  <||@
  Comment 1404 1474 CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD  <||@
  Comment 1413 block B66 null  <||@
  Comment 1413 1476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 1478 NOP  <||@
  Comment 1414 1480 NOP  <||@
  Comment 1415 1482 NOP  <||@
  Comment 1416 1484 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 1416 block B67 null  <||@
  Comment 1416 1486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1416 1488 NOP  <||@
  Comment 1417 1490 NOP  <||@
  Comment 1418 1492 NOP  <||@
  Comment 1419 1494 NOP  <||@
  Comment 1420 1496 NOP  <||@
  Comment 1421 1498 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354]  <||@
  Comment 1421 [rsi:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1429 1500 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1439 block B69 null  <||@
  Comment 1439 1512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1439 1514 NOP  <||@
  Comment 1440 1516 NOP  <||@
  Comment 1441 1518 NOP  <||@
  Comment 1442 1520 NOP  <||@
  Comment 1443 1522 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD  <||@
  Comment 1451 block B70 null  <||@
  Comment 1451 1524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1451 1526 NOP  <||@
  Comment 1452 1528 NOP  <||@
  Comment 1453 1530 NOP  <||@
  Comment 1454 1532 NOP  <||@
  Comment 1455 1534 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1464 block B72 null  <||@
  Comment 1464 1550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 1552 NOP  <||@
  Comment 1465 1554 NOP  <||@
  Comment 1466 1556 NOP  <||@
  Comment 1467 1558 JUMP ~outgoingValues: [] destination: B72 -> B73  <||@
  Comment 1467 block B73 null  <||@
  Comment 1467 1560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 1562 NOP  <||@
  Comment 1468 1564 NOP  <||@
  Comment 1469 1566 NOP  <||@
  Comment 1470 1568 NOP  <||@
  Comment 1471 1570 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD  <||@
  Comment 1479 block B75 null  <||@
  Comment 1479 1586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1479 1588 NOP  <||@
  Comment 1480 1590 NOP  <||@
  Comment 1481 1592 NOP  <||@
  Comment 1482 1594 NOP  <||@
  Comment 1483 1596 NOP  <||@
  Comment 1484 1598 NOP  <||@
  Comment 1485 1600 NOP  <||@
  Comment 1486 1602 NOP  <||@
  Comment 1487 1604 NOP  <||@
  Comment 1488 1606 rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1496 1608 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1500 1610 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 1504 1612 CMP x: r8|DWORD y: 3 size: DWORD  <||@
  Comment 1508 1614 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 1517 1616 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1522 1618 JUMP ~outgoingValues: [] destination: B75 -> B76  <||@
  Comment 1527 block B77 loop 2 depth 1 header:158|LoopBegin  <||@
  Comment 1527 1632 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1536 1634 NOP  <||@
  Comment 1537 1636 NOP  <||@
  Comment 1538 1638 NOP  <||@
  Comment 1539 1640 NOP  <||@
  Comment 1540 1642 NOP  <||@
  Comment 1541 1644 NOP  <||@
  Comment 1542 1646 rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1547 1648 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1552 1650 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1554 1652 JUMP ~outgoingValues: [] destination: B77 -> B76  <||@
  Comment 1554 block B76 loop 2 depth 1 header:158|LoopBegin  <||@
  Comment 1554 1620 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1554 1622 NOP  <||@
  Comment 1555 1624 NOP  <||@
  Comment 1556 1626 NOP  <||@
  Comment 1557 1628 NOP  <||@
  Comment 1558 1630 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD  <||@
  Comment 1562 block B78 null  <||@
  Comment 1562 1654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1562 1656 NOP  <||@
  Comment 1563 1658 NOP  <||@
  Comment 1564 1660 NOP  <||@
  Comment 1565 1662 NOP  <||@
  Comment 1566 1664 NOP  <||@
  Comment 1567 1666 NOP  <||@
  Comment 1568 1668 rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD  <||@
  Comment 1572 1670 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1577 block B80 loop 3 depth 1 header:700|LoopBegin  <||@
  Comment 1577 1684 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1600 1686 NOP  <||@
  Comment 1601 1688 NOP  <||@
  Comment 1602 1690 NOP  <||@
  Comment 1603 1692 NOP  <||@
  Comment 1604 1694 NOP  <||@
  Comment 1605 1696 NOP  <||@
  Comment 1606 1698 NOP  <||@
  Comment 1607 1700 NOP  <||@
  Comment 1608 1702 NOP  <||@
  Comment 1609 1704 NOP  <||@
  Comment 1610 1706 NOP  <||@
  Comment 1611 1708 NOP  <||@
  Comment 1612 1710 NOP  <||@
  Comment 1613 1712 NOP  <||@
  Comment 1614 1714 NOP  <||@
  Comment 1615 1716 NOP  <||@
  Comment 1616 1718 NOP  <||@
  Comment 1617 1720 NOP  <||@
  Comment 1618 1722 NOP  <||@
  Comment 1619 1724 NOP  <||@
  Comment 1620 1726 NOP  <||@
  Comment 1621 1728 rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1626 1730 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1631 1732 rdx|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1635 1734 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1640 1736 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1645 1738 rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1648 1740 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1653 1742 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1658 1744 rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1661 1746 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1666 1748 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1671 1750 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1674 1752 JUMP ~outgoingValues: [] destination: B80 -> B79  <||@
  Comment 1674 block B79 loop 3 depth 1 header:700|LoopBegin  <||@
  Comment 1674 1672 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1674 1674 NOP  <||@
  Comment 1675 1676 NOP  <||@
  Comment 1676 1678 NOP  <||@
  Comment 1677 1680 NOP  <||@
  Comment 1678 1682 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD  <||@
  Comment 1682 block B81 null  <||@
  Comment 1682 1754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1682 1756 NOP  <||@
  Comment 1683 1758 NOP  <||@
  Comment 1684 1760 NOP  <||@
  Comment 1685 1762 JUMP ~outgoingValues: [] destination: B81 -> B82  <||@
  Comment 1690 block B83 loop 4 depth 1 header:727|LoopBegin  <||@
  Comment 1690 1776 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1696 1778 NOP  <||@
  Comment 1697 1780 NOP  <||@
  Comment 1698 1782 NOP  <||@
  Comment 1699 1784 NOP  <||@
  Comment 1700 1786 NOP  <||@
  Comment 1701 1788 NOP  <||@
  Comment 1702 1790 rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1707 1792 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1712 1794 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1714 1796 JUMP ~outgoingValues: [] destination: B83 -> B82  <||@
  Comment 1714 block B82 loop 4 depth 1 header:727|LoopBegin  <||@
  Comment 1714 1764 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1714 1766 NOP  <||@
  Comment 1715 1768 NOP  <||@
  Comment 1716 1770 NOP  <||@
  Comment 1717 1772 NOP  <||@
  Comment 1718 1774 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD  <||@
  Comment 1723 block B84 null  <||@
  Comment 1723 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1723 1800 NOP  <||@
  Comment 1724 1802 NOP  <||@
  Comment 1725 1804 NOP  <||@
  Comment 1726 1806 JUMP ~outgoingValues: [] destination: B84 -> B85  <||@
  Comment 1726 block B85 null  <||@
  Comment 1726 1808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1726 1810 NOP  <||@
  Comment 1727 1812 NOP  <||@
  Comment 1728 1814 NOP  <||@
  Comment 1729 1816 NOP  <||@
  Comment 1730 1818 NOP  <||@
  Comment 1731 1820 NOP  <||@
  Comment 1732 1822 NOP  <||@
  Comment 1733 1824 NOP  <||@
  Comment 1734 1826 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1741 1828 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1745 1830 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD  <||@
  Comment 1758 block B87 null  <||@
  Comment 1758 1860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 1862 NOP  <||@
  Comment 1759 1864 NOP  <||@
  Comment 1760 1866 NOP  <||@
  Comment 1761 1868 NOP  <||@
  Comment 1762 1870 NOP  <||@
  Comment 1763 1872 NOP  <||@
  Comment 1764 1874 NOP  <||@
  Comment 1765 1876 NOP  <||@
  Comment 1766 1878 NOP  <||@
  Comment 1767 1880 NOP  <||@
  Comment 1768 1882 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1775 1884 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 1782 1886 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1789 1888 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}  <||@
  Comment 1789 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 1796 1890 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1803 1892 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1811 1894 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1811 1896 JUMP ~outgoingValues: [] destination: B87 -> B88  <||@
  Comment 1811 block B88 null  <||@
  Comment 1811 1898 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1811 1900 NOP  <||@
  Comment 1812 1902 NOP  <||@
  Comment 1813 1904 NOP  <||@
  Comment 1814 1906 NOP  <||@
  Comment 1815 1908 NOP  <||@
  Comment 1816 1910 NOP  <||@
  Comment 1817 1912 NOP  <||@
  Comment 1818 1914 NOP  <||@
  Comment 1819 1916 NOP  <||@
  Comment 1820 1918 NOP  <||@
  Comment 1821 1920 NOP  <||@
  Comment 1822 1922 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 1826 1924 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1830 1926 MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333]  <||@
  Comment 1830 {NarrowOop[Pattern.Node@116800333]}  <||@
  Comment 1837 1928 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1846 POLL_RETURN_FAR  <||@
  Comment 1863 block B68 null  <||@
  Comment 1863 1502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1863 1504 NOP  <||@
  Comment 1864 1506 NOP  <||@
  Comment 1865 1508 NOP  <||@
  Comment 1866 1510 JUMP ~outgoingValues: [] destination: B68 -> B73  <||@
  Comment 1871 block B64 null  <||@
  Comment 1871 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 1456 NOP  <||@
  Comment 1872 1458 NOP  <||@
  Comment 1873 1460 NOP  <||@
  Comment 1874 1462 JUMP ~outgoingValues: [] destination: B64 -> B67  <||@
  Comment 1879 block B3 null  <||@
  Comment 1879 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1879 106 NOP  <||@
  Comment 1880 108 NOP  <||@
  Comment 1881 110 NOP  <||@
  Comment 1882 112 NOP  <||@
  Comment 1883 114 CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 1893 block B5 null  <||@
  Comment 1893 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1893 134 NOP  <||@
  Comment 1894 136 NOP  <||@
  Comment 1895 138 NOP  <||@
  Comment 1896 140 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1902 142 JUMP ~outgoingValues: [] destination: B5 -> B47  <||@
  Comment 1907 block B62 null  <||@
  Comment 1907 1428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1907 1430 NOP  <||@
  Comment 1908 1432 NOP  <||@
  Comment 1909 1434 NOP  <||@
  Comment 1910 1436 JUMP ~outgoingValues: [] destination: B62 -> B85  <||@
  Comment 1915 block B48 null  <||@
  Comment 1915 1092 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 1094 NOP  <||@
  Comment 1916 1096 NOP  <||@
  Comment 1917 1098 NOP  <||@
  Comment 1918 1100 NOP  <||@
  Comment 1919 1102 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354]  <||@
  Comment 1919 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1919 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1934 block B50 null  <||@
  Comment 1934 1118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 1120 NOP  <||@
  Comment 1935 1122 NOP  <||@
  Comment 1936 1124 NOP  <||@
  Comment 1937 1126 NOP  <||@
  Comment 1938 1128 NOP  <||@
  Comment 1939 1130 NOP  <||@
  Comment 1940 1132 NOP  <||@
  Comment 1941 1134 NOP  <||@
  Comment 1942 1136 NOP  <||@
  Comment 1943 1138 NOP  <||@
  Comment 1944 1140 NOP  <||@
  Comment 1945 1142 NOP  <||@
  Comment 1946 1144 NOP  <||@
  Comment 1947 1146 NOP  <||@
  Comment 1948 1148 NOP  <||@
  Comment 1949 1150 NOP  <||@
  Comment 1950 1152 NOP  <||@
  Comment 1951 1154 NOP  <||@
  Comment 1952 1156 NOP  <||@
  Comment 1953 1158 NOP  <||@
  Comment 1954 1160 NOP  <||@
  Comment 1955 1162 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1963 1164 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1168 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404]  <||@
  Comment 1967 {HotSpotMethod<Pattern.single(int)>}  <||@
  Comment 1967 INVOKESPECIAL  <||@
  Comment 1972 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6 
     locals:  |-                  |-  |-  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |   |   |   |    <||@
  Comment 1980 1170 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 1172 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1987 1174 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407]  <||@
  Comment 1987 {HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)>}  <||@
  Comment 1987 INVOKESPECIAL  <||@
  Comment 1992 []at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2000 1176 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2009 POLL_RETURN_FAR  <||@
  Comment 2026 block B6 null  <||@
  Comment 2026 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2026 146 NOP  <||@
  Comment 2027 148 NOP  <||@
  Comment 2028 150 NOP  <||@
  Comment 2029 152 NOP  <||@
  Comment 2030 154 NOP  <||@
  Comment 2031 156 NOP  <||@
  Comment 2032 158 NOP  <||@
  Comment 2033 160 NOP  <||@
  Comment 2034 162 NOP  <||@
  Comment 2035 164 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2039 166 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148]  <||@
  Comment 2039 {HotSpotMethod<Pattern.nextEscaped()>}  <||@
  Comment 2039 INVOKESPECIAL  <||@
  Comment 2044 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148, duringCall: true, rethrow: false]
              |0                  |1           |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2052 168 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null  <||@
  Comment 2061 block B8 null  <||@
  Comment 2061 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2061 184 NOP  <||@
  Comment 2062 186 NOP  <||@
  Comment 2063 188 NOP  <||@
  Comment 2064 190 NOP  <||@
  Comment 2065 192 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null  <||@
  Comment 2074 block B11 null  <||@
  Comment 2074 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2074 230 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 232 NOP  <||@
  Comment 2079 234 NOP  <||@
  Comment 2080 236 NOP  <||@
  Comment 2081 238 NOP  <||@
  Comment 2082 240 NOP  <||@
  Comment 2083 242 NOP  <||@
  Comment 2084 244 NOP  <||@
  Comment 2085 246 NOP  <||@
  Comment 2086 248 NOP  <||@
  Comment 2087 250 NOP  <||@
  Comment 2088 252 NOP  <||@
  Comment 2089 254 NOP  <||@
  Comment 2090 256 NOP  <||@
  Comment 2091 258 NOP  <||@
  Comment 2092 260 NOP  <||@
  Comment 2093 262 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2098 264 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD  <||@
  Comment 2101 266 MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD  <||@
  Comment 2104 268 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2107 272 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2111 274 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2116 276 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2121 278 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2127 280 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287]  <||@
  Comment 2127 {HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>}  <||@
  Comment 2127 INVOKESPECIAL  <||@
  Comment 2132 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2140 282 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 2148 block B13 null  <||@
  Comment 2148 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2148 308 NOP  <||@
  Comment 2149 310 NOP  <||@
  Comment 2150 312 NOP  <||@
  Comment 2151 314 NOP  <||@
  Comment 2152 316 NOP  <||@
  Comment 2153 318 NOP  <||@
  Comment 2154 320 NOP  <||@
  Comment 2155 322 NOP  <||@
  Comment 2156 324 NOP  <||@
  Comment 2157 326 NOP  <||@
  Comment 2158 328 NOP  <||@
  Comment 2159 330 NOP  <||@
  Comment 2160 332 NOP  <||@
  Comment 2161 334 NOP  <||@
  Comment 2162 336 NOP  <||@
  Comment 2163 338 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2167 340 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2169 342 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2174 344 stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2178 346 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301]  <||@
  Comment 2179 {HotSpotMethod<Pattern.append(int, int)>}  <||@
  Comment 2179 INVOKESPECIAL  <||@
  Comment 2184 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4               |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |stack:32|DWORD  |-  |-   <||@
  Comment 2192 348 rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2196 350 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309]  <||@
  Comment 2199 {HotSpotMethod<Pattern.isSupplementary(int)>}  <||@
  Comment 2199 INVOKESTATIC  <||@
  Comment 2204 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2212 352 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 2220 block B14 null  <||@
  Comment 2220 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2220 356 NOP  <||@
  Comment 2221 358 NOP  <||@
  Comment 2222 360 NOP  <||@
  Comment 2223 362 NOP  <||@
  Comment 2224 364 NOP  <||@
  Comment 2225 366 NOP  <||@
  Comment 2226 368 NOP  <||@
  Comment 2227 370 NOP  <||@
  Comment 2228 372 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 374 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318]  <||@
  Comment 2235 {HotSpotMethod<Pattern.peek()>}  <||@
  Comment 2235 INVOKESPECIAL  <||@
  Comment 2240 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2248 376 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2253 378 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2256 380 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2260 382 JUMP ~outgoingValues: [] destination: B14 -> B23  <||@
  Comment 2265 block B86 null  <||@
  Comment 2265 1832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2265 1834 NOP  <||@
  Comment 2266 1836 NOP  <||@
  Comment 2267 1838 NOP  <||@
  Comment 2268 1840 NOP  <||@
  Comment 2269 1842 NOP  <||@
  Comment 2270 1844 NOP  <||@
  Comment 2271 1846 NOP  <||@
  Comment 2272 1848 NOP  <||@
  Comment 2273 1850 NOP  <||@
  Comment 2274 1852 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}  <||@
  Comment 2274 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}}  <||@
  Comment 2284 1854 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418]  <||@
  Comment 2284 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2289 [r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2297 1856 NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418]  <||@
  Comment 2297 [rax:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2297 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2299 1858 JUMP ~outgoingValues: [] destination: B86 -> B88  <||@
  Comment 2304 block B52 null  <||@
  Comment 2304 1218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2304 1220 NOP  <||@
  Comment 2305 1222 NOP  <||@
  Comment 2306 1224 NOP  <||@
  Comment 2307 1226 NOP  <||@
  Comment 2308 1228 NOP  <||@
  Comment 2309 1230 NOP  <||@
  Comment 2310 1232 NOP  <||@
  Comment 2311 1234 NOP  <||@
  Comment 2312 1236 NOP  <||@
  Comment 2313 1238 NOP  <||@
  Comment 2314 1240 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2314 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2324 1242 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2327 1244 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354]  <||@
  Comment 2327 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2332 [r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2340 1246 NULLCHECK address: [rax|QWORD[.]] state [bci:354]  <||@
  Comment 2340 [rax:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2342 1248 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2345 1250 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2349 1252 JUMP ~outgoingValues: [] destination: B52 -> B60  <||@
  Comment 2354 block B58 null  <||@
  Comment 2354 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1360 NOP  <||@
  Comment 2355 1362 NOP  <||@
  Comment 2356 1364 NOP  <||@
  Comment 2357 1366 NOP  <||@
  Comment 2358 1368 NOP  <||@
  Comment 2359 1370 NOP  <||@
  Comment 2360 1372 NOP  <||@
  Comment 2361 1374 NOP  <||@
  Comment 2362 1376 NOP  <||@
  Comment 2363 1378 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 2366 1380 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2376 1382 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 1384 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 2385 block B93 null  <||@
  Comment 2385 1994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1996 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2389 1998 NOP  <||@
  Comment 2390 2000 NOP  <||@
  Comment 2391 2002 NOP  <||@
  Comment 2392 2004 NOP  <||@
  Comment 2393 2006 NOP  <||@
  Comment 2394 2008 NOP  <||@
  Comment 2395 2010 NOP  <||@
  Comment 2396 2012 MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD  <||@
  Comment 2407 2014 MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD  <||@
  Comment 2418 2016 DEOPT info [bci:15, 383]  <||@
  Comment 2418 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2423 [rdx:0, stack:0]at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |-         
     stack:   |rdx|QWORD[.]       |rax|DWORD 
  at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383, duringCall: true, rethrow: false]
              |0                  |1               |2         |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |r9|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2431 block B95 null  <||@
  Comment 2431 2032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2431 2034 NOP  <||@
  Comment 2432 2036 NOP  <||@
  Comment 2433 2038 NOP  <||@
  Comment 2434 2040 rcx|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 2441 2042 r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed]  <||@
  Comment 2447 2044 JUMP ~outgoingValues: [] destination: B95 -> B96  <||@
  Comment 2447 block B96 null  <||@
  Comment 2447 2046 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2447 2048 NOP  <||@
  Comment 2448 2050 NOP  <||@
  Comment 2449 2052 NOP  <||@
  Comment 2450 2054 NOP  <||@
  Comment 2451 2056 NOP  <||@
  Comment 2452 2058 NOP  <||@
  Comment 2453 2060 NOP  <||@
  Comment 2454 2062 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2461 2064 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2468 2066 DEOPT info [bci:42, 366]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2473 [stack:0]at java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1          |2         |3 
     locals:  |stack:48|QWORD[.]  |r10|DWORD  |r8|DWORD  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366, duringCall: true, rethrow: false]
              |0                  |1         |2         |3           |4          |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |r9|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 2481 block B71 null  <||@
  Comment 2481 1536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2481 1538 NOP  <||@
  Comment 2482 1540 NOP  <||@
  Comment 2483 1542 NOP  <||@
  Comment 2484 1544 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 2491 1546 r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 2497 1548 JUMP ~outgoingValues: [] destination: B71 -> B92  <||@
  Comment 2497 block B92 null  <||@
  Comment 2497 1972 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2497 1974 NOP  <||@
  Comment 2498 1976 NOP  <||@
  Comment 2499 1978 NOP  <||@
  Comment 2500 1980 NOP  <||@
  Comment 2501 1982 NOP  <||@
  Comment 2502 1984 NOP  <||@
  Comment 2503 1986 NOP  <||@
  Comment 2504 1988 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2511 1990 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2518 1992 DEOPT info [bci:354]  <||@
  Comment 2518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2523 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2531 block B12 null  <||@
  Comment 2531 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2531 286 NOP  <||@
  Comment 2532 288 NOP  <||@
  Comment 2533 290 NOP  <||@
  Comment 2534 292 NOP  <||@
  Comment 2535 294 NOP  <||@
  Comment 2536 296 NOP  <||@
  Comment 2537 298 NOP  <||@
  Comment 2538 300 MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD  <||@
  Comment 2549 302 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 2560 304 DEOPT info [bci:290]  <||@
  Comment 2560 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2565 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290, duringCall: false, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |                |            |   |   |    <||@
  Comment 2573 block B9 null  <||@
  Comment 2573 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2573 196 NOP  <||@
  Comment 2574 198 NOP  <||@
  Comment 2575 200 NOP  <||@
  Comment 2576 202 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 2582 204 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 2582 block B10 null  <||@
  Comment 2582 206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2582 208 NOP  <||@
  Comment 2583 210 NOP  <||@
  Comment 2584 212 NOP  <||@
  Comment 2585 214 NOP  <||@
  Comment 2586 216 NOP  <||@
  Comment 2587 218 NOP  <||@
  Comment 2588 220 NOP  <||@
  Comment 2589 222 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2596 224 MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD  <||@
  Comment 2607 226 DEOPT info [bci:151]  <||@
  Comment 2607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2612 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151, duringCall: false, rethrow: false]
              |0                  |1           |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |-  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |   |            |   |   |    <||@
  Comment 2620 block B90 null  <||@
  Comment 2620 1944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2620 1946 NOP  <||@
  Comment 2621 1948 NOP  <||@
  Comment 2622 1950 NOP  <||@
  Comment 2623 1952 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 2630 1954 r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5]  <||@
  Comment 2636 1956 JUMP ~outgoingValues: [] destination: B90 -> B92  <||@
  Comment 2641 block B7 null  <||@
  Comment 2641 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2641 172 NOP  <||@
  Comment 2642 174 NOP  <||@
  Comment 2643 176 NOP  <||@
  Comment 2644 178 r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed]  <||@
  Comment 2650 180 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 2652 block B105 null  <||@
  Comment 2652 2196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2652 2198 NOP  <||@
  Comment 2653 2200 NOP  <||@
  Comment 2654 2202 NOP  <||@
  Comment 2655 2204 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2662 2206 r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed]  <||@
  Comment 2668 2210 JUMP ~outgoingValues: [] destination: B105 -> B110  <||@
  Comment 2668 block B110 null  <||@
  Comment 2668 2276 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2668 128 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2672 2278 NOP  <||@
  Comment 2673 2280 NOP  <||@
  Comment 2674 2282 NOP  <||@
  Comment 2675 2284 NOP  <||@
  Comment 2676 2286 NOP  <||@
  Comment 2677 2288 NOP  <||@
  Comment 2678 2290 NOP  <||@
  Comment 2679 2292 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2686 2294 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2693 2296 DEOPT info [bci:0]  <||@
  Comment 2693 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2698 [rsi:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 2706 block B99 null  <||@
  Comment 2706 2096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2706 2098 NOP  <||@
  Comment 2707 2100 NOP  <||@
  Comment 2708 2102 NOP  <||@
  Comment 2709 2104 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2716 2106 r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5]  <||@
  Comment 2722 2108 JUMP ~outgoingValues: [] destination: B99 -> B101  <||@
  Comment 2722 block B101 null  <||@
  Comment 2722 2124 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2722 2126 NOP  <||@
  Comment 2723 2128 NOP  <||@
  Comment 2724 2130 NOP  <||@
  Comment 2725 2132 NOP  <||@
  Comment 2726 2134 NOP  <||@
  Comment 2727 2136 NOP  <||@
  Comment 2728 2138 NOP  <||@
  Comment 2729 2140 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 2736 2142 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2743 2144 DEOPT info [bci:12]  <||@
  Comment 2743 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2748 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0                  |1         |2          |3           |4          |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 2756 block B15 null  <||@
  Comment 2756 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2756 386 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2760 388 NOP  <||@
  Comment 2761 390 NOP  <||@
  Comment 2762 392 NOP  <||@
  Comment 2763 394 NOP  <||@
  Comment 2764 396 NOP  <||@
  Comment 2765 398 NOP  <||@
  Comment 2766 400 NOP  <||@
  Comment 2767 402 MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD  <||@
  Comment 2778 404 MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD  <||@
  Comment 2789 406 DEOPT info [bci:312]  <||@
  Comment 2789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2794 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312, duringCall: false, rethrow: false]
              |0                  |1           |2          |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |rdx|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |           |            |   |   |    <||@
  Comment 2802 block B100 null  <||@
  Comment 2802 2110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2802 2112 NOP  <||@
  Comment 2803 2114 NOP  <||@
  Comment 2804 2116 NOP  <||@
  Comment 2805 2118 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2812 2120 r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed]  <||@
  Comment 2818 2122 JUMP ~outgoingValues: [] destination: B100 -> B101  <||@
  Comment 2820 block B109 null  <||@
  Comment 2820 2260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2820 2262 NOP  <||@
  Comment 2821 2264 NOP  <||@
  Comment 2822 2266 NOP  <||@
  Comment 2823 2268 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2830 2270 r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5]  <||@
  Comment 2836 2274 JUMP ~outgoingValues: [] destination: B109 -> B110  <||@
  Comment 2841 block B106 null  <||@
  Comment 2841 2212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2841 2214 NOP  <||@
  Comment 2842 2216 NOP  <||@
  Comment 2843 2218 NOP  <||@
  Comment 2844 2220 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2851 2222 r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5]  <||@
  Comment 2857 2226 JUMP ~outgoingValues: [] destination: B106 -> B110  <||@
  Comment 2862 block B49 null  <||@
  Comment 2862 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2862 1106 NOP  <||@
  Comment 2863 1108 NOP  <||@
  Comment 2864 1110 NOP  <||@
  Comment 2865 1112 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2872 1114 r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5]  <||@
  Comment 2878 1116 JUMP ~outgoingValues: [] destination: B49 -> B92  <||@
  Comment 2883 block B37 null  <||@
  Comment 2883 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2883 880 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2887 882 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2891 884 NOP  <||@
  Comment 2892 886 NOP  <||@
  Comment 2893 888 NOP  <||@
  Comment 2894 890 NOP  <||@
  Comment 2895 892 NOP  <||@
  Comment 2896 894 NOP  <||@
  Comment 2897 896 NOP  <||@
  Comment 2898 898 MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD  <||@
  Comment 2909 900 MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD  <||@
  Comment 2920 902 DEOPT info [bci:312]  <||@
  Comment 2920 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2925 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312, duringCall: false, rethrow: false]
              |0                  |1          |2          |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |rcx|DWORD  |rdx|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |           |           |            |   |   |    <||@
  Comment 2933 block B38 null  <||@
  Comment 2933 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2933 906 NOP  <||@
  Comment 2934 908 NOP  <||@
  Comment 2935 910 NOP  <||@
  Comment 2936 912 NOP  <||@
  Comment 2937 914 NOP  <||@
  Comment 2938 916 NOP  <||@
  Comment 2939 918 NOP  <||@
  Comment 2940 920 MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD  <||@
  Comment 2951 922 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2962 924 DEOPT info [bci:10, 267]  <||@
  Comment 2962 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2967 [stack:0]at java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267, duringCall: true, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2975 block B30 null  <||@
  Comment 2975 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2975 672 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2980 674 NOP  <||@
  Comment 2981 676 NOP  <||@
  Comment 2982 678 NOP  <||@
  Comment 2983 680 r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed]  <||@
  Comment 2989 682 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 2989 block B31 null  <||@
  Comment 2989 684 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2989 686 NOP  <||@
  Comment 2990 688 NOP  <||@
  Comment 2991 690 NOP  <||@
  Comment 2992 692 NOP  <||@
  Comment 2993 694 NOP  <||@
  Comment 2994 696 NOP  <||@
  Comment 2995 698 NOP  <||@
  Comment 2996 700 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3003 702 MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD  <||@
  Comment 3014 704 DEOPT info [bci:151]  <||@
  Comment 3014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3019 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |          |   |            |   |   |    <||@
  Comment 3027 block B89 null  <||@
  Comment 3027 1930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3027 1932 NOP  <||@
  Comment 3028 1934 NOP  <||@
  Comment 3029 1936 NOP  <||@
  Comment 3030 1938 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 3037 1940 r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 3043 1942 JUMP ~outgoingValues: [] destination: B89 -> B92  <||@
  Comment 3048 block B94 null  <||@
  Comment 3048 2018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3048 2020 NOP  <||@
  Comment 3049 2022 NOP  <||@
  Comment 3050 2024 NOP  <||@
  Comment 3051 2026 rcx|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 3058 2028 r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed]  <||@
  Comment 3064 2030 JUMP ~outgoingValues: [] destination: B94 -> B96  <||@
  Comment 3069 block B74 null  <||@
  Comment 3069 1572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3069 1574 NOP  <||@
  Comment 3070 1576 NOP  <||@
  Comment 3071 1578 NOP  <||@
  Comment 3072 1580 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3079 1582 r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5]  <||@
  Comment 3085 1584 JUMP ~outgoingValues: [] destination: B74 -> B92  <||@
  Comment 3090 block B98 null  <||@
  Comment 3090 2082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3090 2084 NOP  <||@
  Comment 3091 2086 NOP  <||@
  Comment 3092 2088 NOP  <||@
  Comment 3093 2090 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3100 2092 r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5]  <||@
  Comment 3106 2094 JUMP ~outgoingValues: [] destination: B98 -> B101  <||@
  Comment 3111 block B97 null  <||@
  Comment 3111 2068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3111 2070 NOP  <||@
  Comment 3112 2072 NOP  <||@
  Comment 3113 2074 NOP  <||@
  Comment 3114 2076 rcx|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 3121 2078 r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed]  <||@
  Comment 3127 2080 JUMP ~outgoingValues: [] destination: B97 -> B101  <||@
  Comment 3132 block B4 null  <||@
  Comment 3132 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3132 118 NOP  <||@
  Comment 3133 120 NOP  <||@
  Comment 3134 122 NOP  <||@
  Comment 3135 124 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 3142 126 r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed]  <||@
  Comment 3148 130 JUMP ~outgoingValues: [] destination: B4 -> B110  <||@
  Comment 3153 block B18 null  <||@
  Comment 3153 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3153 446 NOP  <||@
  Comment 3154 448 NOP  <||@
  Comment 3155 450 NOP  <||@
  Comment 3156 452 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3163 454 r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5]  <||@
  Comment 3169 458 JUMP ~outgoingValues: [] destination: B18 -> B110  <||@
  Comment 3174 block B26 null  <||@
  Comment 3174 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3174 600 NOP  <||@
  Comment 3175 602 NOP  <||@
  Comment 3176 604 NOP  <||@
  Comment 3177 606 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 3184 608 r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed]  <||@
  Comment 3190 610 JUMP ~outgoingValues: [] destination: B26 -> B101  <||@
  Comment 3195 block B102 null  <||@
  Comment 3195 2146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3195 2148 NOP  <||@
  Comment 3196 2150 NOP  <||@
  Comment 3197 2152 NOP  <||@
  Comment 3198 2154 r11|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 3205 2156 r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed]  <||@
  Comment 3211 2158 JUMP ~outgoingValues: [] destination: B102 -> B104  <||@
  Comment 3211 block B104 null  <||@
  Comment 3211 2174 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3211 2176 NOP  <||@
  Comment 3212 2178 NOP  <||@
  Comment 3213 2180 NOP  <||@
  Comment 3214 2182 NOP  <||@
  Comment 3215 2184 NOP  <||@
  Comment 3216 2186 NOP  <||@
  Comment 3217 2188 NOP  <||@
  Comment 3218 2190 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3225 2192 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3232 2194 DEOPT info [bci:42, 366]  <||@
  Comment 3232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3237 [stack:0]at java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1         |2           |3 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |int[0|0x0]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366, duringCall: true, rethrow: false]
              |0                  |1           |2         |3           |4         |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |r8|DWORD  |int[0|0x0]  |r9|DWORD  |-  |-   <||@
  Comment 3245 block B28 null  <||@
  Comment 3245 644 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3245 646 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 3250 648 NOP  <||@
  Comment 3251 650 NOP  <||@
  Comment 3252 652 NOP  <||@
  Comment 3253 654 r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed]  <||@
  Comment 3259 656 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 3264 block B91 null  <||@
  Comment 3264 1958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3264 1960 NOP  <||@
  Comment 3265 1962 NOP  <||@
  Comment 3266 1964 NOP  <||@
  Comment 3267 1966 r11|QWORD = MOVE input: long[35220|0x8994]  <||@
  Comment 3274 1968 r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed]  <||@
  Comment 3280 1970 JUMP ~outgoingValues: [] destination: B91 -> B92  <||@
  Comment 3285 block B108 null  <||@
  Comment 3285 2244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3285 2246 NOP  <||@
  Comment 3286 2248 NOP  <||@
  Comment 3287 2250 NOP  <||@
  Comment 3288 2252 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 3295 2254 r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed]  <||@
  Comment 3301 2258 JUMP ~outgoingValues: [] destination: B108 -> B110  <||@
  Comment 3306 block B34 null  <||@
  Comment 3306 776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3306 778 NOP  <||@
  Comment 3307 780 NOP  <||@
  Comment 3308 782 NOP  <||@
  Comment 3309 784 NOP  <||@
  Comment 3310 786 NOP  <||@
  Comment 3311 788 NOP  <||@
  Comment 3312 790 NOP  <||@
  Comment 3313 792 MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD  <||@
  Comment 3324 794 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 3335 796 DEOPT info [bci:290]  <||@
  Comment 3335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3340 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290, duringCall: false, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |                |            |   |   |    <||@
  Comment 3348 block B107 null  <||@
  Comment 3348 2228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3348 2230 NOP  <||@
  Comment 3349 2232 NOP  <||@
  Comment 3350 2234 NOP  <||@
  Comment 3351 2236 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3358 2238 r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 3364 2242 JUMP ~outgoingValues: [] destination: B107 -> B110  <||@
  Comment 3369 block B103 null  <||@
  Comment 3369 2160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3369 2162 NOP  <||@
  Comment 3370 2164 NOP  <||@
  Comment 3371 2166 NOP  <||@
  Comment 3372 2168 r11|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 3379 2170 r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed]  <||@
  Comment 3385 2172 JUMP ~outgoingValues: [] destination: B103 -> B104  <||@
  Comment 3395 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3420 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3440 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3473 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 3503 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3508 [rcx:0, rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 3538 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3543 [rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 3573 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3578 [rdx:0, rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 3608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3613 [rsi:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3648 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3678 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3683 [rax:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 3713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3718 [rax:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3726 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3726 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3732 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3732 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-11799[java.util.regex.Pattern.atom()]"
  method "HotSpotCompilation-11799[java.util.regex.Pattern.atom()]"
  date 1724269769131
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af91f80 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3307ffe66669089842400c0feff4883ec289041817f20000000000f85040d00009090909090909090909048896c242048893424448b5650468b1cd50c000000448b4620453bd80f869e0a00009090909090448b4e10490fbae1020f825b0c00009090909090909090909090909090909090909049c1e203478b4c82104169c91b010000c1f90483e10f488d1d16000000488b3ccb413bf90f858900000048c1ff204803dfffe300000000970600007c000000540c0000000000008000000028000000540c0000000000008000000029000000540c00002a000000540c000000000000800000002b000000540c00005b000000540c00003f000000540c00005c0000002a07000024000000540c00002e000000540c00005e000000540c00007b000000540c0000909090909090908b4e3c8b1ccd0c000000418bf8ffc7443bdf0f86ba0900009090909085db0f84e60a00009090909090f7db85db0f8de2080000909090909044890ccd100000004181f9000001000f8d950b000090909090664181f900d80f83d70a00009090909090897e20458b54ba10909090458bd841b801000000666690909090909090909090909090909090909090448b4e20418bc8ffc14169da1b010000c1fb0483e30f488d3d19000000488b14df413bd20f858c00000048c1fa204803faffe766669000000000420200007c000000ea080000000000008000000028000000ea080000000000008000000029000000ea0800002a000000ea08000000000000800000002b000000ea0800005b000000ea0800003f000000ea0800005c0000003101000024000000ea0800002e000000ea0800005e000000ea0800007b000000ea0800009090909090908b5e3c8b3cdd0c000000413bf80f86f10700009090909090908b5650418bc1ffc03b04d50c0000000f83560900009090909090418be82bef85ed0f8d590900009090909090909048c1e30346895483104181fa000001000f8d9406000090909090664181fa00d80f83ed0800009090909090909090894620448b561048c1e203490fbae2020f82380600009090909090904d8b9758040000418502448b548210448bc1458bd9e987feffff894c241444894424109090909090909090904c8bd690e8ac307ffe0f1f8400c405000583f8700f84480900009090909083f8500f842d080000448b442410488b342490909090909090baffffffff0356208956204585c00f85df070000895424109090909090909090909090904c8bd6ba00000000b90100000041b8000000006690e840307ffe0f1f84003006000685c00f8c1a090000909090909090909090909090909090488b34248bd0b9000000008944240c90e80c307ffe0f1f8400640600078b74240c666690e8f8357ffe0f1f84007806000885c00f852b0700009090909090909090488b3424666690e8d42f7ffe0f1f84009c060009448b442414448b5c2410448bd0488b3424e976fdffff90909090443b4e240f8c0e0800009090909090909090448b563c4183f8010f840d0300009090909090909090909090904d8b9fb8010000418bc048c1e002488d40174883e0f8488bd04903d3493b97c80100000f875d0400009090909090909090909090909090498997b8010000420f18841800010000420f18841840010000420f1884188001000049c7030100000041c74308a02600004589430c4c8d48f04981f9000800000f833b04000090909048c7c210000000e92d0000006666660f1f840000000000666666906666660f1f8400000000009090909090909049c7041300000000488d520890909090483bc277e49090909090909090909090908b4610480fbae0010f826a070000909090904183f8010f8c0f0200009090909090418bc0ffc84183f8020f8cd701000090909090443bc00f86b70400009090909090909090428b14d50c0000004183f8020f8ca8010000909090903bd00f86280600009090909083fa020f82f90300009090909090909085d20f8436060000909090909090909090428b04d5100000004189431049c1e2034183f803b802000000410f4cc0be01000000e91b000000660f1f840000000000909090909090418b54b210418954b310ffc6909090903bc67fe6909090909090418d40fce9610000006666660f1f840000000000666666900f1f840000000000909090909090909090909090909090909090909090418b54b210418954b3108bd6ffc2458b4c921045894c93108d5602458b4c921045894c93108d5603458b4c921045894c93108d7604909090903bc67fae909090e918000000660f1f440000909090909090418b44b210418944b310ffc690909090443bc67fe59090909090909090909090498b87b8010000488d7018493bb7c80100000f87fb010000909090909090909090904989b7b80100000f18801801000048c70001000000c74008d8923500c7400c0000000048c7401000000000909090909090909090909049c1eb0344895810c7400cee97bcc5488b6c24204883c428493ba7500400000f870b060000c5f877c3909090e96cfeffff909090e931feffff90909090443b46240f8cd704000090909041b800000000e9e8fcffff909090e943ffffff9090909042833cd50c000000000f84a0030000909090909090909090909090909090909090909090428b14d5100000004c8bd690e84c2c7ffe0f1f8400240a000c488b3424488bd0e8382c7ffe0f1f8400380a000d488b6c24204883c428493ba7500400000f877c050000c5f877c3909090909090909090488b3424e8042c7ffe0f1f84006c0a000e83f8700f84440200009090909083f8500f84f3010000488b3424909090909090909090909090909090baffffffff0356208956204c8bd689542414ba00000000b90100000041b800000000e8ac2b7ffe0f1f8400c40a000f85c00f8c7f010000909090909090909090909090909090488b34248bd0b9000000008944241090e8782b7ffe0f1f8400f80a00108b742410666690e864317ffe0f1f84000c0b001185c00f85180200009090909090909090488b3424666690e8402b7ffe0f1f8400300b0012448b442414448bd0488b3424e9d8f8ffff90909090909090909048bed892352b787f0000e80f5a94fe0f1f8400000000008500e913feffff9090909090909090909048bea026002b787f0000418bd0e864c393fe0f1f84000000000085004c8bd8488b3424e911fcffff909090909090909090498bc9498d7b104833c0f348aa488b3424e9eefbffff894c24149090909090909041c78784040000ed63fdff49c78790040000141e0000e883887ffe0f1f84000000000090909048c7c11419000041bbed6bfdff9090909090909045899f8404000049898f90040000e851887ffe0f1f84000000000090909049c7c3989d000041bae546feff90909090909090458997840400004d899f90040000e81f887ffe0f1f8400000000009090909090909041c78784040000ed9bfdff49c78790040000140f0000e8f5877ffe0f1f84000000000090909041baed9ffdff909090909090904589978404000049c78790040000140a0000e8c6877ffe0f1f84000000000090909049c7c3989d000041bae53efeffe970ffffff90909041baeda3fdffebba90909049c7c39416000041baed93fdff488b342490909090909090458997840400004d899f90040000e870877ffe0f1f84000000000090909048c7c10000000041b9e57dfeff9090909090909045898f8404000049898f90040000e83e877ffe0f1f8400000000008b5424149090909090909041c78784040000ed97fdff49c7879004000094110000e810877ffe0f1f84000000000090909048c7c11400000041b9edebffffeb9e90909049c7c30000000041bae5c0feffe953ffffff90909049c7c30000000041bae597feffe93effffff90909049c7c30000000041bae530feffe97efeffff8b5424108b4c24149090909090909041c78784040000ed73fdff49c7879004000094110000e88d867ffe0f1f8400000000009090909090909041c78784040000ed7bfdff49c78790040000940c0000e863867ffe0f1f840000000000448b44241090909041baed7ffdff909090909090904589978404000049c78790040000140a0000e82f867ffe0f1f84000000000090909049c7c3989d000041bae546feffe9d9fdffff90909048c7c1941b000041bbed67fdffe992fdffff90909049c7c30000000041bae52ffeffe9affdffff90909048c7c10000000041b9e56dfeffe97bfeffff90909048c7c19416000041b9ed6ffdffe966feffff90909049c7c31405000041baeda7fdffe91bfeffff90909049c7c30000000041bae535feffe906feffff90909048c7c11405000041b9ed86fdffe927feffff90909049c7c3941b000041baed8bfdff90909090909090458997840400004d899f90040000e855857ffe0f1f840000000000448b44241090909041baed83fdffe9edfeffff90909049c7c39489000041baed5ffdffe9ecfcffff90909049c7c31414000041baedabfdffe982fdffff9090909090909041c78784040000ed77fdff49c78790040000140f0000e8ee847ffe0f1f84000000000090909049c7c31400000041baed41ffffe943fdffff90909049c7c31419000041baed8ffdffe94dffffff48896c2420e858857dfee9edf2fffff4488d0de1f9ffff49898f68040000e91f937ffef4488d0d70faffff49898f68040000e90b937ffef441c78784040000f5c6feff49c7879004000000000000e869847ffe0f1f84000000000041c78784040000f5a7feff49c7879004000000000000e846847ffe0f1f84000000000041c78784040000f583feff49c7879004000000000000e823847ffe0f1f84000000000041c78784040000f572feff49c7879004000000000000e800847ffe0f1f84000000000041c78784040000f556feff49c7879004000000000000e8dd837ffe0f1f84000000000041c78784040000f562feff49c7879004000000000000e8ba837ffe0f1f84000000000041c787840400008fcefbff49c7879004000000000000e897837ffe0f1f84000000000041c787840400008ffffbff49c7879004000000000000e874837ffe0f1f840000000000e8ed2493fef4e807817ffef4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  JumpTable 192 8 0 15  <||@
  JumpTable 520 8 0 15  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 73 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@66407990 slotKind: QWORD  <||@
  Comment 73 26 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 77 28 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 81 30 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 32 r8|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 93 34 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B109 size: DWORD  <||@
  Comment 102 block B1 null  <||@
  Comment 102 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 102 38 NOP  <||@
  Comment 103 40 NOP  <||@
  Comment 104 42 NOP  <||@
  Comment 105 44 NOP  <||@
  Comment 106 46 NOP  <||@
  Comment 107 48 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 50 BITTESTANDBRANCH value: r9|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B1 -> B2 falseDestination: B1 -> B108 index: 2  <||@
  Comment 122 block B2 null  <||@
  Comment 122 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 122 54 NOP  <||@
  Comment 123 56 NOP  <||@
  Comment 124 58 NOP  <||@
  Comment 125 60 NOP  <||@
  Comment 126 62 NOP  <||@
  Comment 127 64 NOP  <||@
  Comment 128 66 NOP  <||@
  Comment 129 68 NOP  <||@
  Comment 130 70 NOP  <||@
  Comment 131 72 NOP  <||@
  Comment 132 74 NOP  <||@
  Comment 133 76 NOP  <||@
  Comment 134 78 NOP  <||@
  Comment 135 80 NOP  <||@
  Comment 136 82 NOP  <||@
  Comment 137 84 NOP  <||@
  Comment 138 86 NOP  <||@
  Comment 139 88 NOP  <||@
  Comment 140 90 NOP  <||@
  Comment 141 92 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 145 94 r9|DWORD = MOV input: [r10|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 150 96 rcx|DWORD = IMUL x: r9|DWORD y: 283 size: DWORD  <||@
  Comment 157 98 rcx|DWORD = SAR x: rcx|DWORD y: 4 size: DWORD  <||@
  Comment 160 100 rcx|DWORD = AND x: rcx|DWORD y: 15 size: DWORD  <||@
  Comment 163 102 HASHTABLESWITCH (~value: r9|DWORD, ~hash: rcx|DWORD) {entryScratch: rdi|QWORD, scratch: rbx|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B2 -> B16 targets: [B2 -> B3, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B16, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B6, B2 -> B107, B2 -> B107, B2 -> B107, B2 -> B107]  <||@
  Comment 320 block B16 null  <||@
  Comment 320 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 320 410 NOP  <||@
  Comment 321 412 NOP  <||@
  Comment 322 414 NOP  <||@
  Comment 323 416 NOP  <||@
  Comment 324 418 NOP  <||@
  Comment 325 420 NOP  <||@
  Comment 326 422 NOP  <||@
  Comment 327 424 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 330 426 rbx|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 330 [rcx:0, rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 330 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 337 428 rdi|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 342 430 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B106 size: DWORD  <||@
  Comment 351 block B17 null  <||@
  Comment 351 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 434 NOP  <||@
  Comment 352 436 NOP  <||@
  Comment 353 438 NOP  <||@
  Comment 354 440 NOP  <||@
  Comment 355 442 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 363 block B19 null  <||@
  Comment 363 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 462 NOP  <||@
  Comment 364 464 NOP  <||@
  Comment 365 466 NOP  <||@
  Comment 366 468 NOP  <||@
  Comment 367 470 NOP  <||@
  Comment 368 472 rbx|DWORD = NEG value: rbx|DWORD size: DWORD  <||@
  Comment 370 474 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B105 size: DWORD  <||@
  Comment 378 block B20 null  <||@
  Comment 378 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 478 NOP  <||@
  Comment 379 480 NOP  <||@
  Comment 380 482 NOP  <||@
  Comment 381 484 NOP  <||@
  Comment 382 486 NOP  <||@
  Comment 383 488 MOV (x: [rcx|DWORD[_] * 8 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 391 490 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B103 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 404 block B21 null  <||@
  Comment 404 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 494 NOP  <||@
  Comment 405 496 NOP  <||@
  Comment 406 498 NOP  <||@
  Comment 407 500 NOP  <||@
  Comment 408 502 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B102 y: -10240 size: WORD inlinedY: null  <||@
  Comment 420 block B22 null  <||@
  Comment 420 504 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 420 506 NOP  <||@
  Comment 421 508 NOP  <||@
  Comment 422 510 NOP  <||@
  Comment 423 512 NOP  <||@
  Comment 424 514 NOP  <||@
  Comment 425 516 MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 428 518 r10|DWORD = MOV input: [r10|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 433 520 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 433 block B23 null  <||@
  Comment 433 522 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 433 524 NOP  <||@
  Comment 434 526 NOP  <||@
  Comment 435 528 NOP  <||@
  Comment 436 530 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 439 532 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 445 534 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 445 block B24 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 445 536 [] = LABEL alignment: 16 numbPhis: 3 label: ?  <||@
  Comment 448 538 NOP  <||@
  Comment 449 540 NOP  <||@
  Comment 450 542 NOP  <||@
  Comment 451 544 NOP  <||@
  Comment 452 546 NOP  <||@
  Comment 453 548 NOP  <||@
  Comment 454 550 NOP  <||@
  Comment 455 552 NOP  <||@
  Comment 456 554 NOP  <||@
  Comment 457 556 NOP  <||@
  Comment 458 558 NOP  <||@
  Comment 459 560 NOP  <||@
  Comment 460 562 NOP  <||@
  Comment 461 564 NOP  <||@
  Comment 462 566 NOP  <||@
  Comment 463 568 NOP  <||@
  Comment 464 570 NOP  <||@
  Comment 465 572 NOP  <||@
  Comment 466 574 r9|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 470 576 rcx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 475 578 rbx|DWORD = IMUL x: r10|DWORD y: 283 size: DWORD  <||@
  Comment 482 580 rbx|DWORD = SAR x: rbx|DWORD y: 4 size: DWORD  <||@
  Comment 485 582 rbx|DWORD = AND x: rbx|DWORD y: 15 size: DWORD  <||@
  Comment 488 584 HASHTABLESWITCH (~value: r10|DWORD, ~hash: rbx|DWORD) {entryScratch: rdx|QWORD, scratch: rdi|QWORD} keys: [int[0|0x0], int[124|0x7c], int[0|0x0], int[40|0x28], int[0|0x0], int[41|0x29], int[42|0x2a], int[0|0x0], int[43|0x2b], int[91|0x5b], int[63|0x3f], int[92|0x5c], int[36|0x24], int[46|0x2e], int[94|0x5e], int[123|0x7b]] defaultTarget: B24 -> B39 targets: [B24 -> B25, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B39, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B27, B24 -> B100, B24 -> B100, B24 -> B100, B24 -> B100]  <||@
  Comment 648 block B39 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 648 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 928 NOP  <||@
  Comment 649 930 NOP  <||@
  Comment 650 932 NOP  <||@
  Comment 651 934 NOP  <||@
  Comment 652 936 NOP  <||@
  Comment 653 938 NOP  <||@
  Comment 654 940 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 657 942 rdi|DWORD = MOV input: [rbx|DWORD[_] * 8 + 12] size: DWORD state [bci:12]  <||@
  Comment 657 [rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 657 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 664 944 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B99 size: DWORD  <||@
  Comment 673 block B40 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 673 946 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 948 NOP  <||@
  Comment 674 950 NOP  <||@
  Comment 675 952 NOP  <||@
  Comment 676 954 NOP  <||@
  Comment 677 956 NOP  <||@
  Comment 678 958 NOP  <||@
  Comment 679 960 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 80] size: DWORD  <||@
  Comment 682 962 rax|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 687 964 CMPBRANCH (x: rax|DWORD, y: [rdx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B98 size: DWORD state [bci:12]  <||@
  Comment 687 [rdx:0, rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 687 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 700 block B41 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 700 966 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 968 NOP  <||@
  Comment 701 970 NOP  <||@
  Comment 702 972 NOP  <||@
  Comment 703 974 NOP  <||@
  Comment 704 976 NOP  <||@
  Comment 705 978 rbp|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 710 980 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B97 size: DWORD  <||@
  Comment 718 block B42 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 718 982 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 984 NOP  <||@
  Comment 719 986 NOP  <||@
  Comment 720 988 NOP  <||@
  Comment 721 990 NOP  <||@
  Comment 722 992 NOP  <||@
  Comment 723 994 NOP  <||@
  Comment 724 996 NOP  <||@
  Comment 725 998 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 729 1000 MOV (x: [rbx|QWORD[.] + r8|DWORD * 4 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 734 1002 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B95 y: 65536 size: DWORD inlinedY: null  <||@
  Comment 747 block B43 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 747 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 747 1006 NOP  <||@
  Comment 748 1008 NOP  <||@
  Comment 749 1010 NOP  <||@
  Comment 750 1012 NOP  <||@
  Comment 751 1014 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B94 y: -10240 size: WORD inlinedY: null  <||@
  Comment 763 block B44 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 763 1016 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 763 1018 NOP  <||@
  Comment 764 1020 NOP  <||@
  Comment 765 1022 NOP  <||@
  Comment 766 1024 NOP  <||@
  Comment 767 1026 NOP  <||@
  Comment 768 1028 NOP  <||@
  Comment 769 1030 NOP  <||@
  Comment 770 1032 NOP  <||@
  Comment 771 1034 MOV (x: [rsi|QWORD[.] + 32], y: rax|DWORD) size: DWORD  <||@
  Comment 774 1036 r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 778 1038 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 782 1040 BITTESTANDBRANCH value: r10|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B44 -> B45 falseDestination: B44 -> B93 index: 2  <||@
  Comment 793 block B45 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 793 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 1044 NOP  <||@
  Comment 794 1046 NOP  <||@
  Comment 795 1048 NOP  <||@
  Comment 796 1050 NOP  <||@
  Comment 797 1052 NOP  <||@
  Comment 798 1054 NOP  <||@
  Comment 799 1056 SAFEPOINT temp: r10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:15, 383]  <||@
  Comment 806 [rdx:0, rsi:0, stack:0]at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |-         
     stack:   |rdx|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383, duringCall: true, rethrow: false]
              |0             |1          |2         |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |rcx|DWORD  |r9|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 806 {infopoint: SAFEPOINT}  <||@
  Comment 806 POLL_FAR  <||@
  Comment 809 1058 r10|DWORD = MOV input: [rdx|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 814 1060 r8|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 817 1062 r11|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 820 1064 JUMP ~outgoingValues: [] destination: B45 -> B24  <||@
  Comment 825 block B27 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 825 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 825 614 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 829 616 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 834 618 NOP  <||@
  Comment 835 620 NOP  <||@
  Comment 836 622 NOP  <||@
  Comment 837 624 NOP  <||@
  Comment 838 626 NOP  <||@
  Comment 839 628 NOP  <||@
  Comment 840 630 NOP  <||@
  Comment 841 632 NOP  <||@
  Comment 842 634 NOP  <||@
  Comment 843 636 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 846 640 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148]  <||@
  Comment 847 {HotSpotMethod<Pattern.nextEscaped()>}  <||@
  Comment 847 INVOKESPECIAL  <||@
  Comment 852 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148, duringCall: true, rethrow: false]
              |0                  |1               |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:32|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 860 642 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 112 size: DWORD inlinedY: null  <||@
  Comment 869 block B29 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 869 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 660 NOP  <||@
  Comment 870 662 NOP  <||@
  Comment 871 664 NOP  <||@
  Comment 872 666 NOP  <||@
  Comment 873 668 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B32 y: 80 size: DWORD inlinedY: null  <||@
  Comment 882 block B32 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 882 706 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 882 708 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 887 710 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 891 712 NOP  <||@
  Comment 892 714 NOP  <||@
  Comment 893 716 NOP  <||@
  Comment 894 718 NOP  <||@
  Comment 895 720 NOP  <||@
  Comment 896 722 NOP  <||@
  Comment 897 724 NOP  <||@
  Comment 898 726 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 903 728 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD  <||@
  Comment 906 730 MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD  <||@
  Comment 909 732 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B38 size: DWORD  <||@
  Comment 918 block B33 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 918 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 736 stack:32|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 922 738 NOP  <||@
  Comment 923 740 NOP  <||@
  Comment 924 742 NOP  <||@
  Comment 925 744 NOP  <||@
  Comment 926 746 NOP  <||@
  Comment 927 748 NOP  <||@
  Comment 928 750 NOP  <||@
  Comment 929 752 NOP  <||@
  Comment 930 754 NOP  <||@
  Comment 931 756 NOP  <||@
  Comment 932 758 NOP  <||@
  Comment 933 760 NOP  <||@
  Comment 934 762 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 937 766 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 942 768 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 947 770 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 953 772 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287]  <||@
  Comment 955 {HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>}  <||@
  Comment 955 INVOKESPECIAL  <||@
  Comment 960 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 968 774 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 976 block B35 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 976 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 976 800 NOP  <||@
  Comment 977 802 NOP  <||@
  Comment 978 804 NOP  <||@
  Comment 979 806 NOP  <||@
  Comment 980 808 NOP  <||@
  Comment 981 810 NOP  <||@
  Comment 982 812 NOP  <||@
  Comment 983 814 NOP  <||@
  Comment 984 816 NOP  <||@
  Comment 985 818 NOP  <||@
  Comment 986 820 NOP  <||@
  Comment 987 822 NOP  <||@
  Comment 988 824 NOP  <||@
  Comment 989 826 NOP  <||@
  Comment 990 828 NOP  <||@
  Comment 991 830 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 995 832 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 997 834 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1002 836 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1006 838 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301]  <||@
  Comment 1007 {HotSpotMethod<Pattern.append(int, int)>}  <||@
  Comment 1007 INVOKESPECIAL  <||@
  Comment 1012 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4               |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |stack:36|DWORD  |-  |-   <||@
  Comment 1020 840 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1024 842 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309]  <||@
  Comment 1027 {HotSpotMethod<Pattern.isSupplementary(int)>}  <||@
  Comment 1027 INVOKESTATIC  <||@
  Comment 1032 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309, duringCall: true, rethrow: false]
              |0                  |1               |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1040 844 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 1048 block B36 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 1048 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1048 848 NOP  <||@
  Comment 1049 850 NOP  <||@
  Comment 1050 852 NOP  <||@
  Comment 1051 854 NOP  <||@
  Comment 1052 856 NOP  <||@
  Comment 1053 858 NOP  <||@
  Comment 1054 860 NOP  <||@
  Comment 1055 862 NOP  <||@
  Comment 1056 864 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1060 866 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318]  <||@
  Comment 1063 {HotSpotMethod<Pattern.peek()>}  <||@
  Comment 1063 INVOKESPECIAL  <||@
  Comment 1068 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318, duringCall: true, rethrow: false]
              |0                  |1               |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1076 868 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1081 870 r11|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1086 872 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1089 874 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 876 JUMP ~outgoingValues: [] destination: B36 -> B24  <||@
  Comment 1098 block B25 null  <||@
  Comment 1098 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 588 NOP  <||@
  Comment 1099 590 NOP  <||@
  Comment 1100 592 NOP  <||@
  Comment 1101 594 NOP  <||@
  Comment 1102 596 CMPBRANCH (x: r9|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B46 size: DWORD  <||@
  Comment 1112 block B46 null  <||@
  Comment 1112 1066 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1112 1068 NOP  <||@
  Comment 1113 1070 NOP  <||@
  Comment 1114 1072 NOP  <||@
  Comment 1115 1074 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 1115 block B47 null  <||@
  Comment 1115 1076 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1115 1078 NOP  <||@
  Comment 1116 1080 NOP  <||@
  Comment 1117 1082 NOP  <||@
  Comment 1118 1084 NOP  <||@
  Comment 1119 1086 NOP  <||@
  Comment 1120 1088 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 1124 1090 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.06818919357455788 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1134 block B51 null  <||@
  Comment 1134 1178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1134 1180 NOP  <||@
  Comment 1135 1182 NOP  <||@
  Comment 1136 1184 NOP  <||@
  Comment 1137 1186 NOP  <||@
  Comment 1138 1188 NOP  <||@
  Comment 1139 1190 NOP  <||@
  Comment 1140 1192 NOP  <||@
  Comment 1141 1194 NOP  <||@
  Comment 1142 1196 NOP  <||@
  Comment 1143 1198 NOP  <||@
  Comment 1144 1200 NOP  <||@
  Comment 1145 1202 NOP  <||@
  Comment 1146 1204 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1153 1206 rax|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1156 1208 rax|QWORD = SHL x: rax|QWORD y: 2 size: QWORD  <||@
  Comment 1160 1210 rax|QWORD = LEA address: [rax|QWORD + 23] size: QWORD  <||@
  Comment 1164 1212 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 1168 1214 rdx|QWORD = ADD (x: rax|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1174 1216 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1187 block B53 null  <||@
  Comment 1187 1254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1187 1256 NOP  <||@
  Comment 1188 1258 NOP  <||@
  Comment 1189 1260 NOP  <||@
  Comment 1190 1262 NOP  <||@
  Comment 1191 1264 NOP  <||@
  Comment 1192 1266 NOP  <||@
  Comment 1193 1268 NOP  <||@
  Comment 1194 1270 NOP  <||@
  Comment 1195 1272 NOP  <||@
  Comment 1196 1274 NOP  <||@
  Comment 1197 1276 NOP  <||@
  Comment 1198 1278 NOP  <||@
  Comment 1199 1280 NOP  <||@
  Comment 1200 1282 NOP  <||@
  Comment 1201 1284 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1208 1286 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 1217 1288 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 1226 1290 AMD64PREFETCH ~address: [rax|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 1235 1292 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 1242 1294 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1242 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1250 1296 MOV (x: [r11|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 1254 1298 r9|QWORD = LEA address: [rax|QWORD - 16] size: QWORD  <||@
  Comment 1258 1300 CMPCONSTBRANCH x: r9|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B53 -> B54 falseDestination: B53 -> B58 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1271 block B54 null  <||@
  Comment 1271 1302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 1304 NOP  <||@
  Comment 1272 1306 NOP  <||@
  Comment 1273 1308 NOP  <||@
  Comment 1274 1310 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1281 1312 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 1286 block B56 loop 1 depth 1 header:969|LoopBegin  <||@
  Comment 1286 1326 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1312 1328 NOP  <||@
  Comment 1313 1330 NOP  <||@
  Comment 1314 1332 NOP  <||@
  Comment 1315 1334 NOP  <||@
  Comment 1316 1336 NOP  <||@
  Comment 1317 1338 NOP  <||@
  Comment 1318 1340 NOP  <||@
  Comment 1319 1342 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1327 1344 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 1331 1346 JUMP ~outgoingValues: [] destination: B56 -> B55  <||@
  Comment 1331 block B55 loop 1 depth 1 header:969|LoopBegin  <||@
  Comment 1331 1314 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1331 1316 NOP  <||@
  Comment 1332 1318 NOP  <||@
  Comment 1333 1320 NOP  <||@
  Comment 1334 1322 NOP  <||@
  Comment 1335 1324 CMPBRANCH (x: rax|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1340 block B57 null  <||@
  Comment 1340 1348 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1340 1350 NOP  <||@
  Comment 1341 1352 NOP  <||@
  Comment 1342 1354 NOP  <||@
  Comment 1343 1356 JUMP ~outgoingValues: [] destination: B57 -> B59  <||@
  Comment 1343 block B59 null  <||@
  Comment 1343 1386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1343 1388 NOP  <||@
  Comment 1344 1390 NOP  <||@
  Comment 1345 1392 NOP  <||@
  Comment 1346 1394 NOP  <||@
  Comment 1347 1396 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1347 1398 JUMP ~outgoingValues: [] destination: B59 -> B60  <||@
  Comment 1347 block B60 null  <||@
  Comment 1347 1400 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1347 1402 NOP  <||@
  Comment 1348 1404 NOP  <||@
  Comment 1349 1406 NOP  <||@
  Comment 1350 1408 NOP  <||@
  Comment 1351 1410 NOP  <||@
  Comment 1352 1412 rax|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 1355 1414 BITTESTANDBRANCH value: rax|DWORD trueDestinationProbability: 1.0 condition: |ncarry| trueDestination: B60 -> B61 falseDestination: B60 -> B91 index: 1  <||@
  Comment 1366 block B61 null  <||@
  Comment 1366 1416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1366 1418 NOP  <||@
  Comment 1367 1420 NOP  <||@
  Comment 1368 1422 NOP  <||@
  Comment 1369 1424 NOP  <||@
  Comment 1370 1426 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.1428571428571428 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1380 block B63 null  <||@
  Comment 1380 1438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1380 1440 NOP  <||@
  Comment 1381 1442 NOP  <||@
  Comment 1382 1444 NOP  <||@
  Comment 1383 1446 NOP  <||@
  Comment 1384 1448 NOP  <||@
  Comment 1385 1450 rax|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 1390 1452 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1400 block B65 null  <||@
  Comment 1400 1464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1400 1466 NOP  <||@
  Comment 1401 1468 NOP  <||@
  Comment 1402 1470 NOP  <||@
  Comment 1403 1472 NOP  <||@
  Comment 1404 1474 CMPBRANCH (x: r8|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B90 size: DWORD  <||@
  Comment 1413 block B66 null  <||@
  Comment 1413 1476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1413 1478 NOP  <||@
  Comment 1414 1480 NOP  <||@
  Comment 1415 1482 NOP  <||@
  Comment 1416 1484 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 1416 block B67 null  <||@
  Comment 1416 1486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1416 1488 NOP  <||@
  Comment 1417 1490 NOP  <||@
  Comment 1418 1492 NOP  <||@
  Comment 1419 1494 NOP  <||@
  Comment 1420 1496 NOP  <||@
  Comment 1421 1498 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:354]  <||@
  Comment 1421 [rsi:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1421 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1429 1500 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1439 block B69 null  <||@
  Comment 1439 1512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1439 1514 NOP  <||@
  Comment 1440 1516 NOP  <||@
  Comment 1441 1518 NOP  <||@
  Comment 1442 1520 NOP  <||@
  Comment 1443 1522 CMPBRANCH (x: rdx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B89 size: DWORD  <||@
  Comment 1451 block B70 null  <||@
  Comment 1451 1524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1451 1526 NOP  <||@
  Comment 1452 1528 NOP  <||@
  Comment 1453 1530 NOP  <||@
  Comment 1454 1532 NOP  <||@
  Comment 1455 1534 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1464 block B72 null  <||@
  Comment 1464 1550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 1552 NOP  <||@
  Comment 1465 1554 NOP  <||@
  Comment 1466 1556 NOP  <||@
  Comment 1467 1558 JUMP ~outgoingValues: [] destination: B72 -> B73  <||@
  Comment 1467 block B73 null  <||@
  Comment 1467 1560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1467 1562 NOP  <||@
  Comment 1468 1564 NOP  <||@
  Comment 1469 1566 NOP  <||@
  Comment 1470 1568 NOP  <||@
  Comment 1471 1570 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 size: DWORD  <||@
  Comment 1479 block B75 null  <||@
  Comment 1479 1586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1479 1588 NOP  <||@
  Comment 1480 1590 NOP  <||@
  Comment 1481 1592 NOP  <||@
  Comment 1482 1594 NOP  <||@
  Comment 1483 1596 NOP  <||@
  Comment 1484 1598 NOP  <||@
  Comment 1485 1600 NOP  <||@
  Comment 1486 1602 NOP  <||@
  Comment 1487 1604 NOP  <||@
  Comment 1488 1606 rax|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1496 1608 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1500 1610 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 1504 1612 CMP x: r8|DWORD y: 3 size: DWORD  <||@
  Comment 1508 1614 rax|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 1517 1616 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1522 1618 JUMP ~outgoingValues: [] destination: B75 -> B76  <||@
  Comment 1527 block B77 loop 2 depth 1 header:158|LoopBegin  <||@
  Comment 1527 1632 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1536 1634 NOP  <||@
  Comment 1537 1636 NOP  <||@
  Comment 1538 1638 NOP  <||@
  Comment 1539 1640 NOP  <||@
  Comment 1540 1642 NOP  <||@
  Comment 1541 1644 NOP  <||@
  Comment 1542 1646 rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1547 1648 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1552 1650 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1554 1652 JUMP ~outgoingValues: [] destination: B77 -> B76  <||@
  Comment 1554 block B76 loop 2 depth 1 header:158|LoopBegin  <||@
  Comment 1554 1620 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1554 1622 NOP  <||@
  Comment 1555 1624 NOP  <||@
  Comment 1556 1626 NOP  <||@
  Comment 1557 1628 NOP  <||@
  Comment 1558 1630 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 size: DWORD  <||@
  Comment 1562 block B78 null  <||@
  Comment 1562 1654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1562 1656 NOP  <||@
  Comment 1563 1658 NOP  <||@
  Comment 1564 1660 NOP  <||@
  Comment 1565 1662 NOP  <||@
  Comment 1566 1664 NOP  <||@
  Comment 1567 1666 NOP  <||@
  Comment 1568 1668 rax|DWORD = LEA address: [r8|DWORD - 4] size: DWORD  <||@
  Comment 1572 1670 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1577 block B80 loop 3 depth 1 header:700|LoopBegin  <||@
  Comment 1577 1684 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1600 1686 NOP  <||@
  Comment 1601 1688 NOP  <||@
  Comment 1602 1690 NOP  <||@
  Comment 1603 1692 NOP  <||@
  Comment 1604 1694 NOP  <||@
  Comment 1605 1696 NOP  <||@
  Comment 1606 1698 NOP  <||@
  Comment 1607 1700 NOP  <||@
  Comment 1608 1702 NOP  <||@
  Comment 1609 1704 NOP  <||@
  Comment 1610 1706 NOP  <||@
  Comment 1611 1708 NOP  <||@
  Comment 1612 1710 NOP  <||@
  Comment 1613 1712 NOP  <||@
  Comment 1614 1714 NOP  <||@
  Comment 1615 1716 NOP  <||@
  Comment 1616 1718 NOP  <||@
  Comment 1617 1720 NOP  <||@
  Comment 1618 1722 NOP  <||@
  Comment 1619 1724 NOP  <||@
  Comment 1620 1726 NOP  <||@
  Comment 1621 1728 rdx|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1626 1730 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1631 1732 rdx|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1635 1734 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1640 1736 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1645 1738 rdx|DWORD = LEA address: [rsi|DWORD + 2] size: DWORD  <||@
  Comment 1648 1740 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1653 1742 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1658 1744 rdx|DWORD = LEA address: [rsi|DWORD + 3] size: DWORD  <||@
  Comment 1661 1746 r9|DWORD = MOV input: [r10|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1666 1748 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 1671 1750 rsi|DWORD = LEA address: [rsi|DWORD + 4] size: DWORD  <||@
  Comment 1674 1752 JUMP ~outgoingValues: [] destination: B80 -> B79  <||@
  Comment 1674 block B79 loop 3 depth 1 header:700|LoopBegin  <||@
  Comment 1674 1672 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1674 1674 NOP  <||@
  Comment 1675 1676 NOP  <||@
  Comment 1676 1678 NOP  <||@
  Comment 1677 1680 NOP  <||@
  Comment 1678 1682 CMPBRANCH (x: rax|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.3333333333333339 condition: > trueDestination: B79 -> B80 falseDestination: B79 -> B81 size: DWORD  <||@
  Comment 1682 block B81 null  <||@
  Comment 1682 1754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1682 1756 NOP  <||@
  Comment 1683 1758 NOP  <||@
  Comment 1684 1760 NOP  <||@
  Comment 1685 1762 JUMP ~outgoingValues: [] destination: B81 -> B82  <||@
  Comment 1690 block B83 loop 4 depth 1 header:727|LoopBegin  <||@
  Comment 1690 1776 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1696 1778 NOP  <||@
  Comment 1697 1780 NOP  <||@
  Comment 1698 1782 NOP  <||@
  Comment 1699 1784 NOP  <||@
  Comment 1700 1786 NOP  <||@
  Comment 1701 1788 NOP  <||@
  Comment 1702 1790 rax|DWORD = MOV input: [r10|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1707 1792 MOV (x: [r11|QWORD[.] + rsi|DWORD * 4 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1712 1794 rsi|DWORD = INC value: rsi|DWORD size: DWORD  <||@
  Comment 1714 1796 JUMP ~outgoingValues: [] destination: B83 -> B82  <||@
  Comment 1714 block B82 loop 4 depth 1 header:727|LoopBegin  <||@
  Comment 1714 1764 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1714 1766 NOP  <||@
  Comment 1715 1768 NOP  <||@
  Comment 1716 1770 NOP  <||@
  Comment 1717 1772 NOP  <||@
  Comment 1718 1774 CMPBRANCH (x: r8|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 size: DWORD  <||@
  Comment 1723 block B84 null  <||@
  Comment 1723 1798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1723 1800 NOP  <||@
  Comment 1724 1802 NOP  <||@
  Comment 1725 1804 NOP  <||@
  Comment 1726 1806 JUMP ~outgoingValues: [] destination: B84 -> B85  <||@
  Comment 1726 block B85 null  <||@
  Comment 1726 1808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1726 1810 NOP  <||@
  Comment 1727 1812 NOP  <||@
  Comment 1728 1814 NOP  <||@
  Comment 1729 1816 NOP  <||@
  Comment 1730 1818 NOP  <||@
  Comment 1731 1820 NOP  <||@
  Comment 1732 1822 NOP  <||@
  Comment 1733 1824 NOP  <||@
  Comment 1734 1826 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1741 1828 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 1745 1830 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: QWORD  <||@
  Comment 1758 block B87 null  <||@
  Comment 1758 1860 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 1862 NOP  <||@
  Comment 1759 1864 NOP  <||@
  Comment 1760 1866 NOP  <||@
  Comment 1761 1868 NOP  <||@
  Comment 1762 1870 NOP  <||@
  Comment 1763 1872 NOP  <||@
  Comment 1764 1874 NOP  <||@
  Comment 1765 1876 NOP  <||@
  Comment 1766 1878 NOP  <||@
  Comment 1767 1880 NOP  <||@
  Comment 1768 1882 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 1775 1884 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 1782 1886 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1789 1888 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}  <||@
  Comment 1789 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>;compressed}}  <||@
  Comment 1796 1890 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1803 1892 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1811 1894 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1811 1896 JUMP ~outgoingValues: [] destination: B87 -> B88  <||@
  Comment 1811 block B88 null  <||@
  Comment 1811 1898 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1811 1900 NOP  <||@
  Comment 1812 1902 NOP  <||@
  Comment 1813 1904 NOP  <||@
  Comment 1814 1906 NOP  <||@
  Comment 1815 1908 NOP  <||@
  Comment 1816 1910 NOP  <||@
  Comment 1817 1912 NOP  <||@
  Comment 1818 1914 NOP  <||@
  Comment 1819 1916 NOP  <||@
  Comment 1820 1918 NOP  <||@
  Comment 1821 1920 NOP  <||@
  Comment 1822 1922 r11|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@1a9117f2 encoding: base: 0 shift: 3  <||@
  Comment 1826 1924 MOV (x: [rax|QWORD[.] + 16], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 1830 1926 MOV x: [rax|QWORD[.] + 12] y: -559030611 size: DWORD c: NarrowOop[Pattern.Node@116800333]  <||@
  Comment 1830 {NarrowOop[Pattern.Node@116800333]}  <||@
  Comment 1837 1928 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1846 POLL_RETURN_FAR  <||@
  Comment 1863 block B68 null  <||@
  Comment 1863 1502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1863 1504 NOP  <||@
  Comment 1864 1506 NOP  <||@
  Comment 1865 1508 NOP  <||@
  Comment 1866 1510 JUMP ~outgoingValues: [] destination: B68 -> B73  <||@
  Comment 1871 block B64 null  <||@
  Comment 1871 1454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 1456 NOP  <||@
  Comment 1872 1458 NOP  <||@
  Comment 1873 1460 NOP  <||@
  Comment 1874 1462 JUMP ~outgoingValues: [] destination: B64 -> B67  <||@
  Comment 1879 block B3 null  <||@
  Comment 1879 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1879 106 NOP  <||@
  Comment 1880 108 NOP  <||@
  Comment 1881 110 NOP  <||@
  Comment 1882 112 NOP  <||@
  Comment 1883 114 CMPBRANCH (x: r8|DWORD, y: [rsi|QWORD[.] + 36]) trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 1893 block B5 null  <||@
  Comment 1893 132 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1893 134 NOP  <||@
  Comment 1894 136 NOP  <||@
  Comment 1895 138 NOP  <||@
  Comment 1896 140 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1902 142 JUMP ~outgoingValues: [] destination: B5 -> B47  <||@
  Comment 1907 block B62 null  <||@
  Comment 1907 1428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1907 1430 NOP  <||@
  Comment 1908 1432 NOP  <||@
  Comment 1909 1434 NOP  <||@
  Comment 1910 1436 JUMP ~outgoingValues: [] destination: B62 -> B85  <||@
  Comment 1915 block B48 null  <||@
  Comment 1915 1092 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 1094 NOP  <||@
  Comment 1916 1096 NOP  <||@
  Comment 1917 1098 NOP  <||@
  Comment 1918 1100 NOP  <||@
  Comment 1919 1102 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 0 size: DWORD inlinedY: null state [bci:354]  <||@
  Comment 1919 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 1919 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1934 block B50 null  <||@
  Comment 1934 1118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1934 1120 NOP  <||@
  Comment 1935 1122 NOP  <||@
  Comment 1936 1124 NOP  <||@
  Comment 1937 1126 NOP  <||@
  Comment 1938 1128 NOP  <||@
  Comment 1939 1130 NOP  <||@
  Comment 1940 1132 NOP  <||@
  Comment 1941 1134 NOP  <||@
  Comment 1942 1136 NOP  <||@
  Comment 1943 1138 NOP  <||@
  Comment 1944 1140 NOP  <||@
  Comment 1945 1142 NOP  <||@
  Comment 1946 1144 NOP  <||@
  Comment 1947 1146 NOP  <||@
  Comment 1948 1148 NOP  <||@
  Comment 1949 1150 NOP  <||@
  Comment 1950 1152 NOP  <||@
  Comment 1951 1154 NOP  <||@
  Comment 1952 1156 NOP  <||@
  Comment 1953 1158 NOP  <||@
  Comment 1954 1160 NOP  <||@
  Comment 1955 1162 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1963 1164 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1966 1168 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.single(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:404]  <||@
  Comment 1967 {HotSpotMethod<Pattern.single(int)>}  <||@
  Comment 1967 INVOKESPECIAL  <||@
  Comment 1972 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 404, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6 
     locals:  |-                  |-  |-  |-  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |   |   |   |    <||@
  Comment 1980 1170 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 1172 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1987 1174 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:407]  <||@
  Comment 1987 {HotSpotMethod<Pattern.newCharProperty(Pattern$CharPredicate)>}  <||@
  Comment 1987 INVOKESPECIAL  <||@
  Comment 1992 []at java.util.regex.Pattern.atom(Pattern.java:2495) [bci: 407, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2000 1176 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2009 POLL_RETURN_FAR  <||@
  Comment 2026 block B6 null  <||@
  Comment 2026 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2026 146 NOP  <||@
  Comment 2027 148 NOP  <||@
  Comment 2028 150 NOP  <||@
  Comment 2029 152 NOP  <||@
  Comment 2030 154 NOP  <||@
  Comment 2031 156 NOP  <||@
  Comment 2032 158 NOP  <||@
  Comment 2033 160 NOP  <||@
  Comment 2034 162 NOP  <||@
  Comment 2035 164 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2039 166 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.nextEscaped()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:148]  <||@
  Comment 2039 {HotSpotMethod<Pattern.nextEscaped()>}  <||@
  Comment 2039 INVOKESPECIAL  <||@
  Comment 2044 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 148, duringCall: true, rethrow: false]
              |0                  |1           |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2052 168 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 y: 112 size: DWORD inlinedY: null  <||@
  Comment 2061 block B8 null  <||@
  Comment 2061 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2061 184 NOP  <||@
  Comment 2062 186 NOP  <||@
  Comment 2063 188 NOP  <||@
  Comment 2064 190 NOP  <||@
  Comment 2065 192 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B11 y: 80 size: DWORD inlinedY: null  <||@
  Comment 2074 block B11 null  <||@
  Comment 2074 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2074 230 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2078 232 NOP  <||@
  Comment 2079 234 NOP  <||@
  Comment 2080 236 NOP  <||@
  Comment 2081 238 NOP  <||@
  Comment 2082 240 NOP  <||@
  Comment 2083 242 NOP  <||@
  Comment 2084 244 NOP  <||@
  Comment 2085 246 NOP  <||@
  Comment 2086 248 NOP  <||@
  Comment 2087 250 NOP  <||@
  Comment 2088 252 NOP  <||@
  Comment 2089 254 NOP  <||@
  Comment 2090 256 NOP  <||@
  Comment 2091 258 NOP  <||@
  Comment 2092 260 NOP  <||@
  Comment 2093 262 rdx|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 2098 264 rdx|DWORD = ADD (x: rdx|DWORD, ~y: [rsi|QWORD[.] + 32]) size: DWORD  <||@
  Comment 2101 266 MOV (x: [rsi|QWORD[.] + 32], y: rdx|DWORD) size: DWORD  <||@
  Comment 2104 268 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2107 272 stack:28|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 2111 274 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2116 276 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2121 278 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2127 280 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.escape(boolean, boolean, boolean)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:287]  <||@
  Comment 2127 {HotSpotMethod<Pattern.escape(boolean, boolean, boolean)>}  <||@
  Comment 2127 INVOKESPECIAL  <||@
  Comment 2132 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 287, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2140 282 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 2148 block B13 null  <||@
  Comment 2148 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2148 308 NOP  <||@
  Comment 2149 310 NOP  <||@
  Comment 2150 312 NOP  <||@
  Comment 2151 314 NOP  <||@
  Comment 2152 316 NOP  <||@
  Comment 2153 318 NOP  <||@
  Comment 2154 320 NOP  <||@
  Comment 2155 322 NOP  <||@
  Comment 2156 324 NOP  <||@
  Comment 2157 326 NOP  <||@
  Comment 2158 328 NOP  <||@
  Comment 2159 330 NOP  <||@
  Comment 2160 332 NOP  <||@
  Comment 2161 334 NOP  <||@
  Comment 2162 336 NOP  <||@
  Comment 2163 338 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2167 340 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2169 342 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2174 344 stack:32|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2178 346 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.append(int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:301]  <||@
  Comment 2179 {HotSpotMethod<Pattern.append(int, int)>}  <||@
  Comment 2179 INVOKESPECIAL  <||@
  Comment 2184 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2464) [bci: 301, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4               |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |stack:32|DWORD  |-  |-   <||@
  Comment 2192 348 rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2196 350 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<Pattern.isSupplementary(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:309]  <||@
  Comment 2199 {HotSpotMethod<Pattern.isSupplementary(int)>}  <||@
  Comment 2199 INVOKESTATIC  <||@
  Comment 2204 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 309, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2212 352 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 2220 block B14 null  <||@
  Comment 2220 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2220 356 NOP  <||@
  Comment 2221 358 NOP  <||@
  Comment 2222 360 NOP  <||@
  Comment 2223 362 NOP  <||@
  Comment 2224 364 NOP  <||@
  Comment 2225 366 NOP  <||@
  Comment 2226 368 NOP  <||@
  Comment 2227 370 NOP  <||@
  Comment 2228 372 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2232 374 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<Pattern.peek()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:318]  <||@
  Comment 2235 {HotSpotMethod<Pattern.peek()>}  <||@
  Comment 2235 INVOKESPECIAL  <||@
  Comment 2240 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2469) [bci: 318, duringCall: true, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2248 376 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2253 378 r10|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 2256 380 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2260 382 JUMP ~outgoingValues: [] destination: B14 -> B23  <||@
  Comment 2265 block B86 null  <||@
  Comment 2265 1832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2265 1834 NOP  <||@
  Comment 2266 1836 NOP  <||@
  Comment 2267 1838 NOP  <||@
  Comment 2268 1840 NOP  <||@
  Comment 2269 1842 NOP  <||@
  Comment 2270 1844 NOP  <||@
  Comment 2271 1846 NOP  <||@
  Comment 2272 1848 NOP  <||@
  Comment 2273 1850 NOP  <||@
  Comment 2274 1852 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}  <||@
  Comment 2274 {meta{HotSpotType<Ljava/util/regex/Pattern$Slice;, resolved>}}  <||@
  Comment 2284 1854 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:155, 418]  <||@
  Comment 2284 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2289 [r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2297 1856 NULLCHECK address: [rax|QWORD[.]] state [bci:155, 418]  <||@
  Comment 2297 [rax:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 2297 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2299 1858 JUMP ~outgoingValues: [] destination: B86 -> B88  <||@
  Comment 2304 block B52 null  <||@
  Comment 2304 1218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2304 1220 NOP  <||@
  Comment 2305 1222 NOP  <||@
  Comment 2306 1224 NOP  <||@
  Comment 2307 1226 NOP  <||@
  Comment 2308 1228 NOP  <||@
  Comment 2309 1230 NOP  <||@
  Comment 2310 1232 NOP  <||@
  Comment 2311 1234 NOP  <||@
  Comment 2312 1236 NOP  <||@
  Comment 2313 1238 NOP  <||@
  Comment 2314 1240 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2314 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2324 1242 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 2327 1244 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:354]  <||@
  Comment 2327 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2332 [r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2340 1246 NULLCHECK address: [rax|QWORD[.]] state [bci:354]  <||@
  Comment 2340 [rax:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2340 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2342 1248 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2345 1250 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2349 1252 JUMP ~outgoingValues: [] destination: B52 -> B60  <||@
  Comment 2354 block B58 null  <||@
  Comment 2354 1358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1360 NOP  <||@
  Comment 2355 1362 NOP  <||@
  Comment 2356 1364 NOP  <||@
  Comment 2357 1366 NOP  <||@
  Comment 2358 1368 NOP  <||@
  Comment 2359 1370 NOP  <||@
  Comment 2360 1372 NOP  <||@
  Comment 2361 1374 NOP  <||@
  Comment 2362 1376 NOP  <||@
  Comment 2363 1378 rcx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 2366 1380 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2376 1382 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 1384 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 2385 block B93 null  <||@
  Comment 2385 1994 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2385 1996 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2389 1998 NOP  <||@
  Comment 2390 2000 NOP  <||@
  Comment 2391 2002 NOP  <||@
  Comment 2392 2004 NOP  <||@
  Comment 2393 2006 NOP  <||@
  Comment 2394 2008 NOP  <||@
  Comment 2395 2010 NOP  <||@
  Comment 2396 2012 MOV x: [r15|QWORD + 1156] y: -171027 size: DWORD  <||@
  Comment 2407 2014 MOV x: [r15|QWORD + 1168] y: 7700 size: QWORD  <||@
  Comment 2418 2016 DEOPT info [bci:15, 383]  <||@
  Comment 2418 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2423 [rdx:0, stack:0]at java.util.regex.Pattern.next(Pattern.java:2098) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:48|QWORD[.]  |-         
     stack:   |rdx|QWORD[.]       |rax|DWORD 
  at java.util.regex.Pattern.atom(Pattern.java:2489) [bci: 383, duringCall: true, rethrow: false]
              |0                  |1               |2         |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |stack:28|DWORD  |r9|DWORD  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2431 block B95 null  <||@
  Comment 2431 2032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2431 2034 NOP  <||@
  Comment 2432 2036 NOP  <||@
  Comment 2433 2038 NOP  <||@
  Comment 2434 2040 rcx|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 2441 2042 r11|DWORD = MOVE input: int[-168979|0xfffffffffffd6bed]  <||@
  Comment 2447 2044 JUMP ~outgoingValues: [] destination: B95 -> B96  <||@
  Comment 2447 block B96 null  <||@
  Comment 2447 2046 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2447 2048 NOP  <||@
  Comment 2448 2050 NOP  <||@
  Comment 2449 2052 NOP  <||@
  Comment 2450 2054 NOP  <||@
  Comment 2451 2056 NOP  <||@
  Comment 2452 2058 NOP  <||@
  Comment 2453 2060 NOP  <||@
  Comment 2454 2062 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2461 2064 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2468 2066 DEOPT info [bci:42, 366]  <||@
  Comment 2468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2473 [stack:0]at java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1          |2         |3 
     locals:  |stack:48|QWORD[.]  |r10|DWORD  |r8|DWORD  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366, duringCall: true, rethrow: false]
              |0                  |1         |2         |3           |4          |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |r9|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 2481 block B71 null  <||@
  Comment 2481 1536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2481 1538 NOP  <||@
  Comment 2482 1540 NOP  <||@
  Comment 2483 1542 NOP  <||@
  Comment 2484 1544 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 2491 1546 r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 2497 1548 JUMP ~outgoingValues: [] destination: B71 -> B92  <||@
  Comment 2497 block B92 null  <||@
  Comment 2497 1972 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2497 1974 NOP  <||@
  Comment 2498 1976 NOP  <||@
  Comment 2499 1978 NOP  <||@
  Comment 2500 1980 NOP  <||@
  Comment 2501 1982 NOP  <||@
  Comment 2502 1984 NOP  <||@
  Comment 2503 1986 NOP  <||@
  Comment 2504 1988 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2511 1990 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2518 1992 DEOPT info [bci:354]  <||@
  Comment 2518 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2523 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2531 block B12 null  <||@
  Comment 2531 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2531 286 NOP  <||@
  Comment 2532 288 NOP  <||@
  Comment 2533 290 NOP  <||@
  Comment 2534 292 NOP  <||@
  Comment 2535 294 NOP  <||@
  Comment 2536 296 NOP  <||@
  Comment 2537 298 NOP  <||@
  Comment 2538 300 MOV x: [r15|QWORD + 1156] y: -156691 size: DWORD  <||@
  Comment 2549 302 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 2560 304 DEOPT info [bci:290]  <||@
  Comment 2560 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2565 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290, duringCall: false, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:28|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |                |            |   |   |    <||@
  Comment 2573 block B9 null  <||@
  Comment 2573 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2573 196 NOP  <||@
  Comment 2574 198 NOP  <||@
  Comment 2575 200 NOP  <||@
  Comment 2576 202 r10|DWORD = MOVE input: int[-155667|0xfffffffffffd9fed]  <||@
  Comment 2582 204 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 2582 block B10 null  <||@
  Comment 2582 206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2582 208 NOP  <||@
  Comment 2583 210 NOP  <||@
  Comment 2584 212 NOP  <||@
  Comment 2585 214 NOP  <||@
  Comment 2586 216 NOP  <||@
  Comment 2587 218 NOP  <||@
  Comment 2588 220 NOP  <||@
  Comment 2589 222 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2596 224 MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD  <||@
  Comment 2607 226 DEOPT info [bci:151]  <||@
  Comment 2607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2612 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151, duringCall: false, rethrow: false]
              |0                  |1           |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |-  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |   |            |   |   |    <||@
  Comment 2620 block B90 null  <||@
  Comment 2620 1944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2620 1946 NOP  <||@
  Comment 2621 1948 NOP  <||@
  Comment 2622 1950 NOP  <||@
  Comment 2623 1952 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 2630 1954 r10|DWORD = MOVE input: int[-114971|0xfffffffffffe3ee5]  <||@
  Comment 2636 1956 JUMP ~outgoingValues: [] destination: B90 -> B92  <||@
  Comment 2641 block B7 null  <||@
  Comment 2641 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2641 172 NOP  <||@
  Comment 2642 174 NOP  <||@
  Comment 2643 176 NOP  <||@
  Comment 2644 178 r10|DWORD = MOVE input: int[-154643|0xfffffffffffda3ed]  <||@
  Comment 2650 180 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 2652 block B105 null  <||@
  Comment 2652 2196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2652 2198 NOP  <||@
  Comment 2653 2200 NOP  <||@
  Comment 2654 2202 NOP  <||@
  Comment 2655 2204 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2662 2206 r10|DWORD = MOVE input: int[-158739|0xfffffffffffd93ed]  <||@
  Comment 2668 2210 JUMP ~outgoingValues: [] destination: B105 -> B110  <||@
  Comment 2668 block B110 null  <||@
  Comment 2668 2276 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2668 128 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2672 2278 NOP  <||@
  Comment 2673 2280 NOP  <||@
  Comment 2674 2282 NOP  <||@
  Comment 2675 2284 NOP  <||@
  Comment 2676 2286 NOP  <||@
  Comment 2677 2288 NOP  <||@
  Comment 2678 2290 NOP  <||@
  Comment 2679 2292 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2686 2294 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2693 2296 DEOPT info [bci:0]  <||@
  Comment 2693 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2698 [rsi:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 2706 block B99 null  <||@
  Comment 2706 2096 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2706 2098 NOP  <||@
  Comment 2707 2100 NOP  <||@
  Comment 2708 2102 NOP  <||@
  Comment 2709 2104 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2716 2106 r9|DWORD = MOVE input: int[-98843|0xfffffffffffe7de5]  <||@
  Comment 2722 2108 JUMP ~outgoingValues: [] destination: B99 -> B101  <||@
  Comment 2722 block B101 null  <||@
  Comment 2722 2124 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2722 2126 NOP  <||@
  Comment 2723 2128 NOP  <||@
  Comment 2724 2130 NOP  <||@
  Comment 2725 2132 NOP  <||@
  Comment 2726 2134 NOP  <||@
  Comment 2727 2136 NOP  <||@
  Comment 2728 2138 NOP  <||@
  Comment 2729 2140 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 2736 2142 MOV (x: [r15|QWORD + 1168], y: rcx|QWORD) size: QWORD  <||@
  Comment 2743 2144 DEOPT info [bci:12]  <||@
  Comment 2743 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2748 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0                  |1         |2          |3           |4          |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 2756 block B15 null  <||@
  Comment 2756 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2756 386 rdx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2760 388 NOP  <||@
  Comment 2761 390 NOP  <||@
  Comment 2762 392 NOP  <||@
  Comment 2763 394 NOP  <||@
  Comment 2764 396 NOP  <||@
  Comment 2765 398 NOP  <||@
  Comment 2766 400 NOP  <||@
  Comment 2767 402 MOV x: [r15|QWORD + 1156] y: -157715 size: DWORD  <||@
  Comment 2778 404 MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD  <||@
  Comment 2789 406 DEOPT info [bci:312]  <||@
  Comment 2789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2794 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312, duringCall: false, rethrow: false]
              |0                  |1           |2          |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[1|0x1]  |rdx|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |           |            |   |   |    <||@
  Comment 2802 block B100 null  <||@
  Comment 2802 2110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2802 2112 NOP  <||@
  Comment 2803 2114 NOP  <||@
  Comment 2804 2116 NOP  <||@
  Comment 2805 2118 rcx|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2812 2120 r9|DWORD = MOVE input: int[-5139|0xffffffffffffebed]  <||@
  Comment 2818 2122 JUMP ~outgoingValues: [] destination: B100 -> B101  <||@
  Comment 2820 block B109 null  <||@
  Comment 2820 2260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2820 2262 NOP  <||@
  Comment 2821 2264 NOP  <||@
  Comment 2822 2266 NOP  <||@
  Comment 2823 2268 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2830 2270 r10|DWORD = MOVE input: int[-81691|0xfffffffffffec0e5]  <||@
  Comment 2836 2274 JUMP ~outgoingValues: [] destination: B109 -> B110  <||@
  Comment 2841 block B106 null  <||@
  Comment 2841 2212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2841 2214 NOP  <||@
  Comment 2842 2216 NOP  <||@
  Comment 2843 2218 NOP  <||@
  Comment 2844 2220 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2851 2222 r10|DWORD = MOVE input: int[-92187|0xfffffffffffe97e5]  <||@
  Comment 2857 2226 JUMP ~outgoingValues: [] destination: B106 -> B110  <||@
  Comment 2862 block B49 null  <||@
  Comment 2862 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2862 1106 NOP  <||@
  Comment 2863 1108 NOP  <||@
  Comment 2864 1110 NOP  <||@
  Comment 2865 1112 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2872 1114 r10|DWORD = MOVE input: int[-118555|0xfffffffffffe30e5]  <||@
  Comment 2878 1116 JUMP ~outgoingValues: [] destination: B49 -> B92  <||@
  Comment 2883 block B37 null  <||@
  Comment 2883 878 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2883 880 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2887 882 rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 2891 884 NOP  <||@
  Comment 2892 886 NOP  <||@
  Comment 2893 888 NOP  <||@
  Comment 2894 890 NOP  <||@
  Comment 2895 892 NOP  <||@
  Comment 2896 894 NOP  <||@
  Comment 2897 896 NOP  <||@
  Comment 2898 898 MOV x: [r15|QWORD + 1156] y: -166931 size: DWORD  <||@
  Comment 2909 900 MOV x: [r15|QWORD + 1168] y: 4500 size: QWORD  <||@
  Comment 2920 902 DEOPT info [bci:312]  <||@
  Comment 2920 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2925 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2466) [bci: 312, duringCall: false, rethrow: false]
              |0                  |1          |2          |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |rcx|DWORD  |rdx|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |           |           |            |   |   |    <||@
  Comment 2933 block B38 null  <||@
  Comment 2933 904 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2933 906 NOP  <||@
  Comment 2934 908 NOP  <||@
  Comment 2935 910 NOP  <||@
  Comment 2936 912 NOP  <||@
  Comment 2937 914 NOP  <||@
  Comment 2938 916 NOP  <||@
  Comment 2939 918 NOP  <||@
  Comment 2940 920 MOV x: [r15|QWORD + 1156] y: -164883 size: DWORD  <||@
  Comment 2951 922 MOV x: [r15|QWORD + 1168] y: 3220 size: QWORD  <||@
  Comment 2962 924 DEOPT info [bci:10, 267]  <||@
  Comment 2962 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2967 [stack:0]at java.util.regex.Pattern.unread(Pattern.java:2197) [bci: 10, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:48|QWORD[.] 
  at java.util.regex.Pattern.atom(Pattern.java:2460) [bci: 267, duringCall: true, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 2975 block B30 null  <||@
  Comment 2975 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2975 672 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 2980 674 NOP  <||@
  Comment 2981 676 NOP  <||@
  Comment 2982 678 NOP  <||@
  Comment 2983 680 r10|DWORD = MOVE input: int[-163859|0xfffffffffffd7fed]  <||@
  Comment 2989 682 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 2989 block B31 null  <||@
  Comment 2989 684 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2989 686 NOP  <||@
  Comment 2990 688 NOP  <||@
  Comment 2991 690 NOP  <||@
  Comment 2992 692 NOP  <||@
  Comment 2993 694 NOP  <||@
  Comment 2994 696 NOP  <||@
  Comment 2995 698 NOP  <||@
  Comment 2996 700 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3003 702 MOV x: [r15|QWORD + 1168] y: 2580 size: QWORD  <||@
  Comment 3014 704 DEOPT info [bci:151]  <||@
  Comment 3014 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3019 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2441) [bci: 151, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |          |   |            |   |   |    <||@
  Comment 3027 block B89 null  <||@
  Comment 3027 1930 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3027 1932 NOP  <||@
  Comment 3028 1934 NOP  <||@
  Comment 3029 1936 NOP  <||@
  Comment 3030 1938 r11|QWORD = MOVE input: long[40344|0x9d98]  <||@
  Comment 3037 1940 r10|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 3043 1942 JUMP ~outgoingValues: [] destination: B89 -> B92  <||@
  Comment 3048 block B94 null  <||@
  Comment 3048 2018 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3048 2020 NOP  <||@
  Comment 3049 2022 NOP  <||@
  Comment 3050 2024 NOP  <||@
  Comment 3051 2026 rcx|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 3058 2028 r11|DWORD = MOVE input: int[-170003|0xfffffffffffd67ed]  <||@
  Comment 3064 2030 JUMP ~outgoingValues: [] destination: B94 -> B96  <||@
  Comment 3069 block B74 null  <||@
  Comment 3069 1572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3069 1574 NOP  <||@
  Comment 3070 1576 NOP  <||@
  Comment 3071 1578 NOP  <||@
  Comment 3072 1580 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3079 1582 r10|DWORD = MOVE input: int[-118811|0xfffffffffffe2fe5]  <||@
  Comment 3085 1584 JUMP ~outgoingValues: [] destination: B74 -> B92  <||@
  Comment 3090 block B98 null  <||@
  Comment 3090 2082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3090 2084 NOP  <||@
  Comment 3091 2086 NOP  <||@
  Comment 3092 2088 NOP  <||@
  Comment 3093 2090 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3100 2092 r9|DWORD = MOVE input: int[-102939|0xfffffffffffe6de5]  <||@
  Comment 3106 2094 JUMP ~outgoingValues: [] destination: B98 -> B101  <||@
  Comment 3111 block B97 null  <||@
  Comment 3111 2068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3111 2070 NOP  <||@
  Comment 3112 2072 NOP  <||@
  Comment 3113 2074 NOP  <||@
  Comment 3114 2076 rcx|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 3121 2078 r9|DWORD = MOVE input: int[-167955|0xfffffffffffd6fed]  <||@
  Comment 3127 2080 JUMP ~outgoingValues: [] destination: B97 -> B101  <||@
  Comment 3132 block B4 null  <||@
  Comment 3132 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3132 118 NOP  <||@
  Comment 3133 120 NOP  <||@
  Comment 3134 122 NOP  <||@
  Comment 3135 124 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 3142 126 r10|DWORD = MOVE input: int[-153619|0xfffffffffffda7ed]  <||@
  Comment 3148 130 JUMP ~outgoingValues: [] destination: B4 -> B110  <||@
  Comment 3153 block B18 null  <||@
  Comment 3153 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3153 446 NOP  <||@
  Comment 3154 448 NOP  <||@
  Comment 3155 450 NOP  <||@
  Comment 3156 452 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3163 454 r10|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5]  <||@
  Comment 3169 458 JUMP ~outgoingValues: [] destination: B18 -> B110  <||@
  Comment 3174 block B26 null  <||@
  Comment 3174 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3174 600 NOP  <||@
  Comment 3175 602 NOP  <||@
  Comment 3176 604 NOP  <||@
  Comment 3177 606 rcx|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 3184 608 r9|DWORD = MOVE input: int[-162067|0xfffffffffffd86ed]  <||@
  Comment 3190 610 JUMP ~outgoingValues: [] destination: B26 -> B101  <||@
  Comment 3195 block B102 null  <||@
  Comment 3195 2146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3195 2148 NOP  <||@
  Comment 3196 2150 NOP  <||@
  Comment 3197 2152 NOP  <||@
  Comment 3198 2154 r11|QWORD = MOVE input: long[7060|0x1b94]  <||@
  Comment 3205 2156 r10|DWORD = MOVE input: int[-160787|0xfffffffffffd8bed]  <||@
  Comment 3211 2158 JUMP ~outgoingValues: [] destination: B102 -> B104  <||@
  Comment 3211 block B104 null  <||@
  Comment 3211 2174 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3211 2176 NOP  <||@
  Comment 3212 2178 NOP  <||@
  Comment 3213 2180 NOP  <||@
  Comment 3214 2182 NOP  <||@
  Comment 3215 2184 NOP  <||@
  Comment 3216 2186 NOP  <||@
  Comment 3217 2188 NOP  <||@
  Comment 3218 2190 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3225 2192 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3232 2194 DEOPT info [bci:42, 366]  <||@
  Comment 3232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3237 [stack:0]at java.util.regex.Pattern.append(Pattern.java:2510) [bci: 42, duringCall: false, rethrow: false]
              |0                  |1         |2           |3 
     locals:  |stack:48|QWORD[.]  |r9|DWORD  |int[0|0x0]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2484) [bci: 366, duringCall: true, rethrow: false]
              |0                  |1           |2         |3           |4         |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |r8|DWORD  |int[0|0x0]  |r9|DWORD  |-  |-   <||@
  Comment 3245 block B28 null  <||@
  Comment 3245 644 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3245 646 r8|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 3250 648 NOP  <||@
  Comment 3251 650 NOP  <||@
  Comment 3252 652 NOP  <||@
  Comment 3253 654 r10|DWORD = MOVE input: int[-162835|0xfffffffffffd83ed]  <||@
  Comment 3259 656 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 3264 block B91 null  <||@
  Comment 3264 1958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3264 1960 NOP  <||@
  Comment 3265 1962 NOP  <||@
  Comment 3266 1964 NOP  <||@
  Comment 3267 1966 r11|QWORD = MOVE input: long[35220|0x8994]  <||@
  Comment 3274 1968 r10|DWORD = MOVE input: int[-172051|0xfffffffffffd5fed]  <||@
  Comment 3280 1970 JUMP ~outgoingValues: [] destination: B91 -> B92  <||@
  Comment 3285 block B108 null  <||@
  Comment 3285 2244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3285 2246 NOP  <||@
  Comment 3286 2248 NOP  <||@
  Comment 3287 2250 NOP  <||@
  Comment 3288 2252 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 3295 2254 r10|DWORD = MOVE input: int[-152595|0xfffffffffffdabed]  <||@
  Comment 3301 2258 JUMP ~outgoingValues: [] destination: B108 -> B110  <||@
  Comment 3306 block B34 null  <||@
  Comment 3306 776 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3306 778 NOP  <||@
  Comment 3307 780 NOP  <||@
  Comment 3308 782 NOP  <||@
  Comment 3309 784 NOP  <||@
  Comment 3310 786 NOP  <||@
  Comment 3311 788 NOP  <||@
  Comment 3312 790 NOP  <||@
  Comment 3313 792 MOV x: [r15|QWORD + 1156] y: -165907 size: DWORD  <||@
  Comment 3324 794 MOV x: [r15|QWORD + 1168] y: 3860 size: QWORD  <||@
  Comment 3335 796 DEOPT info [bci:290]  <||@
  Comment 3335 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3340 [stack:0]at java.util.regex.Pattern.atom(Pattern.java:2462) [bci: 290, duringCall: false, rethrow: false]
              |0                  |1           |2               |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |int[0|0x0]  |stack:32|DWORD  |int[0|0x0]  |-  |-  |- 
     stack:   |rax|DWORD          |            |                |            |   |   |    <||@
  Comment 3348 block B107 null  <||@
  Comment 3348 2228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3348 2230 NOP  <||@
  Comment 3349 2232 NOP  <||@
  Comment 3350 2234 NOP  <||@
  Comment 3351 2236 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3358 2238 r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 3364 2242 JUMP ~outgoingValues: [] destination: B107 -> B110  <||@
  Comment 3369 block B103 null  <||@
  Comment 3369 2160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3369 2162 NOP  <||@
  Comment 3370 2164 NOP  <||@
  Comment 3371 2166 NOP  <||@
  Comment 3372 2168 r11|QWORD = MOVE input: long[6420|0x1914]  <||@
  Comment 3379 2170 r10|DWORD = MOVE input: int[-159763|0xfffffffffffd8fed]  <||@
  Comment 3385 2172 JUMP ~outgoingValues: [] destination: B103 -> B104  <||@
  Comment 3395 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3420 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3440 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3468 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3473 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 3503 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3508 [rcx:0, rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2417) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-   <||@
  Comment 3538 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3543 [rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 3573 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3578 [rdx:0, rbx:0, rsi:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2422) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         |2          |3           |4          |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |r11|DWORD  |int[0|0x0]  |r10|DWORD  |-  |-   <||@
  Comment 3608 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3613 [rsi:0, r10:0, r11:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3643 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3648 [rsi:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0             |1         |2  |3           |4  |5  |6 
     locals:  |rsi|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3678 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3683 [rax:0, r11:0]at java.util.regex.Pattern.newSlice(Pattern.java:3708) [bci: 155, duringCall: false, rethrow: false]
              |0  |1  |2  |3           |4             |5 
     locals:  |-  |-  |-  |int[0|0x0]  |r11|QWORD[.]  |- 
  at java.util.regex.Pattern.atom(Pattern.java:2497) [bci: 418, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 3713 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3718 [rax:0, r10:0, stack:0]at java.util.regex.Pattern.atom(Pattern.java:2479) [bci: 354, duringCall: false, rethrow: false]
              |0                  |1         |2  |3           |4  |5  |6 
     locals:  |stack:48|QWORD[.]  |r8|DWORD  |-  |int[0|0x0]  |-  |-  |-   <||@
  Comment 3726 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3726 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3732 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3732 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
