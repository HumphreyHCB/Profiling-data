begin_compilation
  name " HotSpotCompilation-3469[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-3469[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1724269668827
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v139 i243 i127 v55 i404 v210 v242 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i38 i39 i54 v55 i214 i215 i183 i184 i216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.02955415768785563
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i473 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i473  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v509 v507 v487 v488 v491 v493 v495 v497 v499 v501 v503 v505 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j108 i39 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v510 v508 v489 v490 v492 v494 v496 v498 v500 v502 v504 v506 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j110 i38 v78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v423 i473 i474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v487 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
v63 v135 j125 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v487 lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j422 j422 j422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v135 i52 j129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
j486 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j486 
y: j131 
=== Succesors ===
=== Usages ===
j133 j144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j486 y: j131  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 i243 i275 i274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i138 
=== Succesors ===
=== Usages ===
v445 v461 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v441 #falseSuccessor: v444  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j129 
y: j132 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j129 y: j132  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i473 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i473  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j125 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -22811
stableDimension: 0
stamp: i32 [-22811]
stampKind: i32
value: int[-22811|0xffffffffffffa6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v452 #falseSuccessor: v449  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i473 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i39 y: i473  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v442 #falseSuccessor: v450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v439 v440 
=== Succesors ===
next: i474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v439 v440 #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v489 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
v78 v146 j142 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v489 lastLocationAccess: - #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v146 i53 j143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
i474 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v457 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j132 
y: j143 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i474 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j142 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -25371
stableDimension: 0
stamp: i32 [-25371]
stampKind: i32
value: int[-25371|0xffffffffffff9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v468 #falseSuccessor: v465  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i474 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i474  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v458 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v456 
=== Succesors ===
next: v170 
=== Usages ===
v150 v235 v381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v456 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i473 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v167 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i474 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i474  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
v86 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j108 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
i111 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 lastLocationAccess: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j110 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j110  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i475 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v171 
address: v490 
lastLocationAccess: - 
value: i111 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v171 address: v490 lastLocationAccess: - value: i111 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 i316 i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i241 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v242 
trueValue: i5 
falseValue: i138 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i5 falseValue: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i38 i22 
=== Succesors ===
=== Usages ===
j114 i22 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i38 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i39 i23 
=== Succesors ===
=== Usages ===
j112 i23 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i39 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i54 i53 i52 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i243 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i476 
=== Usages ===
v150 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i476  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j112 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
lastLocationAccess: - 
=== Succesors ===
next: v106 
=== Usages ===
i115 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 lastLocationAccess: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v19 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v19  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j114 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i476 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v492 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i476 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v492 lastLocationAccess: - value: i115 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i52 
y: i21 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i52 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i53 
y: i21 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i54 
y: i21 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i54 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i397 i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i395 i396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i392 i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i389 i390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i403 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i52 i398 
=== Succesors ===
=== Usages ===
i184 j198 i218 i275 i317 i319 i390 i393 i396 i398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i52 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i53 i397 
=== Succesors ===
=== Usages ===
i183 j199 i219 i274 i316 i318 i389 i392 i395 i397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i53 i397  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i54 i399 
=== Succesors ===
=== Usages ===
v179 i399 i220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i54 i399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: v182 
=== Usages ===
v180 v186 i187 i188 i189 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i404 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i189 y: i404  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7563663512231358
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i477 
=== Usages ===
v381 
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i477  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j198 
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
i200 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v493 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v181 
=== Succesors ===
=== Usages ===
v306 v337 v197 v350 v293 v364 v261 v376 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v181  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i188  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j199 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v494 
lastLocationAccess: - 
value: i200 
stateAfter: - 
=== Succesors ===
next: i478 
=== Usages ===
=== Predecessor ===
i477 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v494 lastLocationAccess: - value: i200 stateAfter: - #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i21 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i184 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i184  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j262 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
lastLocationAccess: - 
=== Succesors ===
next: v261 
=== Usages ===
i264 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 lastLocationAccess: - #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i21 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i183 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i183  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j263 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i478 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v498 
lastLocationAccess: - 
value: i264 
stateAfter: - 
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v498 lastLocationAccess: - value: i264 stateAfter: - #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i138 
=== Succesors ===
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i275 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i275  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j294 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
i296 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i138 
=== Succesors ===
=== Usages ===
j295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i274 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j295 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j295  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v500 
lastLocationAccess: - 
value: i296 
stateAfter: - 
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v500 lastLocationAccess: - value: i296 stateAfter: - #next: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i241 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i317 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j307 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
i309 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i241 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j308 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j308  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i480 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v502 
lastLocationAccess: - 
value: i309 
stateAfter: - 
=== Succesors ===
next: i481 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v502 lastLocationAccess: - value: i309 stateAfter: - #next: i481  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i315 
=== Succesors ===
=== Usages ===
j338 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i319 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i319  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j338 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
i340 
=== Predecessor ===
v306 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v503 lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i315 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i318 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j339 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v504 
lastLocationAccess: - 
value: i340 
stateAfter: - 
=== Succesors ===
next: i482 
=== Usages ===
=== Predecessor ===
i481 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v504 lastLocationAccess: - value: i340 stateAfter: - #next: i482  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i388 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i390 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j351 
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v350 
=== Usages ===
i353 
=== Predecessor ===
v337 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i388 
=== Succesors ===
=== Usages ===
j352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i389 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j352 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j352  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i482 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v506 
lastLocationAccess: - 
value: i353 
stateAfter: - 
=== Succesors ===
next: i483 
=== Usages ===
=== Predecessor ===
i482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v506 lastLocationAccess: - value: i353 stateAfter: - #next: i483  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i391 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i393 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j365 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
i367 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i391 
=== Succesors ===
=== Usages ===
j366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i392 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i392  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j366 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j366  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i483 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v508 
lastLocationAccess: - 
value: i367 
stateAfter: - 
=== Succesors ===
next: i484 
=== Usages ===
=== Predecessor ===
i483 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v508 lastLocationAccess: - value: i367 stateAfter: - #next: i484  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i394 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j377 
=== Succesors ===
=== Usages ===
i484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
i379 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i394 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i395 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i395  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j378 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i484 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v510 
lastLocationAccess: - 
value: i379 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
i484 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v510 lastLocationAccess: - value: i379 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i189 
y: i387 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i189 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i387 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i387 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i387  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v178 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v178 #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i187 i215 
=== Succesors ===
=== Usages ===
i215 j229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i187 i215  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i188 i214 
=== Succesors ===
=== Usages ===
i214 j230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i188 i214  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i189 i216 
=== Succesors ===
=== Usages ===
v210 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i189 i216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v236 
=== Succesors ===
next: v213 
=== Usages ===
v211 v217 i218 i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v236 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i5 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i220 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v212 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i485 
=== Usages ===
v235 
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i218 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i218  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j229 
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
i231 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v212 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v212  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j230 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j230  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v496 
lastLocationAccess: - 
value: i231 
stateAfter: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
i485 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v496 lastLocationAccess: - value: i231 stateAfter: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i220 
y: i21 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i219 
y: i21 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i219 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i218 
y: i21 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i218 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v209 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v209 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v209 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v48 v49 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v48 v49 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251]
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411]
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-25371 - -16411] bits:1...10xxxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v417 
values: i427 i430 i432 i434 i427 i430 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v417 values: i427 i430 i432 i434 i427 i430  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v417 
values: j428 j428 j420 j420 j428 j428 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v417 values: j428 j428 j420 j420 j428 j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v429 v431 v433 v470 v471 
=== Succesors ===
next: v423 
=== Usages ===
i421 j422 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v429 v431 v433 v470 v471 #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i421 
speculation: j422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i421 speculation: j422  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v139 i243 i127 v55 i404 v210 v242 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i23 i30 i38 i39 i54 v55 i214 i215 i183 i184 i216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i21 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: PROFILED designatedSuccessorProbability: 0.02955415768785563
stamp: void
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i473 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i473  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v509 v507 v487 v488 v491 v493 v495 v497 v499 v501 v503 v505 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j108 i39 v63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v510 v508 v489 v490 v492 v494 v496 v498 v500 v502 v504 v506 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 j110 i38 v78 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<StringLatin1.inflate(byte[], int, char[], int, int)>
localsSize: 6
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 763
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 i4 i5 
=== Succesors ===
=== Usages ===
v423 i473 i474 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 i4 i5  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-14859|0xffffffffffffc5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v487 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
v63 v135 j125 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v487 lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j422 j422 j422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i2 
y: i21 
=== Succesors ===
=== Usages ===
v135 i52 j129 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i126 
=== Succesors ===
=== Usages ===
j486 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-1 - 4294967294]
=== Inputs ===
x: j486 
y: j131 
=== Succesors ===
=== Usages ===
j133 j144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j486 y: j131  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 i243 i275 i274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i138 
=== Succesors ===
=== Usages ===
v445 v461 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v444 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v441 #falseSuccessor: v444  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j129 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j133 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j129 
y: j132 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j129 y: j132  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i473 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i473  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j133 
y: j125 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j133 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result int[-22811|0xffffffffffffa6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -22811
stableDimension: 0
stamp: i32 [-22811]
stampKind: i32
value: int[-22811|0xffffffffffffa6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v134 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v134 #trueSuccessor: v452 #falseSuccessor: v449  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i473 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i39 y: i473  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v450 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v442 #falseSuccessor: v450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v439 v440 
=== Succesors ===
next: i474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v439 v440 #next: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i474 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v489 
lastLocationAccess: - 
=== Succesors ===
next: v461 
=== Usages ===
v78 v146 j142 
=== Predecessor ===
v438 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v489 lastLocationAccess: - #next: v461  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i4 
y: i21 
=== Succesors ===
=== Usages ===
v146 i53 j143 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
i474 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v457 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j144 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j132 
y: j143 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j132 y: j143  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i474 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i474  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j144 
y: j142 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j144 y: j142  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
result int[-25371|0xffffffffffff9ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -25371
stableDimension: 0
stamp: i32 [-25371]
stampKind: i32
value: int[-25371|0xffffffffffff9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v468 
falseSuccessor: v465 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v468 #falseSuccessor: v465  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i474 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i474  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v458 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v456  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v455 v456 
=== Succesors ===
next: v170 
=== Usages ===
v150 v235 v381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v455 v456 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i473 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i473  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j422 j422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v167 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v167 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i474 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i4 y: i474  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v171 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
v86 
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v0|QWORD[.] + v18|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j108 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v488 
lastLocationAccess: - 
=== Succesors ===
next: v86 
=== Usages ===
i111 
=== Predecessor ===
v171 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v488 lastLocationAccess: - #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v2|QWORD[.] + v19|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j110 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j110  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i475 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i475  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v171 
address: v490 
lastLocationAccess: - 
value: i111 
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v171 address: v490 lastLocationAccess: - value: i111 stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v242 i316 i317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i241 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2]
=== Inputs ===
condition: v242 
trueValue: i5 
falseValue: i138 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v242 trueValue: i5 falseValue: i138  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i54 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i21 i30 
=== Succesors ===
=== Usages ===
i30 v15 i189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i21 i30  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i38 i22 
=== Succesors ===
=== Usages ===
j114 i22 i188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i38 i22  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v10 
values: i39 i23 
=== Succesors ===
=== Usages ===
j112 i23 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v10 values: i39 i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v9 
=== Succesors ===
next: v20 
=== Usages ===
i54 i53 i52 v17 v31 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v9 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i243 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i54 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v19 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i476 
=== Usages ===
v150 
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i476  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [v0|QWORD[.] + v24|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j112 
=== Succesors ===
=== Usages ===
i476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
lastLocationAccess: - 
=== Succesors ===
next: v106 
=== Usages ===
i115 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 lastLocationAccess: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v19 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v19  <|@  <|@
f <@~|@floating>@ <|@
tid j114 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i53 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i53  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result [v2|QWORD[.] + v23|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j114 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j114  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i476 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v492 
lastLocationAccess: - 
value: i115 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i476 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v492 lastLocationAccess: - value: i115 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i52 
y: i21 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i52 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i53 
y: i21 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i53 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i54 
y: i21 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i54 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v10 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v10 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i397 i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i395 i396 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i392 i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i388 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i389 i390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i319 i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8]
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i5 
y: i403 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i5 y: i403  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i187 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i52 i398 
=== Succesors ===
=== Usages ===
i184 j198 i218 i275 i317 i319 i390 i393 i396 i398 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i52 i398  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i53 i397 
=== Succesors ===
=== Usages ===
i183 j199 i219 i274 i316 i318 i389 i392 i395 i397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i53 i397  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v178 
values: i54 i399 
=== Succesors ===
=== Usages ===
v179 i399 i220 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v178 values: i54 i399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 8
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v205 
=== Succesors ===
next: v182 
=== Usages ===
v180 v186 i187 i188 i189 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v205 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i404 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i189 y: i404  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.7563663512231358
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v181 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i477 
=== Usages ===
v381 
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i477  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
result [v0|QWORD[.] + v30|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j198 
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v493 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
i200 
=== Predecessor ===
v181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v493 lastLocationAccess: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v181 
=== Succesors ===
=== Usages ===
v306 v337 v197 v350 v293 v364 v261 v376 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v181  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i188  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
result [v2|QWORD[.] + v31|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j199 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v494 
lastLocationAccess: - 
value: i200 
stateAfter: - 
=== Succesors ===
next: i478 
=== Usages ===
=== Predecessor ===
i477 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v494 lastLocationAccess: - value: i200 stateAfter: - #next: i478  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i21 
=== Succesors ===
=== Usages ===
j262 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i184 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i184  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v0|QWORD[.] + v34|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j262 
=== Succesors ===
=== Usages ===
i478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v497 
lastLocationAccess: - 
=== Succesors ===
next: v261 
=== Usages ===
i264 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v497 lastLocationAccess: - #next: v261  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i21 
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i183 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i183  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [v2|QWORD[.] + v35|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j263 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i478 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v498 
lastLocationAccess: - 
value: i264 
stateAfter: - 
=== Succesors ===
next: i479 
=== Usages ===
=== Predecessor ===
i478 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v498 lastLocationAccess: - value: i264 stateAfter: - #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i138 
=== Succesors ===
=== Usages ===
j294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i275 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i275  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v0|QWORD[.] + v37|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j294 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
lastLocationAccess: - 
=== Succesors ===
next: v293 
=== Usages ===
i296 
=== Predecessor ===
v261 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 lastLocationAccess: - #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i138 
=== Succesors ===
=== Usages ===
j295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j295 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i274 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i274  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v2|QWORD[.] + v38|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j295 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j295  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v500 
lastLocationAccess: - 
value: i296 
stateAfter: - 
=== Succesors ===
next: i480 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v500 lastLocationAccess: - value: i296 stateAfter: - #next: i480  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i241 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i317 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result [v0|QWORD[.] + v40|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j307 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v501 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
i309 
=== Predecessor ===
v293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v501 lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i241 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i241  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i316 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i316  <|@  <|@
f <@~|@floating>@ <|@
tid v502 <|@
result [v2|QWORD[.] + v41|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j308 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j308  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i480 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v502 
lastLocationAccess: - 
value: i309 
stateAfter: - 
=== Succesors ===
next: i481 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v502 lastLocationAccess: - value: i309 stateAfter: - #next: i481  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i315 
=== Succesors ===
=== Usages ===
j338 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i319 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i319  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result [v0|QWORD[.] + v43|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j338 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v503 
lastLocationAccess: - 
=== Succesors ===
next: v337 
=== Usages ===
i340 
=== Predecessor ===
v306 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v503 lastLocationAccess: - #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i315 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i318 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
result [v2|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j339 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j339  <|@  <|@
f <@~|@floating>@ <|@
tid i340 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v504 
lastLocationAccess: - 
value: i340 
stateAfter: - 
=== Succesors ===
next: i482 
=== Usages ===
=== Predecessor ===
i481 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v504 lastLocationAccess: - value: i340 stateAfter: - #next: i482  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i388 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i390 
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i390  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
result [v0|QWORD[.] + v46|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j351 
=== Succesors ===
=== Usages ===
i482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v505 
lastLocationAccess: - 
=== Succesors ===
next: v350 
=== Usages ===
i353 
=== Predecessor ===
v337 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v505 lastLocationAccess: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i389 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i388 
=== Succesors ===
=== Usages ===
j352 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid j352 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i389 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
result [v2|QWORD[.] + v47|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j352 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j352  <|@  <|@
f <@~|@floating>@ <|@
tid i353 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i482 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v506 
lastLocationAccess: - 
value: i353 
stateAfter: - 
=== Succesors ===
next: i483 
=== Usages ===
=== Predecessor ===
i482 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v506 lastLocationAccess: - value: i353 stateAfter: - #next: i483  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i391 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i393 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result [v0|QWORD[.] + v49|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j365 
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v507 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
i367 
=== Predecessor ===
v350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v507 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid i392 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i391 
=== Succesors ===
=== Usages ===
j366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i391  <|@  <|@
f <@~|@floating>@ <|@
tid j366 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i392 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i392  <|@  <|@
f <@~|@floating>@ <|@
tid v508 <|@
result [v2|QWORD[.] + v50|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j366 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j366  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i483 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v508 
lastLocationAccess: - 
value: i367 
stateAfter: - 
=== Succesors ===
next: i484 
=== Usages ===
=== Predecessor ===
i483 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v508 lastLocationAccess: - value: i367 stateAfter: - #next: i484  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i394 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
result [v0|QWORD[.] + v52|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j377 
=== Succesors ===
=== Usages ===
i484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v509 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
i379 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v509 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i394 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i395 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i395  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
result [v2|QWORD[.] + v53|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j378 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i484 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v381 
address: v510 
lastLocationAccess: - 
value: i379 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
i484 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v381 address: v510 lastLocationAccess: - value: i379 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i189 
y: i387 
=== Succesors ===
=== Usages ===
i189 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i189 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i188 
y: i387 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i188 y: i387  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i187 
y: i387 
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i187 y: i387  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v178 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v178 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v178 #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i218 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i187 i215 
=== Succesors ===
=== Usages ===
i215 j229 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i187 i215  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i188 i214 
=== Succesors ===
=== Usages ===
i214 j230 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i188 i214  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v209 
values: i189 i216 
=== Succesors ===
=== Usages ===
v210 i216 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v209 values: i189 i216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 10
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 32.83618679177985
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v236 
=== Succesors ===
next: v213 
=== Usages ===
v211 v217 i218 i219 i220 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v236 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i220 
y: i5 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i220 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v212 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i485 
=== Usages ===
v235 
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i218 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i218  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
result [v0|QWORD[.] + v58|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: j229 
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
i231 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
guards: v454 v212 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v454 v212  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i219 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i219  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
result [v2|QWORD[.] + v59|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a3 
index: j230 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: j230  <|@  <|@
f <@~|@floating>@ <|@
tid i231 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
resultBits: 16
stamp: i16 [0 - 255] bits:00000000xxxxxxxx
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: char
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v496 
lastLocationAccess: - 
value: i231 
stateAfter: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
i485 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v496 lastLocationAccess: - value: i231 stateAfter: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 27]
stamp: i32
=== Inputs ===
x: i220 
y: i21 
=== Succesors ===
=== Usages ===
i220 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i220 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 12]
stamp: i32
=== Inputs ===
x: i219 
y: i21 
=== Succesors ===
=== Usages ===
i219 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i219 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 17]
stamp: i32
=== Inputs ===
x: i218 
y: i21 
=== Succesors ===
=== Usages ===
i218 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i218 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v209 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v209 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v209 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v48 v49 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v48 v49 #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:766) [bci: 33]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result int[-20251|0xffffffffffffb0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -20251
stableDimension: 0
stamp: i32 [-20251]
stampKind: i32
value: int[-20251|0xffffffffffffb0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v173 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
result int[-16411|0xffffffffffffbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
rawvalue: -16411
stableDimension: 0
stamp: i32 [-16411]
stampKind: i32
value: int[-16411|0xffffffffffffbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v466 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v417 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i421 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i32 [-25371 - -16411] bits:1...10xxxxxx11100101
valueDescription: i32
=== Inputs ===
merge: v417 
values: i427 i430 i432 i434 i427 i430 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v417 values: i427 i430 i432 i434 i427 i430  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: i64 [0 - 24] bits:0...0xx000
valueDescription: i64
=== Inputs ===
merge: v417 
values: j428 j428 j420 j420 j428 j428 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v417 values: j428 j428 j420 j420 j428 j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v429 v431 v433 v470 v471 
=== Succesors ===
next: v423 
=== Usages ===
i421 j422 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v429 v431 v433 v470 v471 #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(StringLatin1.java:764) [bci: 20]
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i421 
speculation: j422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i421 speculation: j422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [28, 588[[626, 707[28 MustHaveRegister 60 MustHaveRegister 252 MustHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd 468 MustHaveRegister 476 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 508 MustHaveRegister 516 MustHaveRegister 524 MustHaveRegister 535 LiveAtLoopEnd 576 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [30, 248[[626, 707[30 MustHaveRegister 62 ShouldHaveRegister 214 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [32, 588[[626, 707[32 MustHaveRegister 142 MustHaveRegister 254 MustHaveRegister 294 MustHaveRegister 303 LiveAtLoopEnd 470 MustHaveRegister 478 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 502 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 526 MustHaveRegister 535 LiveAtLoopEnd 578 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [34, 250[[626, 707[34 MustHaveRegister 144 ShouldHaveRegister 226 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|d [36, 588[[626, 707[36 MustHaveRegister 38 ShouldHaveRegister 64 ShouldHaveRegister 70 ShouldHaveRegister 146 ShouldHaveRegister 256 ShouldHaveRegister 258 MustHaveRegister 318 MustHaveRegister 556 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [60, 214[60 MustHaveRegister 92 ShouldHaveRegister 106 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v1|d [62, 261[62 MustHaveRegister 88 ShouldHaveRegister 106 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v4|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v7|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [68, 166[68 MustHaveRegister 90 ShouldHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v5|d [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [142, 226[142 MustHaveRegister 168 ShouldHaveRegister 182 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v3|d [144, 261[144 MustHaveRegister 164 ShouldHaveRegister 182 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [164, 166[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [166, 170[166 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v13|d [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [248, 252[248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [250, 254[250 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [258, 304[258 MustHaveRegister 272 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v28|d [262, 300[[304, 321[272 ShouldHaveRegister 300 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v14|d [262, 298[[304, 321[294 MustHaveRegister 298 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v6|d [262, 296[[304, 321[292 MustHaveRegister 296 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v24|d [296, 303[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v23|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v22|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [318, 536[318 MustHaveRegister 332 MustHaveRegister 535 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v57|d [322, 532[[536, 545[468 MustHaveRegister 472 ShouldHaveRegister 480 MustHaveRegister 488 MustHaveRegister 496 MustHaveRegister 504 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 532 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v56|d [322, 530[[536, 545[470 MustHaveRegister 474 ShouldHaveRegister 482 MustHaveRegister 490 MustHaveRegister 498 MustHaveRegister 506 MustHaveRegister 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v55|d [322, 528[[536, 545[332 ShouldHaveRegister 528 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v30|d [472, 476[472 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v31|d [474, 478[474 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [482, 486[482 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [488, 492[488 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [490, 494[490 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [496, 500[496 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [498, 502[498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [504, 508[504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [506, 510[506 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [512, 516[512 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [520, 524[520 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d v32|d [528, 535[528 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v31|d [530, 535[530 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v30|d [532, 535[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d v30|d [546, 584[576 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d v31|d [546, 582[578 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v32|d [546, 580[556 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v60|d [580, 587[580 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v59|d [582, 587[582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v58|d [584, 587[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [686, 702[702 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [686, 704[704 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 588[[626, 707[28 MustHaveRegister 60 MustHaveRegister 252 MustHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd 468 MustHaveRegister 476 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 508 MustHaveRegister 516 MustHaveRegister 524 MustHaveRegister 535 LiveAtLoopEnd 576 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 248[[626, 707[30 MustHaveRegister 62 ShouldHaveRegister 214 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [32, 588[[626, 707[32 MustHaveRegister 142 MustHaveRegister 254 MustHaveRegister 294 MustHaveRegister 303 LiveAtLoopEnd 470 MustHaveRegister 478 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 502 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 526 MustHaveRegister 535 LiveAtLoopEnd 578 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 250[[626, 707[34 MustHaveRegister 144 ShouldHaveRegister 226 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 588[[626, 707[36 MustHaveRegister 38 ShouldHaveRegister 64 ShouldHaveRegister 70 ShouldHaveRegister 146 ShouldHaveRegister 256 ShouldHaveRegister 258 MustHaveRegister 318 MustHaveRegister 556 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [60, 214[60 MustHaveRegister 92 ShouldHaveRegister 106 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [62, 261[62 MustHaveRegister 88 ShouldHaveRegister 106 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [68, 166[68 MustHaveRegister 90 ShouldHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v5|d [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [142, 226[142 MustHaveRegister 168 ShouldHaveRegister 182 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [144, 261[144 MustHaveRegister 164 ShouldHaveRegister 182 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [164, 166[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [166, 170[166 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v13|d [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [248, 252[248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [250, 254[250 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [258, 304[258 MustHaveRegister 272 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v28|d [262, 300[[304, 321[272 ShouldHaveRegister 300 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v14|d [262, 298[[304, 321[294 MustHaveRegister 298 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v6|d [262, 296[[304, 321[292 MustHaveRegister 296 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v24|d [296, 303[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v23|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v22|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [318, 536[318 MustHaveRegister 332 MustHaveRegister 535 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v57|d [322, 532[[536, 545[468 MustHaveRegister 472 ShouldHaveRegister 480 MustHaveRegister 488 MustHaveRegister 496 MustHaveRegister 504 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 532 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v56|d [322, 530[[536, 545[470 MustHaveRegister 474 ShouldHaveRegister 482 MustHaveRegister 490 MustHaveRegister 498 MustHaveRegister 506 MustHaveRegister 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v55|d [322, 528[[536, 545[332 ShouldHaveRegister 528 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdi|d]" v33|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v30|d [472, 476[472 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v31|d [474, 478[474 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [482, 486[482 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [488, 492[488 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [490, 494[490 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdi|d]" v43|d -1 [496, 500[496 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [498, 502[498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d -1 [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rdi|d]" v46|d -1 [504, 508[504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [506, 510[506 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdi|d]" v49|d -1 [512, 516[512 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdx|d]" v50|d -1 [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdi|d]" v51|d -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d -1 [520, 524[520 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbx|d]" v55|d v32|d [528, 535[528 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v31|d [530, 535[530 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r11|d]" v57|d v30|d [532, 535[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v30|d [546, 584[576 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r8|d]" v59|d v31|d [546, 582[578 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v32|d [546, 580[556 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[r10|d]" v61|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rbx|d]" v62|d v60|d [580, 587[580 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d v59|d [582, 587[582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v58|d [584, 587[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [686, 702[702 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [686, 704[704 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 588[[626, 707[28 MustHaveRegister 60 MustHaveRegister 252 MustHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd 468 MustHaveRegister 476 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 508 MustHaveRegister 516 MustHaveRegister 524 MustHaveRegister 535 LiveAtLoopEnd 576 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 248[[626, 707[30 MustHaveRegister 62 ShouldHaveRegister 214 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [32, 588[[626, 707[32 MustHaveRegister 142 MustHaveRegister 254 MustHaveRegister 294 MustHaveRegister 303 LiveAtLoopEnd 470 MustHaveRegister 478 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 502 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 526 MustHaveRegister 535 LiveAtLoopEnd 578 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 250[[626, 707[34 MustHaveRegister 144 ShouldHaveRegister 226 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 588[[626, 707[36 MustHaveRegister 38 ShouldHaveRegister 64 ShouldHaveRegister 70 ShouldHaveRegister 146 ShouldHaveRegister 256 ShouldHaveRegister 258 MustHaveRegister 318 MustHaveRegister 556 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [60, 214[60 MustHaveRegister 92 ShouldHaveRegister 106 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [62, 261[62 MustHaveRegister 88 ShouldHaveRegister 106 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [68, 166[68 MustHaveRegister 90 ShouldHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v5|d [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [142, 226[142 MustHaveRegister 168 ShouldHaveRegister 182 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [144, 261[144 MustHaveRegister 164 ShouldHaveRegister 182 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [164, 166[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [166, 170[166 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v13|d [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [248, 252[248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [250, 254[250 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [258, 304[258 MustHaveRegister 272 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v28|d [262, 300[[304, 321[272 ShouldHaveRegister 300 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v14|d [262, 298[[304, 321[294 MustHaveRegister 298 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v6|d [262, 296[[304, 321[292 MustHaveRegister 296 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v24|d [296, 303[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v23|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v22|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [318, 536[318 MustHaveRegister 332 MustHaveRegister 535 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v57|d [322, 532[[536, 545[468 MustHaveRegister 472 ShouldHaveRegister 480 MustHaveRegister 488 MustHaveRegister 496 MustHaveRegister 504 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 532 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v56|d [322, 530[[536, 545[470 MustHaveRegister 474 ShouldHaveRegister 482 MustHaveRegister 490 MustHaveRegister 498 MustHaveRegister 506 MustHaveRegister 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v55|d [322, 528[[536, 545[332 ShouldHaveRegister 528 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdi|d]" v33|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v30|d [472, 476[472 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v31|d [474, 478[474 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [482, 486[482 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [488, 492[488 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [490, 494[490 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdi|d]" v43|d -1 [496, 500[496 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [498, 502[498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d -1 [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rdi|d]" v46|d -1 [504, 508[504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [506, 510[506 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdi|d]" v49|d -1 [512, 516[512 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdx|d]" v50|d -1 [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdi|d]" v51|d -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d -1 [520, 524[520 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbx|d]" v55|d v32|d [528, 535[528 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v31|d [530, 535[530 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r11|d]" v57|d v30|d [532, 535[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v30|d [546, 584[576 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r8|d]" v59|d v31|d [546, 582[578 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v32|d [546, 580[556 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[r10|d]" v61|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rbx|d]" v62|d v60|d [580, 587[580 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d v59|d [582, 587[582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v58|d [584, 587[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [686, 702[702 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [686, 704[704 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [int[1|0x1], v14|DWORD, v6|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v28|DWORD, v27|DWORD, v26|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [v24|DWORD, v23|DWORD, v22|DWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [v57|DWORD, v56|DWORD, v55|DWORD] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [v30|DWORD, v31|DWORD, v32|DWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [v64|DWORD, v63|DWORD, v62|DWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [int[-16411|0xffffffffffffbfe5], long[0|0x0]] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [int[-20251|0xffffffffffffb0e5], long[0|0x0]] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [int[-25371|0xffffffffffff9ce5], long[24|0x18]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [int[-22811|0xffffffffffffa6e5], long[24|0x18]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|q fixed "[rcx|q]" rcx|q -1 [0, 32[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 30[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 28[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d -1 [0, 34[ "NoSpillStore"
  r9|d fixed "[r9|d]" r9|d -1 [0, 36[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 588[[626, 707[28 MustHaveRegister 60 MustHaveRegister 252 MustHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd 468 MustHaveRegister 476 MustHaveRegister 484 MustHaveRegister 492 MustHaveRegister 500 MustHaveRegister 508 MustHaveRegister 516 MustHaveRegister 524 MustHaveRegister 535 LiveAtLoopEnd 576 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [30, 248[[626, 707[30 MustHaveRegister 62 ShouldHaveRegister 214 ShouldHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|q [32, 588[[626, 707[32 MustHaveRegister 142 MustHaveRegister 254 MustHaveRegister 294 MustHaveRegister 303 LiveAtLoopEnd 470 MustHaveRegister 478 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 502 MustHaveRegister 510 MustHaveRegister 518 MustHaveRegister 526 MustHaveRegister 535 LiveAtLoopEnd 578 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 250[[626, 707[34 MustHaveRegister 144 ShouldHaveRegister 226 ShouldHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|d [36, 588[[626, 707[36 MustHaveRegister 38 ShouldHaveRegister 64 ShouldHaveRegister 70 ShouldHaveRegister 146 ShouldHaveRegister 256 ShouldHaveRegister 258 MustHaveRegister 318 MustHaveRegister 556 MustHaveRegister 587 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [60, 214[60 MustHaveRegister 92 ShouldHaveRegister 106 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v1|d [62, 261[62 MustHaveRegister 88 ShouldHaveRegister 106 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d v4|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v7|d [66, 68[66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q v8|q [68, 166[68 MustHaveRegister 90 ShouldHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [88, 90[88 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [90, 94[90 MustHaveRegister 94 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v5|d [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d -1 [142, 226[142 MustHaveRegister 168 ShouldHaveRegister 182 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v3|d [144, 261[144 MustHaveRegister 164 ShouldHaveRegister 182 ShouldHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbp|q]" v15|q -1 [164, 166[164 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q v15|q [166, 170[166 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbx|q]" v17|q v13|d [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [248, 252[248 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r8|q]" v19|q -1 [250, 254[250 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r10|d]" v20|d -1 [252, 254[252 MustHaveRegister 254 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r10|d]" v21|d -1 [258, 304[258 MustHaveRegister 272 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d v28|d [262, 300[[304, 321[272 ShouldHaveRegister 300 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v14|d [262, 298[[304, 321[294 MustHaveRegister 298 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v6|d [262, 296[[304, 321[292 MustHaveRegister 296 ShouldHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rbx|d]" v25|d -1 [292, 294[292 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d v24|d [296, 303[296 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v23|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v22|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [318, 536[318 MustHaveRegister 332 MustHaveRegister 535 LiveAtLoopEnd  "NoSpillStore"
  v30|d DWORD "[r11|d]" v30|d v57|d [322, 532[[536, 545[468 MustHaveRegister 472 ShouldHaveRegister 480 MustHaveRegister 488 MustHaveRegister 496 MustHaveRegister 504 MustHaveRegister 512 MustHaveRegister 520 MustHaveRegister 532 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v56|d [322, 530[[536, 545[470 MustHaveRegister 474 ShouldHaveRegister 482 MustHaveRegister 490 MustHaveRegister 498 MustHaveRegister 506 MustHaveRegister 514 MustHaveRegister 522 MustHaveRegister 530 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v55|d [322, 528[[536, 545[332 ShouldHaveRegister 528 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdi|d]" v33|d -1 [468, 470[468 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d v30|d [472, 476[472 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rdx|d]" v35|d v31|d [474, 478[474 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdi|d]" v37|d -1 [480, 484[480 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[rdx|d]" v38|d -1 [482, 486[482 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[rdi|d]" v39|d -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rdi|d]" v40|d -1 [488, 492[488 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d -1 [490, 494[490 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[rdi|d]" v43|d -1 [496, 500[496 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [498, 502[498 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rdi|d]" v45|d -1 [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rdi|d]" v46|d -1 [504, 508[504 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rdx|d]" v47|d -1 [506, 510[506 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdi|d]" v48|d -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdi|d]" v49|d -1 [512, 516[512 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdx|d]" v50|d -1 [514, 518[514 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[rdi|d]" v51|d -1 [516, 518[516 MustHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[rdi|d]" v52|d -1 [520, 524[520 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[rdx|d]" v53|d -1 [522, 526[522 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[rdi|d]" v54|d -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[rbx|d]" v55|d v32|d [528, 535[528 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[r8|d]" v56|d v31|d [530, 535[530 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[r11|d]" v57|d v30|d [532, 535[532 MustHaveRegister 534 ShouldHaveRegister  "NoSpillStore"
  v58|d DWORD "[r11|d]" v58|d v30|d [546, 584[576 MustHaveRegister 584 ShouldHaveRegister  "NoSpillStore"
  v59|d DWORD "[r8|d]" v59|d v31|d [546, 582[578 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[rbx|d]" v60|d v32|d [546, 580[556 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v61|d DWORD "[r10|d]" v61|d -1 [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[rbx|d]" v62|d v60|d [580, 587[580 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r8|d]" v63|d v59|d [582, 587[582 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[r11|d]" v64|d v58|d [584, 587[584 MustHaveRegister 586 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [686, 702[702 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q -1 [686, 704[704 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [v22|DWORD, v23|DWORD, v24|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [v30|DWORD, v31|DWORD, v32|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [v58|DWORD, v59|DWORD, v60|DWORD] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [v65|DWORD, v66|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction v6|DWORD = INC value: v1|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction v7|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|QWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction v9|QWORD = DEC value: v8|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction v10|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction v12|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: v12|QWORD, y: v11|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v6|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction v13|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction v14|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction v15|QWORD = MOVSXD value: v14|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: v17|QWORD, y: v16|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v1|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction v18|QWORD = MOV value: v1|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction v19|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction v20|DWORD = MOVZXB input: [v0|QWORD[.] + v18|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [v2|QWORD[.] + v19|QWORD * 2 + 16], y: v20|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction v21|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v21|DWORD, y: v22|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction v25|DWORD = MOVZXB input: [v0|QWORD[.] + v24|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v2|QWORD[.] + v23|DWORD * 2 + 16], y: v25|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction v26|DWORD = INC value: v24|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction v27|DWORD = INC value: v23|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction v28|DWORD = INC value: v22|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction v29|DWORD = LEA address: [v4|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE input: v24|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE input: v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v32|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction v33|DWORD = MOVZXB input: [v0|QWORD[.] + v30|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [v2|QWORD[.] + v31|DWORD * 2 + 16], y: v33|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction v34|DWORD = INC value: v30|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction v35|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction v36|DWORD = MOVZXB input: [v0|QWORD[.] + v34|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [v2|QWORD[.] + v35|DWORD * 2 + 16], y: v36|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction v37|DWORD = LEA address: [v30|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction v38|DWORD = LEA address: [v31|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction v39|DWORD = MOVZXB input: [v0|QWORD[.] + v37|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [v2|QWORD[.] + v38|DWORD * 2 + 16], y: v39|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction v40|DWORD = LEA address: [v30|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction v41|DWORD = LEA address: [v31|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction v42|DWORD = MOVZXB input: [v0|QWORD[.] + v40|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v2|QWORD[.] + v41|DWORD * 2 + 16], y: v42|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction v43|DWORD = LEA address: [v30|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction v44|DWORD = LEA address: [v31|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction v45|DWORD = MOVZXB input: [v0|QWORD[.] + v43|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [v2|QWORD[.] + v44|DWORD * 2 + 16], y: v45|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction v46|DWORD = LEA address: [v30|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction v47|DWORD = LEA address: [v31|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction v48|DWORD = MOVZXB input: [v0|QWORD[.] + v46|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [v2|QWORD[.] + v47|DWORD * 2 + 16], y: v48|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction v49|DWORD = LEA address: [v30|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction v50|DWORD = LEA address: [v31|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction v51|DWORD = MOVZXB input: [v0|QWORD[.] + v49|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [v2|QWORD[.] + v50|DWORD * 2 + 16], y: v51|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction v52|DWORD = LEA address: [v30|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction v53|DWORD = LEA address: [v31|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction v54|DWORD = MOVZXB input: [v0|QWORD[.] + v52|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [v2|QWORD[.] + v53|DWORD * 2 + 16], y: v54|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction v55|DWORD = LEA address: [v32|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction v56|DWORD = LEA address: [v31|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction v57|DWORD = LEA address: [v30|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v60|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction v61|DWORD = MOVZXB input: [v0|QWORD[.] + v58|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [v2|QWORD[.] + v59|DWORD * 2 + 16], y: v61|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction v62|DWORD = INC value: v60|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction v63|DWORD = INC value: v59|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction v64|DWORD = INC value: v58|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v65|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v66|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|DWORD v4|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   62  <|@ instruction r11|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = DEC value: rbx|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B30" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD <|@ <|@
      nr   90  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   92  <|@ instruction rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B29" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  144  <|@ instruction rax|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  166  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B27" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B13" "B26" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B25" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606916218612916857
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r10|QWORD = MOV value: rdx|DWORD size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  256  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607004511532792014
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4613966577724726518
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  472  <|@ instruction rdi|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction rdx|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  480  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  482  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  484  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  488  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  490  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  492  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  496  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  498  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD <|@ <|@
      nr  500  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD <|@ <|@
      nr  508  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  512  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD <|@ <|@
      nr  516  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  518  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  522  <|@ instruction rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD <|@ <|@
      nr  524  <|@ instruction rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  528  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B19" "B20" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4616151827491636629
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4606916218612916858
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576804368653063423
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD <|@ <|@
      nr  578  <|@ instruction MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr  580  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  582  <|@ instruction r8|DWORD = INC value: r8|DWORD size: DWORD <|@ <|@
      nr  584  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4607004511532792015
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 3 label: ? <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4606916218612916859
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4602412618985546361
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B24" 
    xhandlers
    flags 
    probability 4584175627395641568
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B28" "B26" "B25" "B29" "B27" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  706  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|DWORD r9|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5] // MoveResolver resolve mapping <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5] // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5] // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B31" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[24|0x18] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5] // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore        5
     3: iload         5
     5: iload         4
     7: if_icmpge     33
    10: aload_2       
    11: iload_3       
    12: iinc          
    15: aload_0       
    16: iload_1       
    17: iinc          
    20: baload        
    21: sipush        255
    24: iand          
    25: i2c           
    26: castore       
    27: iinc          
    30: goto          3
    33: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f852d030000909090909090909090909048896c24104183f9010f8c82020000909090909090909090448b560c448bda41ffc3418bd9ffcb48ffcb4183f9020f8c4d020000909090909090904963fb4803fb418bc2483bc70f864902000090909090453bd30f86b60200009090909090909090908b790c418bc0ffc04183f9020f8c14020000909090909090904863e84803eb8bdf483bdd0f863b020000909090903bf80f864102000090909090909090443bd20f864302000090909090413bf80f8648020000909090909090909090448bd2458bc0460fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e92900000066660f1f840000000000666666909090909090909090420fb65c061066895c411041ffc0ffc041ffc390909090453bd37fdc909090909090458d51f8418bdb458bd8448bc0e9dd0000000f1f4000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090420fb67c1e106642897c4110418bfbffc7418bd0ffc20fb67c3e1066897c5110418d7b02418d50020fb67c3e1066897c5110418d7b03418d50030fb67c3e1066897c5110418d7b04418d50040fb67c3e1066897c5110418d7b05418d50050fb67c3e1066897c5110418d7b06418d50060fb67c3e1066897c5110418d7b07418d50070fb67c3e1066897c51108d5b08458d4008458d5b0890909090443bd30f8f1affffff909090e92e0000006666660f1f840000000000666666906666909090909090909090460fb6541e10664689544110ffc341ffc041ffc390909090443bcb7fdb90909090909090909090488b6c24104883c418493ba7500400000f87b2000000c3909090e9d4fdffff909090e90bfeffff909090ebcd90909049c7c31800000041bae5a6ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31800000041bae59cffffebcc90909049c7c31800000041bae59cffffebba90909049c7c30000000041bae5bfffffeba890909049c7c30000000041bae5b0ffffeb9690909049c7c31800000041bae5a6ffffeb8448896c2410e800000000e9c4fcfffff4488d0d3affffff49898f68040000e996fcfffff441c78784040000f5c5ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD  <||@
  Comment 42 38 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 52 block B2 null  <||@
  Comment 52 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 52 42 NOP  <||@
  Comment 53 44 NOP  <||@
  Comment 54 46 NOP  <||@
  Comment 55 48 NOP  <||@
  Comment 56 50 NOP  <||@
  Comment 57 52 NOP  <||@
  Comment 58 54 NOP  <||@
  Comment 59 56 NOP  <||@
  Comment 60 58 NOP  <||@
  Comment 61 60 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 61 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 62 r11|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 71 64 rbx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 76 66 rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 76 68 rbx|QWORD = DEC value: rbx|QWORD size: QWORD  <||@
  Comment 79 70 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 89 block B4 null  <||@
  Comment 89 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 74 NOP  <||@
  Comment 90 76 NOP  <||@
  Comment 91 78 NOP  <||@
  Comment 92 80 NOP  <||@
  Comment 93 82 NOP  <||@
  Comment 94 84 NOP  <||@
  Comment 95 86 NOP  <||@
  Comment 96 88 rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 99 90 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 102 92 rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 105 94 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 114 block B5 null  <||@
  Comment 114 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 98 NOP  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 127 block B6 null  <||@
  Comment 127 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 110 NOP  <||@
  Comment 128 112 NOP  <||@
  Comment 129 114 NOP  <||@
  Comment 130 116 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 130 block B7 null  <||@
  Comment 130 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 130 130 NOP  <||@
  Comment 131 132 NOP  <||@
  Comment 132 134 NOP  <||@
  Comment 133 136 NOP  <||@
  Comment 134 138 NOP  <||@
  Comment 135 140 NOP  <||@
  Comment 136 142 rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 136 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 136 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 139 144 rax|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 144 146 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 154 block B9 null  <||@
  Comment 154 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 150 NOP  <||@
  Comment 155 152 NOP  <||@
  Comment 156 154 NOP  <||@
  Comment 157 156 NOP  <||@
  Comment 158 158 NOP  <||@
  Comment 159 160 NOP  <||@
  Comment 160 162 NOP  <||@
  Comment 161 164 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 164 166 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 167 168 rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 169 170 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 178 block B10 null  <||@
  Comment 178 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 174 NOP  <||@
  Comment 179 176 NOP  <||@
  Comment 180 178 NOP  <||@
  Comment 181 180 NOP  <||@
  Comment 182 182 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 190 block B11 null  <||@
  Comment 190 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 186 NOP  <||@
  Comment 191 188 NOP  <||@
  Comment 192 190 NOP  <||@
  Comment 193 192 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 193 block B12 null  <||@
  Comment 193 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 193 206 NOP  <||@
  Comment 194 208 NOP  <||@
  Comment 195 210 NOP  <||@
  Comment 196 212 NOP  <||@
  Comment 197 214 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 206 block B13 null  <||@
  Comment 206 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 218 NOP  <||@
  Comment 207 220 NOP  <||@
  Comment 208 222 NOP  <||@
  Comment 209 224 NOP  <||@
  Comment 210 226 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 219 block B14 null  <||@
  Comment 219 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 230 NOP  <||@
  Comment 220 232 NOP  <||@
  Comment 221 234 NOP  <||@
  Comment 222 236 NOP  <||@
  Comment 223 238 NOP  <||@
  Comment 224 240 NOP  <||@
  Comment 225 242 NOP  <||@
  Comment 226 244 NOP  <||@
  Comment 227 246 NOP  <||@
  Comment 228 248 r10|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 231 250 r8|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 234 252 r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD  <||@
  Comment 240 254 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 246 256 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 250 258 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 260 -1 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 263 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 269 260 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 274 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 274 274 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 276 NOP  <||@
  Comment 289 278 NOP  <||@
  Comment 290 280 NOP  <||@
  Comment 291 282 NOP  <||@
  Comment 292 284 NOP  <||@
  Comment 293 286 NOP  <||@
  Comment 294 288 NOP  <||@
  Comment 295 290 NOP  <||@
  Comment 296 292 rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 302 294 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 307 296 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 310 298 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 312 300 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 315 302 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 315 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 315 262 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 315 264 NOP  <||@
  Comment 316 266 NOP  <||@
  Comment 317 268 NOP  <||@
  Comment 318 270 NOP  <||@
  Comment 319 272 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 324 block B17 null  <||@
  Comment 324 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 306 NOP  <||@
  Comment 325 308 NOP  <||@
  Comment 326 310 NOP  <||@
  Comment 327 312 NOP  <||@
  Comment 328 314 NOP  <||@
  Comment 329 316 NOP  <||@
  Comment 330 318 r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD  <||@
  Comment 334 -1 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 337 -1 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 340 -1 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 343 320 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 348 block B19 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 348 334 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 336 NOP  <||@
  Comment 353 338 NOP  <||@
  Comment 354 340 NOP  <||@
  Comment 355 342 NOP  <||@
  Comment 356 344 NOP  <||@
  Comment 357 346 NOP  <||@
  Comment 358 348 NOP  <||@
  Comment 359 350 NOP  <||@
  Comment 360 352 NOP  <||@
  Comment 361 354 NOP  <||@
  Comment 362 356 NOP  <||@
  Comment 363 358 NOP  <||@
  Comment 364 360 NOP  <||@
  Comment 365 362 NOP  <||@
  Comment 366 364 NOP  <||@
  Comment 367 366 NOP  <||@
  Comment 368 368 NOP  <||@
  Comment 369 370 NOP  <||@
  Comment 370 372 NOP  <||@
  Comment 371 374 NOP  <||@
  Comment 372 376 NOP  <||@
  Comment 373 378 NOP  <||@
  Comment 374 380 NOP  <||@
  Comment 375 382 NOP  <||@
  Comment 376 384 NOP  <||@
  Comment 377 386 NOP  <||@
  Comment 378 388 NOP  <||@
  Comment 379 390 NOP  <||@
  Comment 380 392 NOP  <||@
  Comment 381 394 NOP  <||@
  Comment 382 396 NOP  <||@
  Comment 383 398 NOP  <||@
  Comment 384 400 NOP  <||@
  Comment 385 402 NOP  <||@
  Comment 386 404 NOP  <||@
  Comment 387 406 NOP  <||@
  Comment 388 408 NOP  <||@
  Comment 389 410 NOP  <||@
  Comment 390 412 NOP  <||@
  Comment 391 414 NOP  <||@
  Comment 392 416 NOP  <||@
  Comment 393 418 NOP  <||@
  Comment 394 420 NOP  <||@
  Comment 395 422 NOP  <||@
  Comment 396 424 NOP  <||@
  Comment 397 426 NOP  <||@
  Comment 398 428 NOP  <||@
  Comment 399 430 NOP  <||@
  Comment 400 432 NOP  <||@
  Comment 401 434 NOP  <||@
  Comment 402 436 NOP  <||@
  Comment 403 438 NOP  <||@
  Comment 404 440 NOP  <||@
  Comment 405 442 NOP  <||@
  Comment 406 444 NOP  <||@
  Comment 407 446 NOP  <||@
  Comment 408 448 NOP  <||@
  Comment 409 450 NOP  <||@
  Comment 410 452 NOP  <||@
  Comment 411 454 NOP  <||@
  Comment 412 456 NOP  <||@
  Comment 413 458 NOP  <||@
  Comment 414 460 NOP  <||@
  Comment 415 462 NOP  <||@
  Comment 416 464 NOP  <||@
  Comment 417 466 NOP  <||@
  Comment 418 468 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 424 470 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 430 472 rdi|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 435 474 rdx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 440 476 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 445 478 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 450 480 rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 454 482 rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD  <||@
  Comment 458 484 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 463 486 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 468 488 rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 472 490 rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD  <||@
  Comment 476 492 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 481 494 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 486 496 rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 490 498 rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD  <||@
  Comment 494 500 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 499 502 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 504 504 rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD  <||@
  Comment 508 506 rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD  <||@
  Comment 512 508 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 517 510 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 522 512 rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD  <||@
  Comment 526 514 rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD  <||@
  Comment 530 516 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 535 518 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 540 520 rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD  <||@
  Comment 544 522 rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD  <||@
  Comment 548 524 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 553 526 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 558 528 rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD  <||@
  Comment 561 530 r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD  <||@
  Comment 565 532 r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD  <||@
  Comment 569 534 JUMP ~outgoingValues: [] destination: B19 -> B18  <||@
  Comment 569 block B18 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 569 322 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 569 324 NOP  <||@
  Comment 570 326 NOP  <||@
  Comment 571 328 NOP  <||@
  Comment 572 330 NOP  <||@
  Comment 573 332 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 582 block B20 null  <||@
  Comment 582 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 582 538 NOP  <||@
  Comment 583 540 NOP  <||@
  Comment 584 542 NOP  <||@
  Comment 585 544 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 590 block B22 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 590 558 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 560 NOP  <||@
  Comment 609 562 NOP  <||@
  Comment 610 564 NOP  <||@
  Comment 611 566 NOP  <||@
  Comment 612 568 NOP  <||@
  Comment 613 570 NOP  <||@
  Comment 614 572 NOP  <||@
  Comment 615 574 NOP  <||@
  Comment 616 576 r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 622 578 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 628 580 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 630 582 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 633 584 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 636 586 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 636 block B21 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 636 546 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 636 548 NOP  <||@
  Comment 637 550 NOP  <||@
  Comment 638 552 NOP  <||@
  Comment 639 554 NOP  <||@
  Comment 640 556 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 645 block B23 null  <||@
  Comment 645 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 590 NOP  <||@
  Comment 646 592 NOP  <||@
  Comment 647 594 NOP  <||@
  Comment 648 596 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 648 block B24 null  <||@
  Comment 648 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 600 NOP  <||@
  Comment 649 602 NOP  <||@
  Comment 650 604 NOP  <||@
  Comment 651 606 NOP  <||@
  Comment 652 608 NOP  <||@
  Comment 653 610 NOP  <||@
  Comment 654 612 NOP  <||@
  Comment 655 614 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 664 POLL_RETURN_FAR  <||@
  Comment 678 block B3 null  <||@
  Comment 678 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 120 NOP  <||@
  Comment 679 122 NOP  <||@
  Comment 680 124 NOP  <||@
  Comment 681 126 JUMP ~outgoingValues: [] destination: B3 -> B7  <||@
  Comment 686 block B8 null  <||@
  Comment 686 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 196 NOP  <||@
  Comment 687 198 NOP  <||@
  Comment 688 200 NOP  <||@
  Comment 689 202 JUMP ~outgoingValues: [] destination: B8 -> B12  <||@
  Comment 694 block B1 null  <||@
  Comment 694 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 618 NOP  <||@
  Comment 695 620 NOP  <||@
  Comment 696 622 NOP  <||@
  Comment 697 624 JUMP ~outgoingValues: [] destination: B1 -> B24  <||@
  Comment 699 block B30 null  <||@
  Comment 699 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 628 NOP  <||@
  Comment 700 630 NOP  <||@
  Comment 701 632 NOP  <||@
  Comment 702 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 709 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 715 634 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 715 block B31 null  <||@
  Comment 715 686 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 715 688 NOP  <||@
  Comment 716 690 NOP  <||@
  Comment 717 692 NOP  <||@
  Comment 718 694 NOP  <||@
  Comment 719 696 NOP  <||@
  Comment 720 698 NOP  <||@
  Comment 721 700 NOP  <||@
  Comment 722 702 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 729 704 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 736 706 DEOPT info [bci:0]  <||@
  Comment 736 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 741 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 749 block B28 null  <||@
  Comment 749 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 668 NOP  <||@
  Comment 750 670 NOP  <||@
  Comment 751 672 NOP  <||@
  Comment 752 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 759 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 765 674 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 767 block B27 null  <||@
  Comment 767 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 658 NOP  <||@
  Comment 768 660 NOP  <||@
  Comment 769 662 NOP  <||@
  Comment 770 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 777 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 783 664 JUMP ~outgoingValues: [] destination: B27 -> B31  <||@
  Comment 785 block B26 null  <||@
  Comment 785 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 638 NOP  <||@
  Comment 786 640 NOP  <||@
  Comment 787 642 NOP  <||@
  Comment 788 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 795 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 801 644 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 803 block B25 null  <||@
  Comment 803 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 803 648 NOP  <||@
  Comment 804 650 NOP  <||@
  Comment 805 652 NOP  <||@
  Comment 806 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 813 -1 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 819 654 JUMP ~outgoingValues: [] destination: B25 -> B31  <||@
  Comment 821 block B29 null  <||@
  Comment 821 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 678 NOP  <||@
  Comment 822 680 NOP  <||@
  Comment 823 682 NOP  <||@
  Comment 824 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 831 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 837 684 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 844 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 869 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 902 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 932 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 937 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 945 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 945 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 951 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 951 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3469[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  method "HotSpotCompilation-3469[java.lang.StringLatin1.inflate(byte[], int, char[], int, int)]"
  date 1724269669586
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789a3c5f80 89842400c0feff4883ec189041817f20030000000f852d030000909090909090909090909048896c24104183f9010f8c82020000909090909090909090448b560c448bda41ffc3418bd9ffcb48ffcb4183f9020f8c4d020000909090909090904963fb4803fb418bc2483bc70f864902000090909090453bd30f86b60200009090909090909090908b790c418bc0ffc04183f9020f8c14020000909090909090904863e84803eb8bdf483bdd0f863b020000909090903bf80f864102000090909090909090443bd20f864302000090909090413bf80f8648020000909090909090909090448bd2458bc0460fb65416106646895441104183f90341ba02000000450f4cd1458bc341bb01000000e92900000066660f1f840000000000666666909090909090909090420fb65c061066895c411041ffc0ffc041ffc390909090453bd37fdc909090909090458d51f8418bdb458bd8448bc0e9dd0000000f1f4000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090420fb67c1e106642897c4110418bfbffc7418bd0ffc20fb67c3e1066897c5110418d7b02418d50020fb67c3e1066897c5110418d7b03418d50030fb67c3e1066897c5110418d7b04418d50040fb67c3e1066897c5110418d7b05418d50050fb67c3e1066897c5110418d7b06418d50060fb67c3e1066897c5110418d7b07418d50070fb67c3e1066897c51108d5b08458d4008458d5b0890909090443bd30f8f1affffff909090e92e0000006666660f1f840000000000666666906666909090909090909090460fb6541e10664689544110ffc341ffc041ffc390909090443bcb7fdb90909090909090909090488b6c24104883c418493ba7500400000f87b2000000c3909090e9d4fdffff909090e90bfeffff909090ebcd90909049c7c31800000041bae5a6ffff90909090909090458997840400004d899f90040000e8154f3cff0f1f84000000000090909049c7c31800000041bae59cffffebcc90909049c7c31800000041bae59cffffebba90909049c7c30000000041bae5bfffffeba890909049c7c30000000041bae5b0ffffeb9690909049c7c31800000041bae5a6ffffeb8448896c2410e84f4f3affe9c4fcfffff4488d0d3affffff49898f68040000e9165d3cfff441c78784040000f5c5ffff49c7879004000000000000e8744e3cff0f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8514e3cff0f1f840000000000e8caef4ffff4e8e44b3cfff4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@56309e36 slotKind: QWORD  <||@
  Comment 42 38 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.02955415768785563 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 52 block B2 null  <||@
  Comment 52 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 52 42 NOP  <||@
  Comment 53 44 NOP  <||@
  Comment 54 46 NOP  <||@
  Comment 55 48 NOP  <||@
  Comment 56 50 NOP  <||@
  Comment 57 52 NOP  <||@
  Comment 58 54 NOP  <||@
  Comment 59 56 NOP  <||@
  Comment 60 58 NOP  <||@
  Comment 61 60 r10|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 61 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 62 r11|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 71 64 rbx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 76 66 rbx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 76 68 rbx|QWORD = DEC value: rbx|QWORD size: QWORD  <||@
  Comment 79 70 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 2 size: DWORD inlinedY: null  <||@
  Comment 89 block B4 null  <||@
  Comment 89 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 74 NOP  <||@
  Comment 90 76 NOP  <||@
  Comment 91 78 NOP  <||@
  Comment 92 80 NOP  <||@
  Comment 93 82 NOP  <||@
  Comment 94 84 NOP  <||@
  Comment 95 86 NOP  <||@
  Comment 96 88 rdi|QWORD = MOVSXD value: r11|DWORD size: QWORD  <||@
  Comment 99 90 rdi|QWORD = ADD (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 102 92 rax|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 105 94 CMPBRANCH (x: rax|QWORD, y: rdi|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B30 size: QWORD  <||@
  Comment 114 block B5 null  <||@
  Comment 114 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 98 NOP  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B29 size: DWORD  <||@
  Comment 127 block B6 null  <||@
  Comment 127 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 127 110 NOP  <||@
  Comment 128 112 NOP  <||@
  Comment 129 114 NOP  <||@
  Comment 130 116 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 130 block B7 null  <||@
  Comment 130 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 130 130 NOP  <||@
  Comment 131 132 NOP  <||@
  Comment 132 134 NOP  <||@
  Comment 133 136 NOP  <||@
  Comment 134 138 NOP  <||@
  Comment 135 140 NOP  <||@
  Comment 136 142 rdi|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 136 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 136 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 139 144 rax|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 144 146 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 2 size: DWORD inlinedY: null  <||@
  Comment 154 block B9 null  <||@
  Comment 154 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 150 NOP  <||@
  Comment 155 152 NOP  <||@
  Comment 156 154 NOP  <||@
  Comment 157 156 NOP  <||@
  Comment 158 158 NOP  <||@
  Comment 159 160 NOP  <||@
  Comment 160 162 NOP  <||@
  Comment 161 164 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 164 166 rbp|QWORD = ADD (x: rbp|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 167 168 rbx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 169 170 CMPBRANCH (x: rbx|QWORD, y: rbp|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B28 size: QWORD  <||@
  Comment 178 block B10 null  <||@
  Comment 178 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 174 NOP  <||@
  Comment 179 176 NOP  <||@
  Comment 180 178 NOP  <||@
  Comment 181 180 NOP  <||@
  Comment 182 182 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B27 size: DWORD  <||@
  Comment 190 block B11 null  <||@
  Comment 190 184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 186 NOP  <||@
  Comment 191 188 NOP  <||@
  Comment 192 190 NOP  <||@
  Comment 193 192 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 193 block B12 null  <||@
  Comment 193 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 193 206 NOP  <||@
  Comment 194 208 NOP  <||@
  Comment 195 210 NOP  <||@
  Comment 196 212 NOP  <||@
  Comment 197 214 CMPBRANCH (x: r10|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B26 size: DWORD  <||@
  Comment 206 block B13 null  <||@
  Comment 206 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 218 NOP  <||@
  Comment 207 220 NOP  <||@
  Comment 208 222 NOP  <||@
  Comment 209 224 NOP  <||@
  Comment 210 226 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B25 size: DWORD  <||@
  Comment 219 block B14 null  <||@
  Comment 219 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 230 NOP  <||@
  Comment 220 232 NOP  <||@
  Comment 221 234 NOP  <||@
  Comment 222 236 NOP  <||@
  Comment 223 238 NOP  <||@
  Comment 224 240 NOP  <||@
  Comment 225 242 NOP  <||@
  Comment 226 244 NOP  <||@
  Comment 227 246 NOP  <||@
  Comment 228 248 r10|QWORD = MOV value: rdx|DWORD size: DWORD  <||@
  Comment 231 250 r8|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 234 252 r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r10|QWORD * 1 + 16] size: DWORD  <||@
  Comment 240 254 MOV (x: [rcx|QWORD[.] + r8|QWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 246 256 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 250 258 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: <  <||@
  Comment 260 -1 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 263 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 269 260 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 274 block B16 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 274 274 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 276 NOP  <||@
  Comment 289 278 NOP  <||@
  Comment 290 280 NOP  <||@
  Comment 291 282 NOP  <||@
  Comment 292 284 NOP  <||@
  Comment 293 286 NOP  <||@
  Comment 294 288 NOP  <||@
  Comment 295 290 NOP  <||@
  Comment 296 292 rbx|DWORD = MOVZXB input: [rsi|QWORD[.] + r8|DWORD * 1 + 16] size: DWORD  <||@
  Comment 302 294 MOV (x: [rcx|QWORD[.] + rax|DWORD * 2 + 16], y: rbx|DWORD) size: WORD  <||@
  Comment 307 296 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 310 298 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 312 300 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 315 302 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 315 block B15 loop 0 depth 1 header:10|LoopBegin  <||@
  Comment 315 262 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 315 264 NOP  <||@
  Comment 316 266 NOP  <||@
  Comment 317 268 NOP  <||@
  Comment 318 270 NOP  <||@
  Comment 319 272 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 324 block B17 null  <||@
  Comment 324 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 306 NOP  <||@
  Comment 325 308 NOP  <||@
  Comment 326 310 NOP  <||@
  Comment 327 312 NOP  <||@
  Comment 328 314 NOP  <||@
  Comment 329 316 NOP  <||@
  Comment 330 318 r10|DWORD = LEA address: [r9|DWORD - 8] size: DWORD  <||@
  Comment 334 -1 rbx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 337 -1 r11|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 340 -1 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 343 320 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 348 block B19 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 348 334 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 352 336 NOP  <||@
  Comment 353 338 NOP  <||@
  Comment 354 340 NOP  <||@
  Comment 355 342 NOP  <||@
  Comment 356 344 NOP  <||@
  Comment 357 346 NOP  <||@
  Comment 358 348 NOP  <||@
  Comment 359 350 NOP  <||@
  Comment 360 352 NOP  <||@
  Comment 361 354 NOP  <||@
  Comment 362 356 NOP  <||@
  Comment 363 358 NOP  <||@
  Comment 364 360 NOP  <||@
  Comment 365 362 NOP  <||@
  Comment 366 364 NOP  <||@
  Comment 367 366 NOP  <||@
  Comment 368 368 NOP  <||@
  Comment 369 370 NOP  <||@
  Comment 370 372 NOP  <||@
  Comment 371 374 NOP  <||@
  Comment 372 376 NOP  <||@
  Comment 373 378 NOP  <||@
  Comment 374 380 NOP  <||@
  Comment 375 382 NOP  <||@
  Comment 376 384 NOP  <||@
  Comment 377 386 NOP  <||@
  Comment 378 388 NOP  <||@
  Comment 379 390 NOP  <||@
  Comment 380 392 NOP  <||@
  Comment 381 394 NOP  <||@
  Comment 382 396 NOP  <||@
  Comment 383 398 NOP  <||@
  Comment 384 400 NOP  <||@
  Comment 385 402 NOP  <||@
  Comment 386 404 NOP  <||@
  Comment 387 406 NOP  <||@
  Comment 388 408 NOP  <||@
  Comment 389 410 NOP  <||@
  Comment 390 412 NOP  <||@
  Comment 391 414 NOP  <||@
  Comment 392 416 NOP  <||@
  Comment 393 418 NOP  <||@
  Comment 394 420 NOP  <||@
  Comment 395 422 NOP  <||@
  Comment 396 424 NOP  <||@
  Comment 397 426 NOP  <||@
  Comment 398 428 NOP  <||@
  Comment 399 430 NOP  <||@
  Comment 400 432 NOP  <||@
  Comment 401 434 NOP  <||@
  Comment 402 436 NOP  <||@
  Comment 403 438 NOP  <||@
  Comment 404 440 NOP  <||@
  Comment 405 442 NOP  <||@
  Comment 406 444 NOP  <||@
  Comment 407 446 NOP  <||@
  Comment 408 448 NOP  <||@
  Comment 409 450 NOP  <||@
  Comment 410 452 NOP  <||@
  Comment 411 454 NOP  <||@
  Comment 412 456 NOP  <||@
  Comment 413 458 NOP  <||@
  Comment 414 460 NOP  <||@
  Comment 415 462 NOP  <||@
  Comment 416 464 NOP  <||@
  Comment 417 466 NOP  <||@
  Comment 418 468 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 424 470 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 430 472 rdi|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 435 474 rdx|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 440 476 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 445 478 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 450 480 rdi|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 454 482 rdx|DWORD = LEA address: [r8|DWORD + 2] size: DWORD  <||@
  Comment 458 484 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 463 486 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 468 488 rdi|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 472 490 rdx|DWORD = LEA address: [r8|DWORD + 3] size: DWORD  <||@
  Comment 476 492 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 481 494 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 486 496 rdi|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 490 498 rdx|DWORD = LEA address: [r8|DWORD + 4] size: DWORD  <||@
  Comment 494 500 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 499 502 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 504 504 rdi|DWORD = LEA address: [r11|DWORD + 5] size: DWORD  <||@
  Comment 508 506 rdx|DWORD = LEA address: [r8|DWORD + 5] size: DWORD  <||@
  Comment 512 508 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 517 510 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 522 512 rdi|DWORD = LEA address: [r11|DWORD + 6] size: DWORD  <||@
  Comment 526 514 rdx|DWORD = LEA address: [r8|DWORD + 6] size: DWORD  <||@
  Comment 530 516 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 535 518 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 540 520 rdi|DWORD = LEA address: [r11|DWORD + 7] size: DWORD  <||@
  Comment 544 522 rdx|DWORD = LEA address: [r8|DWORD + 7] size: DWORD  <||@
  Comment 548 524 rdi|DWORD = MOVZXB input: [rsi|QWORD[.] + rdi|DWORD * 1 + 16] size: DWORD  <||@
  Comment 553 526 MOV (x: [rcx|QWORD[.] + rdx|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 558 528 rbx|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD  <||@
  Comment 561 530 r8|DWORD = LEA address: [r8|DWORD + 8] size: DWORD  <||@
  Comment 565 532 r11|DWORD = LEA address: [r11|DWORD + 8] size: DWORD  <||@
  Comment 569 534 JUMP ~outgoingValues: [] destination: B19 -> B18  <||@
  Comment 569 block B18 loop 1 depth 1 header:178|LoopBegin  <||@
  Comment 569 322 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 569 324 NOP  <||@
  Comment 570 326 NOP  <||@
  Comment 571 328 NOP  <||@
  Comment 572 330 NOP  <||@
  Comment 573 332 CMPBRANCH (x: r10|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.7563663512231358 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 582 block B20 null  <||@
  Comment 582 536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 582 538 NOP  <||@
  Comment 583 540 NOP  <||@
  Comment 584 542 NOP  <||@
  Comment 585 544 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 590 block B22 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 590 558 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 560 NOP  <||@
  Comment 609 562 NOP  <||@
  Comment 610 564 NOP  <||@
  Comment 611 566 NOP  <||@
  Comment 612 568 NOP  <||@
  Comment 613 570 NOP  <||@
  Comment 614 572 NOP  <||@
  Comment 615 574 NOP  <||@
  Comment 616 576 r10|DWORD = MOVZXB input: [rsi|QWORD[.] + r11|DWORD * 1 + 16] size: DWORD  <||@
  Comment 622 578 MOV (x: [rcx|QWORD[.] + r8|DWORD * 2 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 628 580 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 630 582 r8|DWORD = INC value: r8|DWORD size: DWORD  <||@
  Comment 633 584 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 636 586 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 636 block B21 loop 2 depth 1 header:209|LoopBegin  <||@
  Comment 636 546 [] = LABEL alignment: 0 numbPhis: 3 label: ?  <||@
  Comment 636 548 NOP  <||@
  Comment 637 550 NOP  <||@
  Comment 638 552 NOP  <||@
  Comment 639 554 NOP  <||@
  Comment 640 556 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 645 block B23 null  <||@
  Comment 645 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 590 NOP  <||@
  Comment 646 592 NOP  <||@
  Comment 647 594 NOP  <||@
  Comment 648 596 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 648 block B24 null  <||@
  Comment 648 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 600 NOP  <||@
  Comment 649 602 NOP  <||@
  Comment 650 604 NOP  <||@
  Comment 651 606 NOP  <||@
  Comment 652 608 NOP  <||@
  Comment 653 610 NOP  <||@
  Comment 654 612 NOP  <||@
  Comment 655 614 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 664 POLL_RETURN_FAR  <||@
  Comment 678 block B3 null  <||@
  Comment 678 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 678 120 NOP  <||@
  Comment 679 122 NOP  <||@
  Comment 680 124 NOP  <||@
  Comment 681 126 JUMP ~outgoingValues: [] destination: B3 -> B7  <||@
  Comment 686 block B8 null  <||@
  Comment 686 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 196 NOP  <||@
  Comment 687 198 NOP  <||@
  Comment 688 200 NOP  <||@
  Comment 689 202 JUMP ~outgoingValues: [] destination: B8 -> B12  <||@
  Comment 694 block B1 null  <||@
  Comment 694 616 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 618 NOP  <||@
  Comment 695 620 NOP  <||@
  Comment 696 622 NOP  <||@
  Comment 697 624 JUMP ~outgoingValues: [] destination: B1 -> B24  <||@
  Comment 699 block B30 null  <||@
  Comment 699 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 628 NOP  <||@
  Comment 700 630 NOP  <||@
  Comment 701 632 NOP  <||@
  Comment 702 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 709 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 715 634 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 715 block B31 null  <||@
  Comment 715 686 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 715 688 NOP  <||@
  Comment 716 690 NOP  <||@
  Comment 717 692 NOP  <||@
  Comment 718 694 NOP  <||@
  Comment 719 696 NOP  <||@
  Comment 720 698 NOP  <||@
  Comment 721 700 NOP  <||@
  Comment 722 702 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 729 704 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 736 706 DEOPT info [bci:0]  <||@
  Comment 736 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 741 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 749 block B28 null  <||@
  Comment 749 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 668 NOP  <||@
  Comment 750 670 NOP  <||@
  Comment 751 672 NOP  <||@
  Comment 752 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 759 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 765 674 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 767 block B27 null  <||@
  Comment 767 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 767 658 NOP  <||@
  Comment 768 660 NOP  <||@
  Comment 769 662 NOP  <||@
  Comment 770 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 777 -1 r10|DWORD = MOVE input: int[-25371|0xffffffffffff9ce5]  <||@
  Comment 783 664 JUMP ~outgoingValues: [] destination: B27 -> B31  <||@
  Comment 785 block B26 null  <||@
  Comment 785 636 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 785 638 NOP  <||@
  Comment 786 640 NOP  <||@
  Comment 787 642 NOP  <||@
  Comment 788 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 795 -1 r10|DWORD = MOVE input: int[-16411|0xffffffffffffbfe5]  <||@
  Comment 801 644 JUMP ~outgoingValues: [] destination: B26 -> B31  <||@
  Comment 803 block B25 null  <||@
  Comment 803 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 803 648 NOP  <||@
  Comment 804 650 NOP  <||@
  Comment 805 652 NOP  <||@
  Comment 806 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 813 -1 r10|DWORD = MOVE input: int[-20251|0xffffffffffffb0e5]  <||@
  Comment 819 654 JUMP ~outgoingValues: [] destination: B25 -> B31  <||@
  Comment 821 block B29 null  <||@
  Comment 821 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 821 678 NOP  <||@
  Comment 822 680 NOP  <||@
  Comment 823 682 NOP  <||@
  Comment 824 -1 r11|QWORD = MOVE input: long[24|0x18]  <||@
  Comment 831 -1 r10|DWORD = MOVE input: int[-22811|0xffffffffffffa6e5]  <||@
  Comment 837 684 JUMP ~outgoingValues: [] destination: B29 -> B31  <||@
  Comment 844 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 869 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 902 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 932 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 937 [rcx:0, rsi:0]at java.lang.StringLatin1.inflate(StringLatin1.java:763) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3         |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|DWORD  |r9|DWORD  |-   <||@
  Comment 945 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 945 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 951 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 951 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
