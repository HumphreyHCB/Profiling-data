begin_compilation
  name " HotSpotCompilation-8300[java.io.ByteArrayOutputStream.write(byte[], int, int)]"
  method "HotSpotCompilation-8300[java.io.ByteArrayOutputStream.write(byte[], int, int)]"
  date 1724269754475
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i386 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i386  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.io.ByteArrayOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v209 ?8 ?8 j234 v422 j333 v347 v403 v404 ?76 ?76 ?177 v253 ?178 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?8 j293 v99 i46 i51 ?76 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?8 v103 j302 i47 v52 i17 ?76 i39 i106 i109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: BEFORE_BCI
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a392 i3 i4 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a392 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j292 ?8 v402 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i386 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-20747|0xffffffffffffaef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: j275 
=== Usages ===
i51 i46 i106 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v402 lastLocationAccess: - #next: j275  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j373 j374 j275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:197) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: j214 
=== Usages ===
j235 v259 v410 v411 
=== Predecessor ===
i386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:198) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j215 
=== Usages ===
v407 v253 j237 
=== Predecessor ===
j275 >@ <|@
instruction <@BeginLockScope|@jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:199) [bci: 24] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
i224 v229 v409 
=== Predecessor ===
j214 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j214 
index: - 
=== Succesors ===
=== Usages ===
v276 v277 v278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j214 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 2
stableDimension: 0
stamp: i64 [2]
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
x: j275 
y: j258 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j275 y: j258  <|@  <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
bci: 0
eliminated: false
lockDepth: 0
multipleEntry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?76 ?8 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@jdk.graal.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 1
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
sourceFile: ByteArrayOutputStream.java
sourceLine: 131
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 i3 i4 
monitorIds: v6 
=== Succesors ===
=== Usages ===
v253 v185 i388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 i3 i4 monitorIds: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v99 v101 v103 v225 v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 v196 v378 v220 v328 v380 v277 i332 v307 v314 v319 v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j233 j235 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 20]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 51]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j234 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 52]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v276 
=== Usages ===
v408 
=== Predecessor ===
v217 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:282) [bci: 64]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64 [-9223372036854775807 - 9223372036854775807] bits:x...x1
=== Inputs ===
x: j275 
y: j263 
=== Succesors ===
=== Usages ===
j237 v238 v276 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j275 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:286) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j235 
stateAfter: - 
=== Succesors ===
next: j237 
=== Usages ===
=== Predecessor ===
j234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j235 stateAfter: - #next: j237  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j234 
index: - 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j234 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:293) [bci: 107]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
lastLocationAccess: - 
expectedValue: j235 
newValue: j214 
stateAfter: - 
=== Succesors ===
next: v241 
=== Usages ===
v238 j243 
=== Predecessor ===
v276 >@ <|@
instruction <@ValueCompareAndSwap|@jdk.graal.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v408 lastLocationAccess: - expectedValue: j235 newValue: j214 stateAfter: - #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j235 
y: j237 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j235 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 130]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v239 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:295) [bci: 133]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:299) [bci: 152]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:316) [bci: 176]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
j243 
=== Predecessor ===
v240 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 188]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j237 
y: j242 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j237 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089]
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 206]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
x: j243 
y: j267 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j243 y: j267  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 212]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
j242 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 228]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j182 stateAfter: - #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:324) [bci: 250]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid j260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 31]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 37]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j260 
stateAfter: - 
=== Succesors ===
next: j279 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j260 stateAfter: - #next: j279  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j275 
index: - 
=== Succesors ===
=== Usages ===
i224 j279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_owner
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:241) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
v220 v229 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j279 
y: j182 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j279 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v221 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
j279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v221 #falseSuccessor: v222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 50]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i224 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
expectedValue: j182 
newValue: j215 
stateAfter: - 
=== Succesors ===
next: v228 
=== Usages ===
v225 
=== Predecessor ===
v221 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - expectedValue: j182 newValue: j215 stateAfter: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i224 
y: i48 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i224 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v227 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:254) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:250) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 115]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j215 
y: j279 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j215 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 121]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v230 #falseSuccessor: v231  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:258) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j280 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j275 
index: - 
=== Succesors ===
=== Usages ===
j280 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:259) [bci: 139]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
j233 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j280 
y: j263 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j280 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 160]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
value: j233 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
j280 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - value: j233 stateAfter: - #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v248 v249 v266 
=== Succesors ===
next: j282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v248 v249 v266 #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j215 
index: - 
=== Succesors ===
=== Usages ===
j282 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
j252 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j282 
y: j263 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j282 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
value: j252 
stateAfter: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - value: j252 stateAfter: - #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:265) [bci: 181]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:268) [bci: 197]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v250 v264 v265 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v250 v264 v265 #next: v253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorenter(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[ANY_LOCATION], transition=SAFEPOINT}
descriptorName: monitorenter
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:219) [bci: 142] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: a1 j214 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: a1 j214 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v256 
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v256 #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a387 v128 v207 v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: i388 
=== Usages ===
a91 v405 
=== Predecessor ===
v255 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: i388  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23819|0xffffffffffffa2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?8 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
i57 v125 v125 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?8 guard: - address: v405 lastLocationAccess: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i3 
y: i386 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i3 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i46 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i4 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163]
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i386 
y: i3 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i386 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i4 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: -39187
stableDimension: 0
stamp: i32 [-39187]
stampKind: i32
value: int[-39187|0xffffffffffff66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32 [-39187 - -38163] bits:1...10110xx1011101101
valueDescription: i32
=== Inputs ===
merge: v179 
values: i187 i190 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: i187 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v189 
=== Succesors ===
next: v185 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v189 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i183 
speculation: j188 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i183 speculation: j188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i389 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i389 i391 v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
i17 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 14]
stamp: i32
=== Inputs ===
x: i4 
y: i389 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i389  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:98) [bci: 8]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32
=== Inputs ===
x: i17 
y: i388 
=== Succesors ===
=== Usages ===
v59 v125 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i17 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 i368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i58 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
a77 ?177 v126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 1
sourceFile: ByteArrayOutputStream.java
sourceLine: 132
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 i3 i4 
monitorIds: v6 
=== Succesors ===
=== Usages ===
?74 ?177 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 i3 i4 monitorIds: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
profileData: PROFILED designatedSuccessorProbability: 0.9935750194916264
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v61 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 14]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i64 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i64  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i388 i57 i388 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i388 i57 i388  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
values: a1 a91 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76 values: a1 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
bci: 22
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?177 
=== Succesors ===
next: a67 
=== Usages ===
v126 
=== Predecessor ===
v60 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?177 #next: a67  <|@  <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a91 i64 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a91 i64  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
values: a1 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v126 
stateDuring: ?178 
=== Succesors ===
next: v207 
=== Usages ===
a77 a127 v209 
=== Predecessor ===
i64 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v126 stateDuring: ?178 #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
precise: true
stamp: void
=== Inputs ===
address: v404 
value: - 
stateBefore: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v404 value: - stateBefore: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a127 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a67 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.buf
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
value: a127 
stateAfter: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - value: a127 stateAfter: - #next: v209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
precise: false
stamp: void
=== Inputs ===
address: v404 
value: a67 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v404 value: a67 object: a1 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v72 
values: a91 a67 
=== Succesors ===
=== Usages ===
v406 j297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v72 values: a91 a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: i390 
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: i390  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: return
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 103
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
=== Succesors ===
=== Usages ===
v196 i390 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a77 
index: - 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a77 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25099|0xffffffffffff9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?74 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
i109 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?74 guard: - address: v406 lastLocationAccess: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i48 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
i390 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -40217
stableDimension: 0
stamp: i32 [-40217]
stampKind: i32
value: int[-40217|0xffffffffffff62e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:399) [bci: 33]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i391 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v164 
=== Usages ===
j298 i39 v101 v110 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i48 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i391 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
i391 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v162 #falseSuccessor: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -41241
stableDimension: 0
stamp: i32 [-41241]
stampKind: i32
value: int[-41241|0xffffffffffff5ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i48 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v166 #falseSuccessor: v167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -42265
stableDimension: 0
stamp: i32 [-42265]
stampKind: i32
value: int[-42265|0xffffffffffff5ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32
=== Inputs ===
x: i386 
y: i4 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i386 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i3 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i106 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -43289
stableDimension: 0
stamp: i32 [-43289]
stampKind: i32
value: int[-43289|0xffffffffffff56e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32
=== Inputs ===
x: i390 
y: i4 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i390 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i391 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i391  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -44313
stableDimension: 0
stamp: i32 [-44313]
stampKind: i32
value: int[-44313|0xffffffffffff52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32 [-44313 - -40217] bits:1...101xxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v191 
values: i198 i200 i202 i204 i206 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v191 values: i198 i200 i202 i204 i206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v199 v201 v203 v205 
=== Succesors ===
next: v196 
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v199 v201 v203 v205 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i194 
speculation: j182 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i194 speculation: j182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j297 
=== Usages ===
v412 
=== Predecessor ===
v175 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i64
=== Inputs ===
object: a77 
=== Succesors ===
next: v303 
=== Usages ===
v413 
=== Predecessor ===
j292 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a77 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: j293 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i391 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: j298 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: j298  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v412 v413 j302 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
j297 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v412 v413 j302 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:134) [bci: 38]
stamp: i32
=== Inputs ===
x: i4 
y: i391 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.count
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:134) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
value: i39 
stateAfter: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - value: i39 stateAfter: - #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
locations: [DisplacedMarkWord, ObjectMonitor::_owner, ObjectMonitor::_cxq, ObjectMonitor::_EntryList, ObjectMonitor::_recursions, ObjectMonitor::_succ, MarkWord, JavaThread::_held_monitor_count]
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j304 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:395) [bci: 6] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j305 
=== Usages ===
i332 v416 
=== Predecessor ===
v385 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:396) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
v414 i335 v347 
=== Predecessor ===
j304 >@ <|@
instruction <@CurrentLock|@jdk.graal.compiler.hotspot.nodes.CurrentLockNode>@ #next: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:397) [bci: 28] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
v307 i335 
=== Predecessor ===
j305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v414 lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j369 
y: j182 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j369 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid j359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
j369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:429) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
v353 
=== Predecessor ===
v309 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 61]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
x: j373 
y: j258 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j373 y: j258  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 67]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v312 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 80]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: i335 
=== Usages ===
v415 
=== Predecessor ===
v312 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
lastLocationAccess: - 
expectedValue: j305 
newValue: j369 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
i338 
=== Predecessor ===
j333 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v415 lastLocationAccess: - expectedValue: j305 newValue: j369 stateAfter: - #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
i335 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:517) [bci: 7]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: j375 
=== Usages ===
v417 v418 v419 v420 v421 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j375 v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:521) [bci: 48]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v314 j360 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v417 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j375 
y: j182 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j375 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 68]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
j375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:524) [bci: 71]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
displacement: 150
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_cxq
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:525) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v418 
lastLocationAccess: - 
=== Succesors ===
next: j377 
=== Usages ===
j318 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v418 lastLocationAccess: - #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
displacement: 142
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_EntryList
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:527) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
j318 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j376 
y: j377 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j376 y: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 128]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j182 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j318 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
i332 v378 v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 134]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v320 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 137]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barriersString: LOAD_STORE STORE_STORE
fence: STORE_RELEASE
location: ANY_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 140]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:533) [bci: 150]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - value: j182 stateAfter: - #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:538) [bci: 171]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
displacement: 158
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j379 j381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:539) [bci: 186]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
v324 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v421 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j182 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 205]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
j379 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v326 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:563) [bci: 314]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 208]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: j381 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - value: j182 stateAfter: - #next: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:544) [bci: 225]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
v328 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v421 lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 238]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j381 
y: j182 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j381 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 244]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
j381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v330 #falseSuccessor: v329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 265]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i332 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 279]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
expectedValue: j182 
newValue: j304 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
i368 
=== Predecessor ===
v330 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - expectedValue: j182 newValue: j304 stateAfter: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 293]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i332 
y: i58 
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i332 y: i58  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
i332 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v336 
values: i335 i368 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v336 values: i335 i368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v363 
=== Succesors ===
next: v344 
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v363 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i48 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i338 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v398 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 87] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v362 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v362 #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorexit(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=STACK_INSPECTABLE_LEAF}
descriptorName: monitorexit
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 93] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1 j305 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1 j305 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 79] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:548) [bci: 247]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 317]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j375 
y: j359 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j375 y: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 330]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
lastLocationAccess: - 
value: j360 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 lastLocationAccess: - value: j360 stateAfter: - #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v337 v339 v361 v364 
=== Succesors ===
next: j370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v337 v339 v361 v364 #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j304 
index: - 
=== Succesors ===
=== Usages ===
j370 v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
j346 
=== Predecessor ===
v393 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v416 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j370 
y: j359 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j370 y: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j370 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v416 lastLocationAccess: - value: j346 stateAfter: - #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v350 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v350 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@EndLockScope|@jdk.graal.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:135) [bci: 42]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i386 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i386  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.io.ByteArrayOutputStream
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v209 ?8 ?8 j234 v422 j333 v347 v403 v404 ?76 ?76 ?177 v253 ?178 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?8 j293 v99 i46 i51 ?76 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?8 v103 j302 i47 v52 i17 ?76 i39 i106 i109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: BEFORE_BCI
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a392 i3 i4 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a392 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
j292 ?8 v402 ?76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i386 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-20747|0xffffffffffffaef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v402 
lastLocationAccess: - 
=== Succesors ===
next: j275 
=== Usages ===
i51 i46 i106 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v402 lastLocationAccess: - #next: j275  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j373 j374 j275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:197) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: j214 
=== Usages ===
j235 v259 v410 v411 
=== Predecessor ===
i386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:198) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j215 
=== Usages ===
v407 v253 j237 
=== Predecessor ===
j275 >@ <|@
instruction <@BeginLockScope|@jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j215 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:199) [bci: 24] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
i224 v229 v409 
=== Predecessor ===
j214 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j214 
index: - 
=== Succesors ===
=== Usages ===
v276 v277 v278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j214 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 2
stableDimension: 0
stamp: i64 [2]
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
x: j275 
y: j258 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j275 y: j258  <|@  <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
bci: 0
eliminated: false
lockDepth: 0
multipleEntry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?76 ?8 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@jdk.graal.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?8 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 1
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
sourceFile: ByteArrayOutputStream.java
sourceLine: 131
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 i3 i4 
monitorIds: v6 
=== Succesors ===
=== Usages ===
v253 v185 i388 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 i3 i4 monitorIds: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 v99 v101 v103 v225 v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i224 v196 v378 v220 v328 v380 v277 i332 v307 v314 v319 v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j233 j235 j252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 20]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j215 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 51]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j234 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j234 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 52]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v276 
=== Usages ===
v408 
=== Predecessor ===
v217 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:282) [bci: 64]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64 [-9223372036854775807 - 9223372036854775807] bits:x...x1
=== Inputs ===
x: j275 
y: j263 
=== Succesors ===
=== Usages ===
j237 v238 v276 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j275 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:286) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j235 
stateAfter: - 
=== Succesors ===
next: j237 
=== Usages ===
=== Predecessor ===
j234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j235 stateAfter: - #next: j237  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j234 
index: - 
=== Succesors ===
=== Usages ===
j237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j234 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j237 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:293) [bci: 107]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
lastLocationAccess: - 
expectedValue: j235 
newValue: j214 
stateAfter: - 
=== Succesors ===
next: v241 
=== Usages ===
v238 j243 
=== Predecessor ===
v276 >@ <|@
instruction <@ValueCompareAndSwap|@jdk.graal.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v408 lastLocationAccess: - expectedValue: j235 newValue: j214 stateAfter: - #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j235 
y: j237 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j235 y: j237  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 130]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v238 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
j237 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v238 #trueSuccessor: v239 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:295) [bci: 133]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:299) [bci: 152]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:316) [bci: 176]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
j243 
=== Predecessor ===
v240 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j243 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 188]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j237 
y: j242 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j237 y: j242  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089]
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 206]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
x: j243 
y: j267 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j243 y: j267  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 212]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
j242 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v244 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 228]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j182 stateAfter: - #next: v249  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:324) [bci: 250]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid j260 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 31]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 37]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
value: j260 
stateAfter: - 
=== Succesors ===
next: j279 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - value: j260 stateAfter: - #next: j279  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result [v5|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j275 
index: - 
=== Succesors ===
=== Usages ===
i224 j279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j279 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_owner
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:241) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
=== Succesors ===
next: v223 
=== Usages ===
v220 v229 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - #next: v223  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j279 
y: j182 
=== Succesors ===
=== Usages ===
v223 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j279 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v221 
falseSuccessor: v222 
=== Usages ===
=== Predecessor ===
j279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v221 #falseSuccessor: v222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 50]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: i224 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
expectedValue: j182 
newValue: j215 
stateAfter: - 
=== Succesors ===
next: v228 
=== Usages ===
v225 
=== Predecessor ===
v221 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - expectedValue: j182 newValue: j215 stateAfter: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i224 
y: i48 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i224 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v227 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
i224 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v227 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:254) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v227 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:250) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v226 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v223 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 115]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j215 
y: j279 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j215 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 121]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v231 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v230 #falseSuccessor: v231  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:258) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j280 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j280  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
result [v5|QWORD + 134] <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j275 
index: - 
=== Succesors ===
=== Usages ===
j280 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j280 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:259) [bci: 139]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
j233 
=== Predecessor ===
v230 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid j233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j280 
y: j263 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j280 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 160]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
value: j233 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
j280 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - value: j233 stateAfter: - #next: v266  <|@  <|@
f <@*|@fixed>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v247 v248 v249 v266 
=== Succesors ===
next: j282 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v247 v248 v249 v266 #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result [r15|QWORD + 1360] <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j215 
index: - 
=== Succesors ===
=== Usages ===
j282 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j215 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
=== Succesors ===
next: v283 
=== Usages ===
j252 
=== Predecessor ===
v269 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: i64
=== Inputs ===
x: j282 
y: j263 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j282 y: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
value: j252 
stateAfter: - 
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - value: j252 stateAfter: - #next: v254  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:265) [bci: 181]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:268) [bci: 197]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v250 v264 v265 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v250 v264 v265 #next: v253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorenter(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[ANY_LOCATION], transition=SAFEPOINT}
descriptorName: monitorenter
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:219) [bci: 142] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?8 
arguments: a1 j214 
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?8 arguments: a1 j214 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v254 v256 
=== Succesors ===
next: a387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v254 v256 #next: a387  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a387 v128 v207 v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a387 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
=== Succesors ===
next: i388 
=== Usages ===
a91 v405 
=== Predecessor ===
v255 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - #next: i388  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result [v11|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a387 
=== Succesors ===
=== Usages ===
i388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i388 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-23819|0xffffffffffffa2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?8 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
i57 v125 v125 
=== Predecessor ===
a387 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?8 guard: - address: v405 lastLocationAccess: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 2]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i3 
y: i386 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i3 y: i386  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 4]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i4 
y: i46 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i4 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i48 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 5]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[-38163|0xffffffffffff6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163]
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v150 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 8]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 11]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: i32
=== Inputs ===
x: i386 
y: i3 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i386 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i4 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:396) [bci: 12]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@~|@floating>@ <|@
tid i190 <|@
result int[-39187|0xffffffffffff66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: -39187
stableDimension: 0
stamp: i32 [-39187]
stampKind: i32
value: int[-39187|0xffffffffffff66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32 [-39187 - -38163] bits:1...10110xx1011101101
valueDescription: i32
=== Inputs ===
merge: v179 
values: i187 i190 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: i187 i190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v186 v189 
=== Succesors ===
next: v185 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v186 v189 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateBefore: ?8 
actionAndReason: i183 
speculation: j188 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?8 actionAndReason: i183 speculation: j188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromIndexSize(Preconditions.java:398) [bci: 23]
at java.util.Objects.checkFromIndexSize(Objects.java:437) [bci: 4]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i389 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i389  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i389 i391 v124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v62 
=== Usages ===
i17 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 14]
stamp: i32
=== Inputs ===
x: i4 
y: i389 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i389  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:98) [bci: 8]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: i32
=== Inputs ===
x: i17 
y: i388 
=== Succesors ===
=== Usages ===
v59 v125 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i17 y: i388  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 i368 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i58 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:97) [bci: 1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a387 
=== Succesors ===
=== Usages ===
a77 ?177 v126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a387  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.write(byte[], int, int)>
localsSize: 4
locksSize: 1
sourceFile: ByteArrayOutputStream.java
sourceLine: 132
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 i3 i4 
monitorIds: v6 
=== Succesors ===
=== Usages ===
?74 ?177 ?178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 i3 i4 monitorIds: v6  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:99) [bci: 11]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
profileData: PROFILED designatedSuccessorProbability: 0.9935750194916264
stamp: void
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v61 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v61 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 14]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i64 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i64  <|@  <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
referencedType: [null]
returnStamp: i32
signature: [HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArraysSupport.newLength(int, int, int)>
=== Inputs ===
arguments: i388 i57 i388 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i388 i57 i388  <|@  <|@
tid ?177 <|@
d <@d|@=== Debug Properties ===
bci: 22
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
values: a1 a91 
=== Succesors ===
=== Usages ===
i64 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76 values: a1 a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i64 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 22
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
polymorphic: false
stamp: i32
targetMethod: Direct#ArraysSupport.newLength
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v125 
stateDuring: ?177 
=== Succesors ===
next: a67 
=== Usages ===
v126 
=== Predecessor ===
v60 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v125 stateDuring: ?177 #next: a67  <|@  <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a91 i64 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a91 i64  <|@  <|@
tid ?178 <|@
d <@d|@=== Debug Properties ===
bci: 25
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 100
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
values: a1 
=== Succesors ===
=== Usages ===
a67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a67 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 25
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v126 
stateDuring: ?178 
=== Succesors ===
next: v207 
=== Usages ===
a77 a127 v209 
=== Predecessor ===
i64 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v126 stateDuring: ?178 #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
precise: true
stamp: void
=== Inputs ===
address: v404 
value: - 
stateBefore: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
a67 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v404 value: - stateBefore: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a127 <|@
result v24|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a67 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.buf
location: ByteArrayOutputStream.buf
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
value: a127 
stateAfter: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - value: a127 stateAfter: - #next: v209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 28]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
precise: false
stamp: void
=== Inputs ===
address: v404 
value: a67 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v404 value: a67 object: a1 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a77 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v72 
values: a91 a67 
=== Succesors ===
=== Usages ===
v406 j297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v72 values: a91 a67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: i390 
=== Usages ===
a77 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: i390  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 31
bytecode: return
code: ResolvedJavaMethodBytecode<ByteArrayOutputStream.ensureCapacity(int)>
localsSize: 4
locksSize: 0
sourceFile: ByteArrayOutputStream.java
sourceLine: 103
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?76 
=== Succesors ===
=== Usages ===
v196 i390 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?76  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
result [v27|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a77 
index: - 
=== Succesors ===
=== Usages ===
i390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a77 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i390 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-25099|0xffffffffffff9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?74 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
i109 
=== Predecessor ===
v72 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?74 guard: - address: v406 lastLocationAccess: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i48 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
i390 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v158 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[-40217|0xffffffffffff62e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -40217
stableDimension: 0
stamp: i32 [-40217]
stampKind: i32
value: int[-40217|0xffffffffffff62e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:399) [bci: 33]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i391 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i391 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
=== Succesors ===
next: v164 
=== Usages ===
j298 i39 v101 v110 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i48 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i391 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
i391 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v162 #falseSuccessor: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result int[-41241|0xffffffffffff5ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -41241
stableDimension: 0
stamp: i32 [-41241]
stampKind: i32
value: int[-41241|0xffffffffffff5ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i48 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v166 #falseSuccessor: v167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result int[-42265|0xffffffffffff5ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -42265
stableDimension: 0
stamp: i32 [-42265]
stampKind: i32
value: int[-42265|0xffffffffffff5ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32
=== Inputs ===
x: i386 
y: i4 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i386 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i106 
y: i3 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i106 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v170 
falseSuccessor: v171 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v170 #falseSuccessor: v171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result int[-43289|0xffffffffffff56e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -43289
stableDimension: 0
stamp: i32 [-43289]
stampKind: i32
value: int[-43289|0xffffffffffff56e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v170 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32
=== Inputs ===
x: i390 
y: i4 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i390 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i109 
y: i391 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i109 y: i391  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v174 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v174 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result int[-44313|0xffffffffffff52e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
rawvalue: -44313
stableDimension: 0
stamp: i32 [-44313]
stampKind: i32
value: int[-44313|0xffffffffffff52e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
v174 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i194 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i32 [-44313 - -40217] bits:1...101xxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v191 
values: i198 i200 i202 i204 i206 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v191 values: i198 i200 i202 i204 i206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v199 v201 v203 v205 
=== Succesors ===
next: v196 
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v199 v201 v203 v205 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i194 
speculation: j182 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i194 speculation: j182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: j297 
=== Usages ===
v412 
=== Predecessor ===
v175 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: j297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: i64
=== Inputs ===
object: a77 
=== Succesors ===
next: v303 
=== Usages ===
v413 
=== Predecessor ===
j292 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a77 #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
result [v33|QWORD[*] + v35|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: j293 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: j293  <|@  <|@
f <@~|@floating>@ <|@
tid j298 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i391 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i391  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
result [v34|QWORD[*] + v29|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: j298 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: j298  <|@  <|@
f <@~|@floating>@ <|@
tid j302 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:133) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v412 v413 j302 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
j297 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v412 v413 j302 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:134) [bci: 38]
stamp: i32
=== Inputs ===
x: i4 
y: i391 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i4 y: i391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ByteArrayOutputStream.count
location: ByteArrayOutputStream.count
memoryOrder: PLAIN
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:134) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
value: i39 
stateAfter: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - value: i39 stateAfter: - #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
locations: [DisplacedMarkWord, ObjectMonitor::_owner, ObjectMonitor::_cxq, ObjectMonitor::_EntryList, ObjectMonitor::_recursions, ObjectMonitor::_succ, MarkWord, JavaThread::_held_monitor_count]
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j304 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:395) [bci: 6] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j305 
=== Usages ===
i332 v416 
=== Predecessor ===
v385 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j305 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:396) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
v414 i335 v347 
=== Predecessor ===
j304 >@ <|@
instruction <@CurrentLock|@jdk.graal.compiler.hotspot.nodes.CurrentLockNode>@ #next: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
result [v38|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j305 
index: - 
=== Succesors ===
=== Usages ===
j369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:397) [bci: 28] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
v307 i335 
=== Predecessor ===
j305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v414 lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j369 
y: j182 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j369 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid j359 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j346 j360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
j369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:429) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
v353 
=== Predecessor ===
v309 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 61]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
x: j373 
y: j258 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j373 y: j258  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 67]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v353 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v353 #trueSuccessor: v312 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 80]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: i335 
=== Usages ===
v415 
=== Predecessor ===
v312 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
lastLocationAccess: - 
expectedValue: j305 
newValue: j369 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
i338 
=== Predecessor ===
j333 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v415 lastLocationAccess: - expectedValue: j305 newValue: j369 stateAfter: - #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
i335 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j374 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j374 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:517) [bci: 7]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
lastLocationAccess: - 
=== Succesors ===
next: j375 
=== Usages ===
v417 v418 v419 v420 v421 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 lastLocationAccess: - #next: j375  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result [v42|QWORD + 134] <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j375 v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:521) [bci: 48]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v314 j360 
=== Predecessor ===
j374 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v417 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j375 
y: j182 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j375 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 68]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v314 
=== Succesors ===
trueSuccessor: v315 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
j375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v314 #trueSuccessor: v315 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:524) [bci: 71]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j376  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result [v42|QWORD + 150] <|@
d <@d|@=== Debug Properties ===
displacement: 150
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_cxq
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:525) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v418 
lastLocationAccess: - 
=== Succesors ===
next: j377 
=== Usages ===
j318 
=== Predecessor ===
v315 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v418 lastLocationAccess: - #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result [v42|QWORD + 142] <|@
d <@d|@=== Debug Properties ===
displacement: 142
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_EntryList
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:527) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
lastLocationAccess: - 
=== Succesors ===
next: v322 
=== Usages ===
j318 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 lastLocationAccess: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j376 
y: j377 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j376 y: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 128]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j182 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j318 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
result [v42|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
i332 v378 v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 134]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v320 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 137]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barriersString: LOAD_STORE STORE_STORE
fence: STORE_RELEASE
location: ANY_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 140]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:533) [bci: 150]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - value: j182 stateAfter: - #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:538) [bci: 171]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result [v42|QWORD + 158] <|@
d <@d|@=== Debug Properties ===
displacement: 158
stamp: void*
stride: S1
=== Inputs ===
base: j374 
index: - 
=== Succesors ===
=== Usages ===
j379 j381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:539) [bci: 186]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
lastLocationAccess: - 
=== Succesors ===
next: v327 
=== Usages ===
v324 
=== Predecessor ===
v321 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v421 lastLocationAccess: - #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j379 
y: j182 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j379 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 205]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v324 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
j379 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v324 #trueSuccessor: v326 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:563) [bci: 314]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 208]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
value: j182 
stateAfter: - 
=== Succesors ===
next: j381 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - value: j182 stateAfter: - #next: j381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:544) [bci: 225]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
lastLocationAccess: - 
=== Succesors ===
next: v331 
=== Usages ===
v328 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v421 lastLocationAccess: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 238]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j381 
y: j182 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j381 y: j182  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 244]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
j381 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v330 #falseSuccessor: v329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 265]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i332 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i332 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 279]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
lastLocationAccess: - 
expectedValue: j182 
newValue: j304 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
i368 
=== Predecessor ===
v330 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v420 lastLocationAccess: - expectedValue: j182 newValue: j304 stateAfter: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 293]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i332 
y: i58 
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i332 y: i58  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
i332 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i338 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v336 
values: i335 i368 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v336 values: i335 i368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v340 v363 
=== Succesors ===
next: v344 
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v340 v363 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i48 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i338 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v398 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v398 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 87] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v362 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v362 #next: v347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorexit(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=STACK_INSPECTABLE_LEAF}
descriptorName: monitorexit
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 93] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1 j305 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1 j305 #next: v350  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 79] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:548) [bci: 247]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v364  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 317]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j375 
y: j359 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j375 y: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 330]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
lastLocationAccess: - 
value: j360 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 lastLocationAccess: - value: j360 stateAfter: - #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v395 v337 v339 v361 v364 
=== Succesors ===
next: j370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v395 v337 v339 v361 v364 #next: j370  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
result [r15|QWORD + 1360] <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j304 
index: - 
=== Succesors ===
=== Usages ===
j370 v371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j370 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
lastLocationAccess: - 
=== Succesors ===
next: v371 
=== Usages ===
j346 
=== Predecessor ===
v393 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v416 lastLocationAccess: - #next: v371  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: i64
=== Inputs ===
x: j370 
y: j359 
=== Succesors ===
=== Usages ===
v371 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j370 y: j359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j370 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v416 lastLocationAccess: - value: j346 stateAfter: - #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v350 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v350 #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -3]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@EndLockScope|@jdk.graal.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:135) [bci: 42]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[82, 86[[330, 331[[382, 385[[528, 531[[720, 722[[728, 730[[886, 889[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 38[[330, 331[[718, 721[[728, 729[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v36|q [0, 36[[328, 331[[464, 466[[716, 721[[726, 729[[938, 940[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 34[[326, 331[[462, 466[[714, 721[[724, 729[[936, 940[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[324, 331[[720, 721[[728, 729[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 40[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[[940, 941[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [34, 402[[436, 462[[488, 782[[796, 944[[962, 972[[982, 1063[[1064, 1095[34 MustHaveRegister 44 MustHaveRegister 84 MustHaveRegister 132 MustHaveRegister 176 MustHaveRegister 222 MustHaveRegister 334 MustHaveRegister 354 MustHaveRegister 384 MustHaveRegister 462 ShouldHaveRegister 732 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 756 MustHaveRegister 936 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [36, 316[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1095[36 MustHaveRegister 42 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [38, 320[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1095[38 MustHaveRegister 136 ShouldHaveRegister 154 ShouldHaveRegister 208 MustHaveRegister 252 MustHaveRegister 320 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [40, 332[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1095[40 MustHaveRegister 138 ShouldHaveRegister 156 MustHaveRegister 176 MustHaveRegister 236 MustHaveRegister 250 ShouldHaveRegister 266 ShouldHaveRegister 322 ShouldHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [42, 250[[488, 742[[796, 828[[896, 944[42 MustHaveRegister 136 ShouldHaveRegister 154 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [44, 78[[488, 530[[796, 808[[896, 906[44 MustHaveRegister 48 MustHaveRegister 78 MustHaveRegister 504 MustHaveRegister 530 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [46, 90[[488, 534[[544, 570[[796, 828[[910, 938[46 MustHaveRegister 80 MustHaveRegister 84 MustHaveRegister 502 MustHaveRegister 570 MustHaveRegister 938 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v5|q [78, 88[78 MustHaveRegister 80 MustHaveRegister 82 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q rax|q [86, 90[[544, 556[86 MustHaveRegister 88 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [504, 508[[796, 806[504 MustHaveRegister 506 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [132, 180[132 MustHaveRegister 134 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [134, 184[[574, 718[134 MustHaveRegister 178 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v2|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v3|d [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v4|d [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [1074, 1090[1090 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v3|d [176, 178[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [178, 184[[574, 716[178 MustHaveRegister 182 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v11|d [180, 193[[574, 724[180 MustHaveRegister 192 ShouldHaveRegister 724 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d rax|q [722, 726[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q rax|q [730, 741[730 MustHaveRegister 734 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[v23|q]" v23|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[v24|d]" v24|d v21|q [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[v26|q]" v26|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v27|q QWORD "[v27|q]" v27|q v19|q [194, 318[206 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [206, 266[206 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [222, 332[222 MustHaveRegister 224 MustHaveRegister 268 MustHaveRegister 326 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v4|d [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v28|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [1042, 1058[1058 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v1|q [316, 324[316 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v27|q [318, 326[318 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [320, 324[320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [322, 328[322 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v3|d [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [336, 402[[436, 464[[742, 782[[828, 896[[962, 972[336 MustHaveRegister 338 MustHaveRegister 382 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [338, 384[338 MustHaveRegister 340 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v48|d [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [756, 792[[828, 888[[944, 958[756 MustHaveRegister 758 MustHaveRegister 776 MustHaveRegister 778 MustHaveRegister 792 MustHaveRegister 838 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 888 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [758, 762[[944, 956[758 MustHaveRegister 760 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v46|d [892, 895[892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v41|d [390, 400[400 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v43|q [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[82, 86[[330, 331[[382, 385[[528, 531[[720, 722[[728, 730[[886, 889[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 38[[330, 331[[718, 721[[728, 729[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v36|q [0, 36[[328, 331[[464, 466[[716, 721[[726, 729[[938, 940[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 34[[326, 331[[462, 466[[714, 721[[724, 729[[936, 940[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[324, 331[[720, 721[[728, 729[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 40[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[[940, 941[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 270[34 MustHaveRegister 44 MustHaveRegister 84 MustHaveRegister 132 MustHaveRegister 176 MustHaveRegister 222 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [36, 316[[488, 574[36 MustHaveRegister 42 MustHaveRegister 316 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 320[[488, 574[38 MustHaveRegister 136 ShouldHaveRegister 154 ShouldHaveRegister 208 MustHaveRegister 252 MustHaveRegister 320 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 329[40 MustHaveRegister 138 ShouldHaveRegister 156 MustHaveRegister 176 MustHaveRegister 236 MustHaveRegister 250 ShouldHaveRegister 266 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 250[[488, 574[42 MustHaveRegister 136 ShouldHaveRegister 154 MustHaveRegister 250 MustHaveRegister  "OneSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [44, 78[[488, 530[[796, 808[[896, 906[44 MustHaveRegister 48 MustHaveRegister 78 MustHaveRegister 504 MustHaveRegister 530 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [46, 90[[488, 534[[544, 570[[796, 828[[910, 938[46 MustHaveRegister 80 MustHaveRegister 84 MustHaveRegister 502 MustHaveRegister 570 MustHaveRegister 938 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q v5|q [78, 88[78 MustHaveRegister 80 MustHaveRegister 82 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [86, 90[[544, 556[86 MustHaveRegister 88 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [504, 508[[796, 806[504 MustHaveRegister 506 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [132, 180[132 MustHaveRegister 134 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [134, 184[[574, 718[134 MustHaveRegister 178 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d v2|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d v3|d [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v4|d [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [1074, 1090[1090 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d v3|d [176, 178[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d v17|d [178, 184[[574, 716[178 MustHaveRegister 182 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v11|d [180, 193[180 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|q [722, 726[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [730, 741[730 MustHaveRegister 734 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rdx|q]" v23|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[rsi|d]" v24|d v21|q [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rdx|q]" v26|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v27|q QWORD "[rdi|q]" v27|q v19|q [194, 318[206 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [206, 266[206 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r9|d]" v29|d -1 [222, 329[222 MustHaveRegister 224 MustHaveRegister 268 MustHaveRegister 326 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[r10|d]" v30|d v4|d [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v28|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1042, 1058[1058 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [316, 324[316 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v27|q [318, 326[318 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [320, 324[320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r11|q]" v36|q -1 [322, 328[322 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v3|d [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q -1 [336, 402[[436, 464[[742, 782[[828, 896[[962, 972[336 MustHaveRegister 338 MustHaveRegister 382 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [338, 384[338 MustHaveRegister 340 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d v48|d [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [756, 792[[828, 888[[944, 958[756 MustHaveRegister 758 MustHaveRegister 776 MustHaveRegister 778 MustHaveRegister 792 MustHaveRegister 838 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 888 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q -1 [758, 762[[944, 956[758 MustHaveRegister 760 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d v46|d [892, 895[892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdx|d]" v48|d v41|d [390, 400[400 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r8|q]" v49|q v43|q [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:3|q]" v0|q v0|q [270, 325[ "SpillInDominator"
  v51|q QWORD "[vstack:8|q]" v1|q v1|q [574, 715[ "OneSpillStore"
  v52|d DWORD "[vstack:5|d]" v2|d v2|d [574, 717[ "OneSpillStore"
  v53|d DWORD "[vstack:2|d]" v3|d v3|d [329, 332[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[332 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:9|d]" v4|d v4|d [574, 719[ "OneSpillStore"
  v55|q QWORD "[vstack:6|q]" v19|q v19|q [574, 719[ "OneSpillStore"
  v56|d DWORD "[vstack:1|d]" v29|d v29|d [329, 332[332 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v0|q v0|q [325, 329[ "SpillInDominator"
  v58|q QWORD "[vstack:3|q]" v0|q v0|q [329, 333[ "SpillInDominator"
  v59|d DWORD "[r8|d]" v3|d v3|d [1074, 1095[ "OneSpillStore"
  v60|q QWORD "[rsi|q]" v0|q v0|q [333, 402[[436, 462[[488, 574[334 MustHaveRegister 354 MustHaveRegister 384 MustHaveRegister 462 ShouldHaveRegister  "SpillInDominator"
  v61|q QWORD "[vstack:3|q]" v0|q v0|q [574, 713[ "SpillInDominator"
  v62|q QWORD "[vstack:6|q]" v19|q v19|q [719, 724[724 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[vstack:3|q]" v0|q v0|q [713, 719[ "SpillInDominator"
  v64|d DWORD "[vstack:9|d]" v4|d v4|d [719, 742[[796, 828[[896, 944[ "OneSpillStore"
  v65|d DWORD "[vstack:5|d]" v2|d v2|d [717, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v66|q QWORD "[vstack:8|q]" v1|q v1|q [715, 719[ "OneSpillStore"
  v67|q QWORD "[vstack:3|q]" v0|q v0|q [719, 731[ "SpillInDominator"
  v68|q QWORD "[vstack:8|q]" v1|q v1|q [719, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v69|d DWORD "[r11|d]" v2|d v2|d [1074, 1095[ "OneSpillStore"
  v70|q QWORD "[rcx|q]" v0|q v0|q [731, 782[[796, 944[[962, 972[[982, 1063[[1064, 1095[732 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 756 MustHaveRegister 936 ShouldHaveRegister  "SpillInDominator"
  v71|q QWORD "[rdx|q]" v1|q v1|q [1074, 1095[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = STACKMOVE (input: v57|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = STACKMOVE (input: v52|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v54|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[82, 86[[330, 331[[382, 385[[528, 531[[720, 722[[728, 730[[886, 889[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 38[[330, 331[[718, 721[[728, 729[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v36|q [0, 36[[328, 331[[464, 466[[716, 721[[726, 729[[938, 940[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 34[[326, 331[[462, 466[[714, 721[[724, 729[[936, 940[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[324, 331[[720, 721[[728, 729[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 40[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[[940, 941[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 270[34 MustHaveRegister 44 MustHaveRegister 84 MustHaveRegister 132 MustHaveRegister 176 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [36, 316[[488, 574[36 MustHaveRegister 42 MustHaveRegister 316 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 320[[488, 574[38 MustHaveRegister 136 ShouldHaveRegister 154 ShouldHaveRegister 208 MustHaveRegister 252 MustHaveRegister 320 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 329[40 MustHaveRegister 138 ShouldHaveRegister 156 MustHaveRegister 176 MustHaveRegister 236 MustHaveRegister 250 ShouldHaveRegister 266 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 250[[488, 574[42 MustHaveRegister 136 ShouldHaveRegister 154 MustHaveRegister 250 MustHaveRegister  "OneSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [44, 78[[488, 530[[796, 808[[896, 906[44 MustHaveRegister 48 MustHaveRegister 78 MustHaveRegister 504 MustHaveRegister 530 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [46, 90[[488, 534[[544, 570[[796, 828[[910, 938[46 MustHaveRegister 80 MustHaveRegister 84 MustHaveRegister 502 MustHaveRegister 570 MustHaveRegister 938 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q v5|q [78, 88[78 MustHaveRegister 80 MustHaveRegister 82 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [86, 90[[544, 556[86 MustHaveRegister 88 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [504, 508[[796, 806[504 MustHaveRegister 506 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [132, 180[132 MustHaveRegister 134 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [134, 184[[574, 718[134 MustHaveRegister 178 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d v2|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d v3|d [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v4|d [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [1074, 1090[1090 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d v3|d [176, 178[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d v17|d [178, 184[[574, 716[178 MustHaveRegister 182 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v11|d [180, 193[180 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|q [722, 726[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [730, 741[730 MustHaveRegister 734 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rdx|q]" v23|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[rsi|d]" v24|d v21|q [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rdx|q]" v26|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v27|q QWORD "[rdi|q]" v27|q v19|q [194, 318[206 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [206, 266[206 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r9|d]" v29|d -1 [222, 329[222 MustHaveRegister 224 MustHaveRegister 268 MustHaveRegister 326 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[r10|d]" v30|d v4|d [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v28|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1042, 1058[1058 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [316, 324[316 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v27|q [318, 326[318 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [320, 324[320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r11|q]" v36|q -1 [322, 328[322 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v3|d [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q -1 [336, 402[[436, 464[[742, 782[[828, 896[[962, 972[336 MustHaveRegister 338 MustHaveRegister 382 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [338, 384[338 MustHaveRegister 340 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d v48|d [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [756, 792[[828, 888[[944, 958[756 MustHaveRegister 758 MustHaveRegister 776 MustHaveRegister 778 MustHaveRegister 792 MustHaveRegister 838 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 888 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q -1 [758, 762[[944, 956[758 MustHaveRegister 760 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d v46|d [892, 895[892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdx|d]" v48|d v41|d [390, 400[400 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r8|q]" v49|q v43|q [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:3|q]" v0|q v0|q [270, 325[ "StoreAtDefinition"
  v51|q QWORD "[vstack:8|q]" v1|q v1|q [574, 715[ "OneSpillStore"
  v52|d DWORD "[vstack:5|d]" v2|d v2|d [574, 717[ "OneSpillStore"
  v53|d DWORD "[vstack:2|d]" v3|d v3|d [329, 332[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[332 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:9|d]" v4|d v4|d [574, 719[ "OneSpillStore"
  v55|q QWORD "[vstack:6|q]" v19|q v19|q [574, 719[ "OneSpillStore"
  v56|d DWORD "[vstack:1|d]" v29|d v29|d [329, 332[332 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v0|q v0|q [325, 329[ "StoreAtDefinition"
  v58|q QWORD "[vstack:3|q]" v0|q v0|q [329, 333[ "StoreAtDefinition"
  v59|d DWORD "[r8|d]" v3|d v3|d [1074, 1095[ "OneSpillStore"
  v60|q QWORD "[rsi|q]" v0|q v0|q [333, 402[[436, 462[[488, 574[334 MustHaveRegister 354 MustHaveRegister 384 MustHaveRegister 462 ShouldHaveRegister  "StoreAtDefinition"
  v61|q QWORD "[vstack:3|q]" v0|q v0|q [574, 713[ "StoreAtDefinition"
  v62|q QWORD "[vstack:6|q]" v19|q v19|q [719, 724[724 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[vstack:3|q]" v0|q v0|q [713, 719[ "StoreAtDefinition"
  v64|d DWORD "[vstack:9|d]" v4|d v4|d [719, 742[[796, 828[[896, 944[ "OneSpillStore"
  v65|d DWORD "[vstack:5|d]" v2|d v2|d [717, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v66|q QWORD "[vstack:8|q]" v1|q v1|q [715, 719[ "OneSpillStore"
  v67|q QWORD "[vstack:3|q]" v0|q v0|q [719, 731[ "StoreAtDefinition"
  v68|q QWORD "[vstack:8|q]" v1|q v1|q [719, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v69|d DWORD "[r11|d]" v2|d v2|d [1074, 1095[ "OneSpillStore"
  v70|q QWORD "[rcx|q]" v0|q v0|q [731, 782[[796, 944[[962, 972[[982, 1063[[1064, 1095[732 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 756 MustHaveRegister 936 ShouldHaveRegister  "StoreAtDefinition"
  v71|q QWORD "[rdx|q]" v1|q v1|q [1074, 1095[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [v19|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = STACKMOVE (input: v57|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [v41|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = STACKMOVE (input: v52|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v54|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v47|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [int[-41241|0xffffffffffff5ee7]] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [int[-43289|0xffffffffffff56e7]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [int[-38163|0xffffffffffff6aed]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-42265|0xffffffffffff5ae7]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44313|0xffffffffffff52e7]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [int[-40217|0xffffffffffff62e7]] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [int[-39187|0xffffffffffff66ed]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v7|q [0, 1[[82, 86[[330, 331[[382, 385[[528, 531[[720, 722[[728, 730[[886, 889[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 38[[330, 331[[718, 721[[728, 729[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v36|q [0, 36[[328, 331[[464, 466[[716, 721[[726, 729[[938, 940[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 34[[326, 331[[462, 466[[714, 721[[724, 729[[936, 940[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[324, 331[[720, 721[[728, 729[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 40[[330, 331[[720, 721[[728, 729[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[[940, 941[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[330, 331[[720, 721[[728, 729[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [34, 270[34 MustHaveRegister 44 MustHaveRegister 84 MustHaveRegister 132 MustHaveRegister 176 MustHaveRegister 222 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [36, 316[[488, 574[36 MustHaveRegister 42 MustHaveRegister 316 ShouldHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 320[[488, 574[38 MustHaveRegister 136 ShouldHaveRegister 154 ShouldHaveRegister 208 MustHaveRegister 252 MustHaveRegister 320 ShouldHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 329[40 MustHaveRegister 138 ShouldHaveRegister 156 MustHaveRegister 176 MustHaveRegister 236 MustHaveRegister 250 ShouldHaveRegister 266 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 250[[488, 574[42 MustHaveRegister 136 ShouldHaveRegister 154 MustHaveRegister 250 MustHaveRegister  "OneSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [44, 78[[488, 530[[796, 808[[896, 906[44 MustHaveRegister 48 MustHaveRegister 78 MustHaveRegister 504 MustHaveRegister 530 MustHaveRegister 906 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [46, 90[[488, 534[[544, 570[[796, 828[[910, 938[46 MustHaveRegister 80 MustHaveRegister 84 MustHaveRegister 502 MustHaveRegister 570 MustHaveRegister 938 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q v5|q [78, 88[78 MustHaveRegister 80 MustHaveRegister 82 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [86, 90[[544, 556[86 MustHaveRegister 88 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|q [556, 558[556 MustHaveRegister 558 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r8|q]" v10|q -1 [504, 508[[796, 806[504 MustHaveRegister 506 MustHaveRegister 806 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rdi|d]" v11|d -1 [132, 180[132 MustHaveRegister 134 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d -1 [134, 184[[574, 718[134 MustHaveRegister 178 ShouldHaveRegister 714 ShouldHaveRegister 718 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r9|d]" v13|d v2|d [136, 138[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[r9|d]" v14|d v3|d [138, 140[138 MustHaveRegister 140 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r9|d]" v15|d v4|d [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [1074, 1090[1090 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d v3|d [176, 178[176 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r9|d]" v18|d v17|d [178, 184[[574, 716[178 MustHaveRegister 182 ShouldHaveRegister 716 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q v11|d [180, 193[180 MustHaveRegister 192 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|q [722, 726[722 MustHaveRegister 726 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [730, 741[730 MustHaveRegister 734 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rdx|q]" v23|q -1 [732, 733[732 MustHaveRegister  "NoDefinitionFound"
  v24|d DWORD "[rsi|d]" v24|d v21|q [734, 736[734 MustHaveRegister 736 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rdx|q]" v26|q -1 [738, 739[738 MustHaveRegister  "NoDefinitionFound"
  v27|q QWORD "[rdi|q]" v27|q v19|q [194, 318[206 MustHaveRegister 318 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d -1 [206, 266[206 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r9|d]" v29|d -1 [222, 329[222 MustHaveRegister 224 MustHaveRegister 268 MustHaveRegister 326 MustHaveRegister  "OneSpillStore"
  v30|d DWORD "[r10|d]" v30|d v4|d [250, 252[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d v28|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d -1 [1042, 1058[1058 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [316, 324[316 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v27|q [318, 326[318 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [320, 324[320 MustHaveRegister 324 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r11|q]" v36|q -1 [322, 328[322 MustHaveRegister 328 ShouldHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d v3|d [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q -1 [336, 402[[436, 464[[742, 782[[828, 896[[962, 972[336 MustHaveRegister 338 MustHaveRegister 382 ShouldHaveRegister 464 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [338, 384[338 MustHaveRegister 340 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q -1 [354, 356[354 MustHaveRegister 356 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rdx|d]" v41|d v48|d [386, 389[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q -1 [756, 792[[828, 888[[944, 958[756 MustHaveRegister 758 MustHaveRegister 776 MustHaveRegister 778 MustHaveRegister 792 MustHaveRegister 838 MustHaveRegister 854 MustHaveRegister 858 MustHaveRegister 888 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r8|q]" v43|q -1 [758, 762[[944, 956[758 MustHaveRegister 760 MustHaveRegister 956 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q -1 [776, 778[776 MustHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q v44|q [778, 780[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[rsi|d]" v47|d v46|d [892, 895[892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rdx|d]" v48|d v41|d [390, 400[400 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[r8|q]" v49|q v43|q [956, 958[956 MustHaveRegister 958 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[vstack:3|q]" v0|q v0|q [270, 325[ "StoreAtDefinition"
  v51|q QWORD "[vstack:8|q]" v1|q v1|q [574, 715[ "OneSpillStore"
  v52|d DWORD "[vstack:5|d]" v2|d v2|d [574, 717[ "OneSpillStore"
  v53|d DWORD "[vstack:2|d]" v3|d v3|d [329, 332[[488, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[332 ShouldHaveRegister  "OneSpillStore"
  v54|d DWORD "[vstack:9|d]" v4|d v4|d [574, 719[ "OneSpillStore"
  v55|q QWORD "[vstack:6|q]" v19|q v19|q [574, 719[ "OneSpillStore"
  v56|d DWORD "[vstack:1|d]" v29|d v29|d [329, 332[332 ShouldHaveRegister  "OneSpillStore"
  v57|q QWORD "[vstack:3|q]" v0|q v0|q [325, 329[ "StoreAtDefinition"
  v58|q QWORD "[vstack:3|q]" v0|q v0|q [329, 333[ "StoreAtDefinition"
  v59|d DWORD "[r8|d]" v3|d v3|d [1074, 1095[ "OneSpillStore"
  v60|q QWORD "[rsi|q]" v0|q v0|q [333, 402[[436, 462[[488, 574[334 MustHaveRegister 354 MustHaveRegister 384 MustHaveRegister 462 ShouldHaveRegister  "StoreAtDefinition"
  v61|q QWORD "[vstack:3|q]" v0|q v0|q [574, 713[ "StoreAtDefinition"
  v62|q QWORD "[vstack:6|q]" v19|q v19|q [719, 724[724 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[vstack:3|q]" v0|q v0|q [713, 719[ "StoreAtDefinition"
  v64|d DWORD "[vstack:9|d]" v4|d v4|d [719, 742[[796, 828[[896, 944[ "OneSpillStore"
  v65|d DWORD "[vstack:5|d]" v2|d v2|d [717, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v66|q QWORD "[vstack:8|q]" v1|q v1|q [715, 719[ "OneSpillStore"
  v67|q QWORD "[vstack:3|q]" v0|q v0|q [719, 731[ "StoreAtDefinition"
  v68|q QWORD "[vstack:8|q]" v1|q v1|q [719, 742[[796, 828[[896, 944[[982, 1063[[1064, 1074[ "OneSpillStore"
  v69|d DWORD "[r11|d]" v2|d v2|d [1074, 1095[ "OneSpillStore"
  v70|q QWORD "[rcx|q]" v0|q v0|q [731, 782[[796, 944[[962, 972[[982, 1063[[1064, 1095[732 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 756 MustHaveRegister 936 ShouldHaveRegister  "StoreAtDefinition"
  v71|q QWORD "[rdx|q]" v1|q v1|q [1074, 1095[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [v27|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = STACKMOVE (input: v57|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [v48|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = STACKMOVE (input: v52|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v54|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = STACKMOVE (input: v63|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: v0|QWORD[.] Object[null] v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction v6|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: v5|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction v7|QWORD = OR x: v5|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [v6|QWORD], y: v7|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v6|QWORD) accessKind: QWORD <|@ <|@
      nr   86  <|@ instruction v8|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction v11|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction v13|DWORD = OR (x: v2|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v14|DWORD = OR (x: v3|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v15|DWORD = SUB (x: v4|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v17|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction v18|DWORD = SUB (x: v17|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction v28|DWORD = MOV input: [v27|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction v29|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v29|DWORD, y: v29|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v30|DWORD = SUB (x: v4|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v30|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v31|DWORD = SUB (x: v28|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: v29|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v33|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction v34|QWORD[*] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction v35|QWORD = MOV value: v2|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction v36|QWORD = MOV value: v3|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [v33|QWORD[*] + v35|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [v34|QWORD[*] + v29|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction v37|DWORD = ADD (x: v3|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction v38|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction v39|QWORD = MOV input: [v38|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: v39|QWORD, y: v39|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction v40|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: v40|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [v0|QWORD[.]], cmpValue: rax|QWORD, newValue: v39|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction v41|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [v6|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction v10|QWORD = MOV input: [v5|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: v10|QWORD, y: v10|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [v5|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction v9|QWORD = SUB (x: v8|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [v6|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = STACKMOVE (input: v52|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v54|DWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = STACKMOVE (input: v66|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: v0|QWORD[.] v19|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  722  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: v0|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  730  <|@ instruction v21|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 16], ~expectedObject: -) {temp: v22|QWORD, temp2: v23|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction v24|DWORD[_] = COMPRESSPOINTER (input: v21|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v24|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v21|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction v42|QWORD = MOV input: [v0|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction v43|QWORD = MOV input: [v42|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction v44|QWORD = MOV input: [v42|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction v45|QWORD = OR (x: v44|QWORD, ~y: [v42|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: v45|QWORD, y: v45|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: v10|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [v42|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [v42|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [v42|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction v46|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction v47|DWORD = XOR x: v46|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVE input: v47|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [v5|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction v49|QWORD = DEC value: v43|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [v42|QWORD + 134], y: v49|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v32|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v53|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v65|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD 
locks: monitor[v0|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction r8|DWORD = ADD (x: vstack:2|DWORD, y: vstack:1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:3|QWORD[.] vstack:6|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:3|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   44  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   46  <|@ instruction r9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   48  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   88  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  136  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  178  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  208  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  330  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  332  <|@ instruction r8|DWORD = ADD (x: vstack:2|DWORD, y: vstack:1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  336  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  338  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  340  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  386  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  504  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  506  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  530  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:3|QWORD[.] vstack:6|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  724  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:3|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  734  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  736  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  738  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  758  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  760  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr  780  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  856  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  858  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  888  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  940  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr  958  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] // MoveResolver resolve mapping <|@ <|@
      nr  990  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] // MoveResolver resolve mapping <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1010  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1062  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1094  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction vstack:1|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: vstack:2|DWORD, y: vstack:1|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction vstack:6|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: vstack:3|QWORD[.] vstack:6|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: vstack:3|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: vstack:3|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[vstack:3|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction vstack:9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  370  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] vstack:8|QWORD[.] vstack:5|DWORD vstack:2|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction vstack:2|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction vstack:5|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  412  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], vstack:0|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [0, 1252[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [926, 930[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [94, 930[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [34, 932[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [130, 862[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [480, 636[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [132, 862[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [128, 654[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [0, 1252[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:44|d]" vstack:1|d -1 [926, 930[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:36|d]" vstack:2|d -1 [94, 930[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:56|q]" vstack:3|q -1 [34, 932[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:44|d]" vstack:5|d -1 [130, 862[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:72|q]" vstack:6|q -1 [480, 636[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:64|q]" vstack:8|q -1 [132, 862[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:40|d]" vstack:9|d -1 [128, 654[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  370  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  412  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  370  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  412  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  370  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [rcx:0, stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [rcx:0, stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2]
locals: rsi|QWORD[.] Object[null] rcx|DWORD r8|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2] <|@ <|@
      nr   38  <|@ instruction r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr   40  <|@ instruction r9|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr   42  <|@ instruction BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" "B4" "B11" 
    successors "B15" 
    xhandlers
    flags 
    probability 4607168016288409077
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  346  <|@ instruction r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  462  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4607124547720370660
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD 
locks: monitor[rsi|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15] <|@ <|@
      nr  680  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  716  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = MOV value: rcx|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|QWORD = MOV value: r8|DWORD size: DWORD <|@ <|@
      nr  918  <|@ instruction rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  930  <|@ instruction r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  938  <|@ instruction rdx|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  940  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4603579539098121011
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr  966  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603525495902592565
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = SETCC condition: = <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B37" "B44" 
    successors "B46" "B48" 
    xhandlers
    flags 
    probability 4603529829626441991
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B35" "B40" "B50" "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604504578731798887
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B51" 
    xhandlers
    flags 
    probability 4600877379321698714
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4599026229999071495
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B42" 
    successors "B52" 
    xhandlers
    flags 
    probability 4599027300054342958
    begin_IR
      LIR
      nr 1162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1180  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  146  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction MOV x: [r9|QWORD] y: 3 size: QWORD <|@ <|@
      nr  162  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD <|@ <|@
      nr  164  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4575822953874711175
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576803513614379299
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction MOV x: [r9|QWORD] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4574057520348466688
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22]
stack: stack:56|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15] <|@ <|@
      nr  636  <|@ instruction rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25]
stack: stack:56|QWORD[.] 
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: stack:56|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[stack:56|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15] <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  646  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3 <|@ <|@
      nr  648  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  650  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed <|@ <|@
      nr  652  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B50" 
    xhandlers
    flags 
    probability 4573567551181324032
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr 1020  <|@ instruction TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4573498375891047621
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD <|@ <|@
      nr 1040  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B51" 
    xhandlers
    flags 
    probability 4572813540517311153
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4562254508917369343
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4558673246493684325
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B5" "B13" "B8" 
    successors "B15" 
    xhandlers
    flags 
    probability 4565016908842407351
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [rcx:0, stack:16, stack:24]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4561440258104740760
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4558617906261463196
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B49" 
    xhandlers
    flags 
    probability 4558070037962474022
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction MOV x: [r11|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1098  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" 
    xhandlers
    flags 
    probability 4557511090087825579
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1128  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1130  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1132  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1134  <|@ instruction rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1136  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4556014321273684786
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction INC value: [r11|QWORD + 134] size: QWORD <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4546933335042648964
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543979261917470073
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction r8|QWORD = DEC value: r8|QWORD size: QWORD <|@ <|@
      nr 1218  <|@ instruction MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B47" 
    xhandlers
    flags 
    probability 4543890717545916254
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B51" 
    xhandlers
    flags 
    probability 4543014128267533576
    begin_IR
      LIR
      nr 1194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7] <|@ <|@
      nr  736  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [rcx:0, stack:16]
live-base-pointers: []
java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31]
locals: - - - - 
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15]
locals: rcx|QWORD[.] stack:64|QWORD[.] stack:44|DWORD stack:36|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:31, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  794  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [rcx:0, rdx:0]
live-base-pointers: []
java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0]
locals: rcx|QWORD[.] rdx|QWORD[.] r11|DWORD r8|DWORD 
locks: monitor[rcx|QWORD[.], stack:32|QWORD] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  752  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7] <|@ <|@
      nr  840  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7] <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed] <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: aload_1       
     3: arraylength   
     4: invokestatic  #12         // java.util.Objects.checkFromIndexSize:(int, int, int)int
     7: pop           
     8: aload_0       
     9: aload_0       
    10: getfield      #10         // count:int
    13: iload_3       
    14: iadd          
    15: invokevirtual #11         // ensureCapacity:(int)void
    18: aload_1       
    19: iload_2       
    20: aload_0       
    21: getfield      #7          // buf:byte[]
    24: aload_0       
    25: getfield      #10         // count:int
    28: iload_3       
    29: invokestatic  #13         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    32: aload_0       
    33: dup           
    34: getfield      #10         // count:int
    37: iload_3       
    38: iadd          
    39: putfield      #10         // count:int
    42: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec489041817f20000000000f8531060000909090909090909090909090909048896c24404889742418448b520c4c8b1e4c8d4c2430490fbae3010f82bf010000909090909090909090909090904983cb014d8919498bc3f04c0fb10e493bc30f85e20100009090909090909049ff875005000090909090909090908b7e10448b1cfd0c000000448bc9450bca450bc84585c90f8ce90400009090909090458bca442bc9453bc10f8f770500009090909090909090458bc844034e0c452bcb48c1e7034183f9010f8da50100009090909090909090448b5f0c85c90f8c240500009090909090448b4e0c4585c90f8c33040000909090904585c00f8cc70400009090909090452bd0413bca0f8f550400009090909090452bd8453bcb0f8fc4040000909090909090909090909090909090909090909090904c8bd78bf9458bd8488d7c3a104b8d740a10498bd3448944242c44894c2424e800000000448b44242c4403442424488b7424184489460c4c8d542430498b124885d20f84670000009090909090488b06480fbae0010f82290200009090909090909090909090498bc2f0480fb1160f94c20fb6d29090909085d20f84340000009090909090909049ff8f5005000090909090909090488b6c24404883c448493ba7500400000f8770040000c5f877c3909090ebcf90909090909090909090498bd2e800000000ebc6448944242c90909090909049c701030000004d8b433e4d85c00f85e701000090909090909090909048c7c000000000f04d0fb17b3e0f851e020000909090448b44242ce921feffff448944242c9090909090482bc448f7c007f0ffff0f85870200009090909049c70100000000e9f7fdffff48897c24084489542428448944242c894c24244889542410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090418bf3418bd1418bcb666690e8000000000f1f840000000000488b7424088bd0e8000000000f1f840000000000488b4c241841807f40000f842d0000008b511048c1e2034885d20f841d000000498b77284883fe000f843d0300004883ee084989772849037738488916488bf048c1ee03897110488bf14833f048c1ee160f844b0000004885c00f8442000000488bf148c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84e70200004883ea084989574849035758488932488bf8448b542428448b44242c488b542410488bf18b4c2424e914fdffff488bce9090909090904c8b194d8b83860000004d85c00f852a010000909090909090498b8396000000490b838e0000004885c00f857a0000009090909049c7433e00000000e9b5fdffff4489542428894c24244889542410488bce909090904d3bc70f84ac00000090909090909090909090498bd1e8000000000f1f840000000000448b542428448b44242c488b542410488bf18b4c2424e91bfcffff4489542428894c24244889542410488bce909090ebb8909090904983bb9e000000000f849500000090909090909049c7433e00000000f0830424004983bb9e000000000f857c00000090909090909090909090909048c7c000000000f04d0fb17b3e400f94c6400fb6f683f6018bd6488bf1e9dcfcffff9090909049ff8386000000448b44242c8b4c2424e980fbffff4489542428894c24244889542410488bce909090e925ffffff909090909049ffc84d898386000000e9a5fcffff909090e9d1fcffff909090e995fcffff448944242c894c24244889542410488bce90909041bae75effff909090909090904589978404000049c7879004000000000000e8000000000f1f840000000000448944242c894c24244889542410488bce90909041bae756ffffebbe448944242c894c24244889542410488bce90909041baed6affff448b5c2424909090909090904589978404000049c7879004000014000000e8000000000f1f840000000000448944242c894c24244889542410488bce90909041bae75affffe95affffff448944242c894c24244889542410488bce90909041bae752ffffe93bffffff448944242c894c24244889542410488bce90909041bae762ffffe91cffffff448944242c894c24244889542410488bce90909041baed66ffffe959ffffff48896c2440e800000000e9c0f9fffff4488d0d7cfbffff49898f68040000e972f9fffff448891424e800000000e9c4fcfffff448893424e800000000e91afdfffff441c78784040000f5aeffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a2ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59dffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD  <||@
  Comment 77 34 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 82 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2]  <||@
  Comment 82 [rdx:0, rsi:0, stack:24]at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 38 r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD  <||@
  Comment 89 40 r9|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 94 42 BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1  <||@
  Comment 105 block B1 null  <||@
  Comment 105 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 46 NOP  <||@
  Comment 106 48 NOP  <||@
  Comment 107 50 NOP  <||@
  Comment 108 52 NOP  <||@
  Comment 109 54 NOP  <||@
  Comment 110 56 NOP  <||@
  Comment 111 58 NOP  <||@
  Comment 112 60 NOP  <||@
  Comment 113 62 NOP  <||@
  Comment 114 64 NOP  <||@
  Comment 115 66 NOP  <||@
  Comment 116 68 NOP  <||@
  Comment 117 70 NOP  <||@
  Comment 118 72 r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD  <||@
  Comment 122 74 MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 125 76 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 128 78 rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 133 80 CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 142 block B2 null  <||@
  Comment 142 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 84 NOP  <||@
  Comment 143 86 NOP  <||@
  Comment 144 88 NOP  <||@
  Comment 145 90 JUMP ~outgoingValues: [] destination: B2 -> B12  <||@
  Comment 145 block B12 null  <||@
  Comment 145 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 268 NOP  <||@
  Comment 146 270 NOP  <||@
  Comment 147 272 NOP  <||@
  Comment 148 274 NOP  <||@
  Comment 149 276 INC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 156 278 JUMP ~outgoingValues: [] destination: B12 -> B15  <||@
  Comment 156 block B15 null  <||@
  Comment 156 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 156 326 NOP  <||@
  Comment 157 328 NOP  <||@
  Comment 158 330 NOP  <||@
  Comment 159 332 NOP  <||@
  Comment 160 334 NOP  <||@
  Comment 161 336 NOP  <||@
  Comment 162 338 NOP  <||@
  Comment 163 340 NOP  <||@
  Comment 164 342 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 344 r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 167 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 167 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 346 r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 181 348 r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 184 350 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 193 block B17 null  <||@
  Comment 193 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 193 380 NOP  <||@
  Comment 194 382 NOP  <||@
  Comment 195 384 NOP  <||@
  Comment 196 386 NOP  <||@
  Comment 197 388 NOP  <||@
  Comment 198 390 r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 204 392 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD  <||@
  Comment 213 block B20 null  <||@
  Comment 213 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 444 NOP  <||@
  Comment 214 446 NOP  <||@
  Comment 215 448 NOP  <||@
  Comment 216 450 NOP  <||@
  Comment 217 452 NOP  <||@
  Comment 218 454 NOP  <||@
  Comment 219 456 NOP  <||@
  Comment 220 458 NOP  <||@
  Comment 221 460 r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 228 462 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 231 464 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3  <||@
  Comment 235 466 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null  <||@
  Comment 245 block B21 null  <||@
  Comment 245 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 470 NOP  <||@
  Comment 246 472 NOP  <||@
  Comment 247 474 NOP  <||@
  Comment 248 476 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 248 block B23 null  <||@
  Comment 248 666 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 248 668 NOP  <||@
  Comment 249 670 NOP  <||@
  Comment 250 672 NOP  <||@
  Comment 251 674 NOP  <||@
  Comment 252 676 NOP  <||@
  Comment 253 678 r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15]  <||@
  Comment 253 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 257 680 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 265 block B25 null  <||@
  Comment 265 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 704 NOP  <||@
  Comment 266 706 NOP  <||@
  Comment 267 708 NOP  <||@
  Comment 268 710 NOP  <||@
  Comment 269 712 NOP  <||@
  Comment 270 714 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 274 716 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 283 block B27 null  <||@
  Comment 283 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 740 NOP  <||@
  Comment 284 742 NOP  <||@
  Comment 285 744 NOP  <||@
  Comment 286 746 NOP  <||@
  Comment 287 748 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 296 block B29 null  <||@
  Comment 296 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 296 772 NOP  <||@
  Comment 297 774 NOP  <||@
  Comment 298 776 NOP  <||@
  Comment 299 778 NOP  <||@
  Comment 300 780 NOP  <||@
  Comment 301 782 r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 304 784 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 313 block B31 null  <||@
  Comment 313 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 808 NOP  <||@
  Comment 314 810 NOP  <||@
  Comment 315 812 NOP  <||@
  Comment 316 814 NOP  <||@
  Comment 317 816 NOP  <||@
  Comment 318 818 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 321 820 CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD  <||@
  Comment 330 block B34 null  <||@
  Comment 330 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 866 NOP  <||@
  Comment 331 868 NOP  <||@
  Comment 332 870 NOP  <||@
  Comment 333 872 NOP  <||@
  Comment 334 874 NOP  <||@
  Comment 335 876 NOP  <||@
  Comment 336 878 NOP  <||@
  Comment 337 880 NOP  <||@
  Comment 338 882 NOP  <||@
  Comment 339 884 NOP  <||@
  Comment 340 886 NOP  <||@
  Comment 341 888 NOP  <||@
  Comment 342 890 NOP  <||@
  Comment 343 892 NOP  <||@
  Comment 344 894 NOP  <||@
  Comment 345 896 NOP  <||@
  Comment 346 898 NOP  <||@
  Comment 347 900 NOP  <||@
  Comment 348 902 NOP  <||@
  Comment 349 904 NOP  <||@
  Comment 350 906 NOP  <||@
  Comment 351 908 NOP  <||@
  Comment 352 910 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 352 912 r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 355 914 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 357 916 r11|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 360 918 rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 365 920 rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD  <||@
  Comment 370 922 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 373 924 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 378 926 stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 383 928 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 383 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 388 930 r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 398 932 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 403 934 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 407 936 r10|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 412 938 rdx|QWORD = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 415 940 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 424 block B36 null  <||@
  Comment 424 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 954 NOP  <||@
  Comment 425 956 NOP  <||@
  Comment 426 958 NOP  <||@
  Comment 427 960 NOP  <||@
  Comment 428 962 NOP  <||@
  Comment 429 964 rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD  <||@
  Comment 432 966 BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1  <||@
  Comment 443 block B37 null  <||@
  Comment 443 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 443 970 NOP  <||@
  Comment 444 972 NOP  <||@
  Comment 445 974 NOP  <||@
  Comment 446 976 NOP  <||@
  Comment 447 978 NOP  <||@
  Comment 448 980 NOP  <||@
  Comment 449 982 NOP  <||@
  Comment 450 984 NOP  <||@
  Comment 451 986 NOP  <||@
  Comment 452 988 NOP  <||@
  Comment 453 990 NOP  <||@
  Comment 454 992 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 457 994 rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD  <||@
  Comment 462 996 rdx|DWORD = SETCC condition: =  <||@
  Comment 468 998 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 468 block B45 null  <||@
  Comment 468 1140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 468 1142 NOP  <||@
  Comment 469 1144 NOP  <||@
  Comment 470 1146 NOP  <||@
  Comment 471 1148 NOP  <||@
  Comment 472 1150 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD  <||@
  Comment 480 block B48 null  <||@
  Comment 480 1184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 1186 NOP  <||@
  Comment 481 1188 NOP  <||@
  Comment 482 1190 NOP  <||@
  Comment 483 1192 JUMP ~outgoingValues: [] destination: B48 -> B51  <||@
  Comment 483 block B51 null  <||@
  Comment 483 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 483 1224 NOP  <||@
  Comment 484 1226 NOP  <||@
  Comment 485 1228 NOP  <||@
  Comment 486 1230 NOP  <||@
  Comment 487 1232 DEC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 494 1234 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 494 block B52 null  <||@
  Comment 494 1236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 1238 NOP  <||@
  Comment 495 1240 NOP  <||@
  Comment 496 1242 NOP  <||@
  Comment 497 1244 NOP  <||@
  Comment 498 1246 NOP  <||@
  Comment 499 1248 NOP  <||@
  Comment 500 1250 NOP  <||@
  Comment 501 1252 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 510 POLL_RETURN_FAR  <||@
  Comment 527 block B35 null  <||@
  Comment 527 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 527 944 NOP  <||@
  Comment 528 946 NOP  <||@
  Comment 529 948 NOP  <||@
  Comment 530 950 JUMP ~outgoingValues: [] destination: B35 -> B51  <||@
  Comment 532 block B46 null  <||@
  Comment 532 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 1154 NOP  <||@
  Comment 533 1156 NOP  <||@
  Comment 534 1158 NOP  <||@
  Comment 535 1160 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 535 block B47 null  <||@
  Comment 535 1162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 1164 NOP  <||@
  Comment 536 1166 NOP  <||@
  Comment 537 1168 NOP  <||@
  Comment 538 1170 NOP  <||@
  Comment 539 1172 NOP  <||@
  Comment 540 1174 NOP  <||@
  Comment 541 1176 NOP  <||@
  Comment 542 1178 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 545 1180 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]  <||@
  Comment 545 {Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]}  <||@
  Comment 550 1182 JUMP ~outgoingValues: [] destination: B47 -> B52  <||@
  Comment 552 block B6 null  <||@
  Comment 552 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 146 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 557 148 NOP  <||@
  Comment 558 150 NOP  <||@
  Comment 559 152 NOP  <||@
  Comment 560 154 NOP  <||@
  Comment 561 156 NOP  <||@
  Comment 562 158 NOP  <||@
  Comment 563 160 MOV x: [r9|QWORD] y: 3 size: QWORD  <||@
  Comment 570 162 r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD  <||@
  Comment 574 164 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD  <||@
  Comment 583 block B7 null  <||@
  Comment 583 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 168 NOP  <||@
  Comment 584 170 NOP  <||@
  Comment 585 172 NOP  <||@
  Comment 586 174 NOP  <||@
  Comment 587 176 NOP  <||@
  Comment 588 178 NOP  <||@
  Comment 589 180 NOP  <||@
  Comment 590 182 NOP  <||@
  Comment 591 184 NOP  <||@
  Comment 592 186 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 599 188 rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 605 190 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 611 block B9 null  <||@
  Comment 611 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 212 NOP  <||@
  Comment 612 214 NOP  <||@
  Comment 613 216 NOP  <||@
  Comment 614 218 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 619 220 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 624 block B3 null  <||@
  Comment 624 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 94 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 629 96 NOP  <||@
  Comment 630 98 NOP  <||@
  Comment 631 100 NOP  <||@
  Comment 632 102 NOP  <||@
  Comment 633 104 NOP  <||@
  Comment 634 106 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 637 108 TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD  <||@
  Comment 650 block B4 null  <||@
  Comment 650 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 112 NOP  <||@
  Comment 651 114 NOP  <||@
  Comment 652 116 NOP  <||@
  Comment 653 118 NOP  <||@
  Comment 654 120 MOV x: [r9|QWORD] y: 0 size: QWORD  <||@
  Comment 661 124 JUMP ~outgoingValues: [] destination: B4 -> B12  <||@
  Comment 666 block B22 null  <||@
  Comment 666 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 480 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 671 482 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 676 484 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 681 486 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 685 488 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 690 490 NOP  <||@
  Comment 691 492 NOP  <||@
  Comment 692 494 NOP  <||@
  Comment 693 496 NOP  <||@
  Comment 694 498 NOP  <||@
  Comment 695 500 NOP  <||@
  Comment 696 502 NOP  <||@
  Comment 697 504 NOP  <||@
  Comment 698 506 NOP  <||@
  Comment 699 508 NOP  <||@
  Comment 700 510 NOP  <||@
  Comment 701 512 NOP  <||@
  Comment 702 514 NOP  <||@
  Comment 703 516 NOP  <||@
  Comment 704 518 NOP  <||@
  Comment 705 520 NOP  <||@
  Comment 706 522 NOP  <||@
  Comment 707 524 NOP  <||@
  Comment 708 526 NOP  <||@
  Comment 709 528 NOP  <||@
  Comment 710 530 NOP  <||@
  Comment 711 532 NOP  <||@
  Comment 712 534 NOP  <||@
  Comment 713 536 NOP  <||@
  Comment 714 538 NOP  <||@
  Comment 715 540 NOP  <||@
  Comment 716 542 NOP  <||@
  Comment 717 544 NOP  <||@
  Comment 718 546 NOP  <||@
  Comment 719 548 NOP  <||@
  Comment 720 550 NOP  <||@
  Comment 721 552 NOP  <||@
  Comment 722 554 NOP  <||@
  Comment 723 556 NOP  <||@
  Comment 724 558 NOP  <||@
  Comment 725 560 NOP  <||@
  Comment 726 562 NOP  <||@
  Comment 727 564 NOP  <||@
  Comment 728 566 NOP  <||@
  Comment 729 568 NOP  <||@
  Comment 730 570 NOP  <||@
  Comment 731 572 NOP  <||@
  Comment 732 574 NOP  <||@
  Comment 733 576 NOP  <||@
  Comment 734 578 NOP  <||@
  Comment 735 580 NOP  <||@
  Comment 736 582 NOP  <||@
  Comment 737 584 NOP  <||@
  Comment 738 586 NOP  <||@
  Comment 739 588 NOP  <||@
  Comment 740 590 NOP  <||@
  Comment 741 592 NOP  <||@
  Comment 742 594 NOP  <||@
  Comment 743 596 NOP  <||@
  Comment 744 598 NOP  <||@
  Comment 745 600 NOP  <||@
  Comment 746 602 NOP  <||@
  Comment 747 604 NOP  <||@
  Comment 748 606 NOP  <||@
  Comment 749 608 NOP  <||@
  Comment 750 610 NOP  <||@
  Comment 751 612 NOP  <||@
  Comment 752 614 NOP  <||@
  Comment 753 616 NOP  <||@
  Comment 754 618 NOP  <||@
  Comment 755 620 NOP  <||@
  Comment 756 622 NOP  <||@
  Comment 757 624 NOP  <||@
  Comment 758 626 NOP  <||@
  Comment 759 628 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 762 630 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 765 632 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 768 634 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15]  <||@
  Comment 771 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 771 INVOKESTATIC  <||@
  Comment 776 [stack:8, stack:16, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |-                  |-                  |-  |- 
     stack:   |stack:56|QWORD[.]  |stack:72|QWORD[.]  |   |  
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                           |1                  |2               |3              
     locals:  |stack:56|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[stack:56|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 784 636 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 789 638 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 791 640 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15]  <||@
  Comment 791 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 791 INVOKESTATIC  <||@
  Comment 796 [stack:16, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:56|QWORD[.]  |   |   |  
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                           |1                  |2               |3              
     locals:  |stack:56|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[stack:56|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 804 642 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 809 644 AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed  <||@
  Comment 865 646 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3  <||@
  Comment 872 648 MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 875 650 AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed  <||@
  Comment 966 652 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 969 654 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 974 656 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 979 658 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 984 660 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 987 662 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 991 664 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 996 block B38 null  <||@
  Comment 996 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 996 1002 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 999 1004 NOP  <||@
  Comment 1000 1006 NOP  <||@
  Comment 1001 1008 NOP  <||@
  Comment 1002 1010 NOP  <||@
  Comment 1003 1012 NOP  <||@
  Comment 1004 1014 NOP  <||@
  Comment 1005 1016 r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD  <||@
  Comment 1008 1018 r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD  <||@
  Comment 1015 1020 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD  <||@
  Comment 1024 block B39 null  <||@
  Comment 1024 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1024 1024 NOP  <||@
  Comment 1025 1026 NOP  <||@
  Comment 1026 1028 NOP  <||@
  Comment 1027 1030 NOP  <||@
  Comment 1028 1032 NOP  <||@
  Comment 1029 1034 NOP  <||@
  Comment 1030 1036 rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD  <||@
  Comment 1037 1038 rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD  <||@
  Comment 1044 1040 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD  <||@
  Comment 1053 block B40 null  <||@
  Comment 1053 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 1044 NOP  <||@
  Comment 1054 1046 NOP  <||@
  Comment 1055 1048 NOP  <||@
  Comment 1056 1050 NOP  <||@
  Comment 1057 1052 MOV x: [r11|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1065 1054 JUMP ~outgoingValues: [] destination: B40 -> B51  <||@
  Comment 1070 block B10 null  <||@
  Comment 1070 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 224 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1075 226 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1079 228 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1084 230 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 232 NOP  <||@
  Comment 1088 234 NOP  <||@
  Comment 1089 236 NOP  <||@
  Comment 1090 238 NOP  <||@
  Comment 1091 240 CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD  <||@
  Comment 1100 block B13 null  <||@
  Comment 1100 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1100 282 NOP  <||@
  Comment 1101 284 NOP  <||@
  Comment 1102 286 NOP  <||@
  Comment 1103 288 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1103 block B14 null  <||@
  Comment 1103 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1103 292 NOP  <||@
  Comment 1104 294 NOP  <||@
  Comment 1105 296 NOP  <||@
  Comment 1106 298 NOP  <||@
  Comment 1107 300 NOP  <||@
  Comment 1108 302 NOP  <||@
  Comment 1109 304 NOP  <||@
  Comment 1110 308 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1113 310 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0]  <||@
  Comment 1113 {Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL}  <||@
  Comment 1118 [rcx:0, stack:16, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                  |2               |3              
     locals:  |rcx|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 1126 312 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1131 314 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1136 316 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 318 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1144 320 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1148 322 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1153 block B8 null  <||@
  Comment 1153 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1153 194 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1158 196 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1162 198 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1167 200 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 202 NOP  <||@
  Comment 1171 204 NOP  <||@
  Comment 1172 206 NOP  <||@
  Comment 1173 208 JUMP ~outgoingValues: [] destination: B8 -> B14  <||@
  Comment 1175 block B41 null  <||@
  Comment 1175 1056 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1175 1058 NOP  <||@
  Comment 1176 1060 NOP  <||@
  Comment 1177 1062 NOP  <||@
  Comment 1178 1064 NOP  <||@
  Comment 1179 1066 CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1193 block B43 null  <||@
  Comment 1193 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1193 1082 NOP  <||@
  Comment 1194 1084 NOP  <||@
  Comment 1195 1086 NOP  <||@
  Comment 1196 1088 NOP  <||@
  Comment 1197 1090 NOP  <||@
  Comment 1198 1092 NOP  <||@
  Comment 1199 1094 MOV x: [r11|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1207 1096 MEMBAR barriers: 4  <||@
  Comment 1212 1098 CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1226 block B44 null  <||@
  Comment 1226 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 1102 NOP  <||@
  Comment 1227 1104 NOP  <||@
  Comment 1228 1106 NOP  <||@
  Comment 1229 1108 NOP  <||@
  Comment 1230 1110 NOP  <||@
  Comment 1231 1112 NOP  <||@
  Comment 1232 1114 NOP  <||@
  Comment 1233 1116 NOP  <||@
  Comment 1234 1118 NOP  <||@
  Comment 1235 1120 NOP  <||@
  Comment 1236 1122 NOP  <||@
  Comment 1237 1124 NOP  <||@
  Comment 1238 1126 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1245 1128 rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1251 1130 rsi|DWORD = SETCC condition: =  <||@
  Comment 1259 1132 rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1262 1134 rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1264 1136 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 1138 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1272 block B11 null  <||@
  Comment 1272 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1272 244 NOP  <||@
  Comment 1273 246 NOP  <||@
  Comment 1274 248 NOP  <||@
  Comment 1275 250 NOP  <||@
  Comment 1276 252 INC value: [r11|QWORD + 134] size: QWORD  <||@
  Comment 1283 256 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1288 262 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1292 264 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1297 block B5 null  <||@
  Comment 1297 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 128 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1302 130 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1306 132 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 134 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 136 NOP  <||@
  Comment 1315 138 NOP  <||@
  Comment 1316 140 NOP  <||@
  Comment 1317 142 JUMP ~outgoingValues: [] destination: B5 -> B14  <||@
  Comment 1322 block B50 null  <||@
  Comment 1322 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1322 1206 NOP  <||@
  Comment 1323 1208 NOP  <||@
  Comment 1324 1210 NOP  <||@
  Comment 1325 1212 NOP  <||@
  Comment 1326 1214 NOP  <||@
  Comment 1327 1216 r8|QWORD = DEC value: r8|QWORD size: QWORD  <||@
  Comment 1330 1218 MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD  <||@
  Comment 1337 1220 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 1342 block B42 null  <||@
  Comment 1342 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1342 1070 NOP  <||@
  Comment 1343 1072 NOP  <||@
  Comment 1344 1074 NOP  <||@
  Comment 1345 1078 JUMP ~outgoingValues: [] destination: B42 -> B47  <||@
  Comment 1350 block B49 null  <||@
  Comment 1350 1194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1350 1196 NOP  <||@
  Comment 1351 1198 NOP  <||@
  Comment 1352 1200 NOP  <||@
  Comment 1353 1202 JUMP ~outgoingValues: [] destination: B49 -> B51  <||@
  Comment 1358 block B26 null  <||@
  Comment 1358 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 720 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1363 722 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1367 724 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 726 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1375 728 NOP  <||@
  Comment 1376 730 NOP  <||@
  Comment 1377 732 NOP  <||@
  Comment 1378 734 r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7]  <||@
  Comment 1384 736 JUMP ~outgoingValues: [] destination: B26 -> B33  <||@
  Comment 1384 block B33 null  <||@
  Comment 1384 842 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1384 844 NOP  <||@
  Comment 1385 846 NOP  <||@
  Comment 1386 848 NOP  <||@
  Comment 1387 850 NOP  <||@
  Comment 1388 852 NOP  <||@
  Comment 1389 854 NOP  <||@
  Comment 1390 856 NOP  <||@
  Comment 1391 858 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1398 860 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1409 862 DEOPT info [bci:31, 15]  <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1414 [rcx:0, stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1                  |2               |3              
     locals:  |rcx|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 1422 block B30 null  <||@
  Comment 1422 786 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1422 788 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1427 790 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1431 792 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1436 794 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 796 NOP  <||@
  Comment 1440 798 NOP  <||@
  Comment 1441 800 NOP  <||@
  Comment 1442 802 r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7]  <||@
  Comment 1448 804 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 1450 block B16 null  <||@
  Comment 1450 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1450 354 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1455 356 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1459 358 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 360 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 362 NOP  <||@
  Comment 1468 364 NOP  <||@
  Comment 1469 366 NOP  <||@
  Comment 1470 368 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1476 376 JUMP ~outgoingValues: [] destination: B16 -> B19  <||@
  Comment 1476 block B19 null  <||@
  Comment 1476 420 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1476 372 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1481 422 NOP  <||@
  Comment 1482 424 NOP  <||@
  Comment 1483 426 NOP  <||@
  Comment 1484 428 NOP  <||@
  Comment 1485 430 NOP  <||@
  Comment 1486 432 NOP  <||@
  Comment 1487 434 NOP  <||@
  Comment 1488 436 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1495 438 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1506 440 DEOPT info [bci:0]  <||@
  Comment 1506 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1511 [rcx:0, rdx:0]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rcx|QWORD[.]                           |rdx|QWORD[.]  |r11|DWORD  |r8|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1519 block B28 null  <||@
  Comment 1519 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1519 752 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1524 754 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1528 756 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1533 758 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 760 NOP  <||@
  Comment 1537 762 NOP  <||@
  Comment 1538 764 NOP  <||@
  Comment 1539 766 r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7]  <||@
  Comment 1545 768 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 1550 block B32 null  <||@
  Comment 1550 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1550 824 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1555 826 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1559 828 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1564 830 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 832 NOP  <||@
  Comment 1568 834 NOP  <||@
  Comment 1569 836 NOP  <||@
  Comment 1570 838 r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7]  <||@
  Comment 1576 840 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 1581 block B24 null  <||@
  Comment 1581 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1581 684 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1586 686 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1590 688 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 690 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 692 NOP  <||@
  Comment 1599 694 NOP  <||@
  Comment 1600 696 NOP  <||@
  Comment 1601 698 r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7]  <||@
  Comment 1607 700 JUMP ~outgoingValues: [] destination: B24 -> B33  <||@
  Comment 1612 block B18 null  <||@
  Comment 1612 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1612 396 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1617 398 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1621 400 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 402 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1629 404 NOP  <||@
  Comment 1630 406 NOP  <||@
  Comment 1631 408 NOP  <||@
  Comment 1632 410 r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed]  <||@
  Comment 1638 418 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1648 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1673 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1683 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1698 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1731 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1736 [rdx:0, rsi:0, stack:24]at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 1766 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1771 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1801 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1806 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1814 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1814 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1820 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1820 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8300[java.io.ByteArrayOutputStream.write(byte[], int, int)]"
  method "HotSpotCompilation-8300[java.io.ByteArrayOutputStream.write(byte[], int, int)]"
  date 1724269754836
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af013c0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85a33c88fe66669089842400c0feff4883ec489041817f20000000000f8531060000909090909090909090909090909048896c24404889742418448b520c4c8b1e4c8d4c2430490fbae3010f82bf010000909090909090909090909090904983cb014d8919498bc3f04c0fb10e493bc30f85e20100009090909090909049ff875005000090909090909090908b7e10448b1cfd0c000000448bc9450bca450bc84585c90f8ce90400009090909090458bca442bc9453bc10f8f770500009090909090909090458bc844034e0c452bcb48c1e7034183f9010f8da50100009090909090909090448b5f0c85c90f8c240500009090909090448b4e0c4585c90f8c33040000909090904585c00f8cc70400009090909090452bd0413bca0f8f550400009090909090452bd8453bcb0f8fc4040000909090909090909090909090909090909090909090904c8bd78bf9458bd8488d7c3a104b8d740a10498bd3448944242c44894c2424e8bc8886fe448b44242c4403442424488b7424184489460c4c8d542430498b124885d20f84670000009090909090488b06480fbae0010f82290200009090909090909090909090498bc2f0480fb1160f94c20fb6d29090909085d20f84340000009090909090909049ff8f5005000090909090909090488b6c24404883c448493ba7500400000f8770040000c5f877c3909090ebcf90909090909090909090498bd2e81a3a9cfeebc6448944242c90909090909049c701030000004d8b433e4d85c00f85e701000090909090909090909048c7c000000000f04d0fb17b3e0f851e020000909090448b44242ce921feffff448944242c9090909090482bc448f7c007f0ffff0f85870200009090909049c70100000000e9f7fdffff48897c24084489542428448944242c894c24244889542410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090418bf3418bd1418bcb666690e8b84288fe0f1f8400b8040003488b7424088bd0e8a44288fe0f1f8400cc040004488b4c241841807f40000f842d0000008b511048c1e2034885d20f841d000000498b77284883fe000f843d0300004883ee084989772849037738488916488bf048c1ee03897110488bf14833f048c1ee160f844b0000004885c00f8442000000488bf148c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84e70200004883ea084989574849035758488932488bf8448b542428448b44242c488b542410488bf18b4c2424e914fdffff488bce9090909090904c8b194d8b83860000004d85c00f852a010000909090909090498b8396000000490b838e0000004885c00f857a0000009090909049c7433e00000000e9b5fdffff4489542428894c24244889542410488bce909090904d3bc70f84ac00000090909090909090909090498bd1e8628f9cfe0f1f840000000000448b542428448b44242c488b542410488bf18b4c2424e91bfcffff4489542428894c24244889542410488bce909090ebb8909090904983bb9e000000000f849500000090909090909049c7433e00000000f0830424004983bb9e000000000f857c00000090909090909090909090909048c7c000000000f04d0fb17b3e400f94c6400fb6f683f6018bd6488bf1e9dcfcffff9090909049ff8386000000448b44242c8b4c2424e980fbffff4489542428894c24244889542410488bce909090e925ffffff909090909049ffc84d898386000000e9a5fcffff909090e9d1fcffff909090e995fcffff448944242c894c24244889542410488bce90909041bae75effff909090909090904589978404000049c7879004000000000000e8349888fe0f1f840000000000448944242c894c24244889542410488bce90909041bae756ffffebbe448944242c894c24244889542410488bce90909041baed6affff448b5c2424909090909090904589978404000049c7879004000014000000e8d39788fe0f1f840000000000448944242c894c24244889542410488bce90909041bae75affffe95affffff448944242c894c24244889542410488bce90909041bae752ffffe93bffffff448944242c894c24244889542410488bce90909041bae762ffffe91cffffff448944242c894c24244889542410488bce90909041baed66ffffe959ffffff48896c2440e8eb9786fee9c0f9fffff4488d0d7cfbffff49898f68040000e9b2a588fef448891424e8a8679cfee9c4fcfffff448893424e819899cfee91afdfffff441c78784040000f5aeffff49c7879004000000000000e8f29688fe0f1f84000000000041c78784040000f5a2ffff49c7879004000000000000e8cf9688fe0f1f84000000000041c78784040000f59dffff49c7879004000000000000e8ac9688fe0f1f840000000000e825389cfef4e83f9488fef4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@736bc01d slotKind: QWORD  <||@
  Comment 77 34 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 82 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:-2]  <||@
  Comment 82 [rdx:0, rsi:0, stack:24]at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 38 r11|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD  <||@
  Comment 89 40 r9|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 94 42 BITTESTANDBRANCH value: r11|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B0 -> B1 falseDestination: B0 -> B6 index: 1  <||@
  Comment 105 block B1 null  <||@
  Comment 105 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 46 NOP  <||@
  Comment 106 48 NOP  <||@
  Comment 107 50 NOP  <||@
  Comment 108 52 NOP  <||@
  Comment 109 54 NOP  <||@
  Comment 110 56 NOP  <||@
  Comment 111 58 NOP  <||@
  Comment 112 60 NOP  <||@
  Comment 113 62 NOP  <||@
  Comment 114 64 NOP  <||@
  Comment 115 66 NOP  <||@
  Comment 116 68 NOP  <||@
  Comment 117 70 NOP  <||@
  Comment 118 72 r11|QWORD = OR x: r11|QWORD y: 1 size: QWORD  <||@
  Comment 122 74 MOV (x: [r9|QWORD], y: r11|QWORD) size: QWORD  <||@
  Comment 125 76 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 128 78 rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: r9|QWORD) accessKind: QWORD  <||@
  Comment 133 80 CMPBRANCH (x: rax|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 142 block B2 null  <||@
  Comment 142 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 84 NOP  <||@
  Comment 143 86 NOP  <||@
  Comment 144 88 NOP  <||@
  Comment 145 90 JUMP ~outgoingValues: [] destination: B2 -> B12  <||@
  Comment 145 block B12 null  <||@
  Comment 145 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 268 NOP  <||@
  Comment 146 270 NOP  <||@
  Comment 147 272 NOP  <||@
  Comment 148 274 NOP  <||@
  Comment 149 276 INC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 156 278 JUMP ~outgoingValues: [] destination: B12 -> B15  <||@
  Comment 156 block B15 null  <||@
  Comment 156 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 156 326 NOP  <||@
  Comment 157 328 NOP  <||@
  Comment 158 330 NOP  <||@
  Comment 159 332 NOP  <||@
  Comment 160 334 NOP  <||@
  Comment 161 336 NOP  <||@
  Comment 162 338 NOP  <||@
  Comment 163 340 NOP  <||@
  Comment 164 342 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 167 344 r11|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 167 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 167 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 175 346 r9|DWORD = OR (x: rcx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 181 348 r9|DWORD = OR (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 184 350 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 193 block B17 null  <||@
  Comment 193 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 193 380 NOP  <||@
  Comment 194 382 NOP  <||@
  Comment 195 384 NOP  <||@
  Comment 196 386 NOP  <||@
  Comment 197 388 NOP  <||@
  Comment 198 390 r9|DWORD = SUB (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 204 392 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B20 size: DWORD  <||@
  Comment 213 block B20 null  <||@
  Comment 213 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 213 444 NOP  <||@
  Comment 214 446 NOP  <||@
  Comment 215 448 NOP  <||@
  Comment 216 450 NOP  <||@
  Comment 217 452 NOP  <||@
  Comment 218 454 NOP  <||@
  Comment 219 456 NOP  <||@
  Comment 220 458 NOP  <||@
  Comment 221 460 r9|DWORD = ADD (x: r8|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 228 462 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 231 464 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3  <||@
  Comment 235 466 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.9935750194916264 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 1 size: DWORD inlinedY: null  <||@
  Comment 245 block B21 null  <||@
  Comment 245 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 470 NOP  <||@
  Comment 246 472 NOP  <||@
  Comment 247 474 NOP  <||@
  Comment 248 476 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 248 block B23 null  <||@
  Comment 248 666 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 248 668 NOP  <||@
  Comment 249 670 NOP  <||@
  Comment 250 672 NOP  <||@
  Comment 251 674 NOP  <||@
  Comment 252 676 NOP  <||@
  Comment 253 678 r11|DWORD = MOV input: [rdi|QWORD[.] + 12] size: DWORD state [bci:31, 15]  <||@
  Comment 253 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 257 680 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 265 block B25 null  <||@
  Comment 265 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 265 704 NOP  <||@
  Comment 266 706 NOP  <||@
  Comment 267 708 NOP  <||@
  Comment 268 710 NOP  <||@
  Comment 269 712 NOP  <||@
  Comment 270 714 r9|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 274 716 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 283 block B27 null  <||@
  Comment 283 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 283 740 NOP  <||@
  Comment 284 742 NOP  <||@
  Comment 285 744 NOP  <||@
  Comment 286 746 NOP  <||@
  Comment 287 748 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 296 block B29 null  <||@
  Comment 296 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 296 772 NOP  <||@
  Comment 297 774 NOP  <||@
  Comment 298 776 NOP  <||@
  Comment 299 778 NOP  <||@
  Comment 300 780 NOP  <||@
  Comment 301 782 r10|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 304 784 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 313 block B31 null  <||@
  Comment 313 806 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 808 NOP  <||@
  Comment 314 810 NOP  <||@
  Comment 315 812 NOP  <||@
  Comment 316 814 NOP  <||@
  Comment 317 816 NOP  <||@
  Comment 318 818 r11|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 321 820 CMPBRANCH (x: r9|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD  <||@
  Comment 330 block B34 null  <||@
  Comment 330 864 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 330 866 NOP  <||@
  Comment 331 868 NOP  <||@
  Comment 332 870 NOP  <||@
  Comment 333 872 NOP  <||@
  Comment 334 874 NOP  <||@
  Comment 335 876 NOP  <||@
  Comment 336 878 NOP  <||@
  Comment 337 880 NOP  <||@
  Comment 338 882 NOP  <||@
  Comment 339 884 NOP  <||@
  Comment 340 886 NOP  <||@
  Comment 341 888 NOP  <||@
  Comment 342 890 NOP  <||@
  Comment 343 892 NOP  <||@
  Comment 344 894 NOP  <||@
  Comment 345 896 NOP  <||@
  Comment 346 898 NOP  <||@
  Comment 347 900 NOP  <||@
  Comment 348 902 NOP  <||@
  Comment 349 904 NOP  <||@
  Comment 350 906 NOP  <||@
  Comment 351 908 NOP  <||@
  Comment 352 910 rdx|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 352 912 r10|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 355 914 rdi|QWORD = MOV value: rcx|DWORD size: DWORD  <||@
  Comment 357 916 r11|QWORD = MOV value: r8|DWORD size: DWORD  <||@
  Comment 360 918 rdi|QWORD = LEA address: [rdx|QWORD[*] + rdi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 365 920 rsi|QWORD = LEA address: [r10|QWORD[*] + r9|DWORD * 1 + 16] size: QWORD  <||@
  Comment 370 922 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 373 924 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 378 926 stack:44|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 383 928 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 383 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 388 930 r8|DWORD = ADD (x: stack:36|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 398 932 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 403 934 MOV (x: [rsi|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 407 936 r10|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 412 938 rdx|QWORD = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 415 940 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 424 block B36 null  <||@
  Comment 424 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 424 954 NOP  <||@
  Comment 425 956 NOP  <||@
  Comment 426 958 NOP  <||@
  Comment 427 960 NOP  <||@
  Comment 428 962 NOP  <||@
  Comment 429 964 rax|QWORD = MOV input: [rsi|QWORD[.]] size: QWORD  <||@
  Comment 432 966 BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B36 -> B37 falseDestination: B36 -> B38 index: 1  <||@
  Comment 443 block B37 null  <||@
  Comment 443 968 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 443 970 NOP  <||@
  Comment 444 972 NOP  <||@
  Comment 445 974 NOP  <||@
  Comment 446 976 NOP  <||@
  Comment 447 978 NOP  <||@
  Comment 448 980 NOP  <||@
  Comment 449 982 NOP  <||@
  Comment 450 984 NOP  <||@
  Comment 451 986 NOP  <||@
  Comment 452 988 NOP  <||@
  Comment 453 990 NOP  <||@
  Comment 454 992 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 457 994 rax|QWORD = CAS (address: [rsi|QWORD[.]], cmpValue: rax|QWORD, newValue: rdx|QWORD) accessKind: QWORD  <||@
  Comment 462 996 rdx|DWORD = SETCC condition: =  <||@
  Comment 468 998 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 468 block B45 null  <||@
  Comment 468 1140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 468 1142 NOP  <||@
  Comment 469 1144 NOP  <||@
  Comment 470 1146 NOP  <||@
  Comment 471 1148 NOP  <||@
  Comment 472 1150 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B48 size: DWORD  <||@
  Comment 480 block B48 null  <||@
  Comment 480 1184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 480 1186 NOP  <||@
  Comment 481 1188 NOP  <||@
  Comment 482 1190 NOP  <||@
  Comment 483 1192 JUMP ~outgoingValues: [] destination: B48 -> B51  <||@
  Comment 483 block B51 null  <||@
  Comment 483 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 483 1224 NOP  <||@
  Comment 484 1226 NOP  <||@
  Comment 485 1228 NOP  <||@
  Comment 486 1230 NOP  <||@
  Comment 487 1232 DEC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 494 1234 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 494 block B52 null  <||@
  Comment 494 1236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 494 1238 NOP  <||@
  Comment 495 1240 NOP  <||@
  Comment 496 1242 NOP  <||@
  Comment 497 1244 NOP  <||@
  Comment 498 1246 NOP  <||@
  Comment 499 1248 NOP  <||@
  Comment 500 1250 NOP  <||@
  Comment 501 1252 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 510 POLL_RETURN_FAR  <||@
  Comment 527 block B35 null  <||@
  Comment 527 942 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 527 944 NOP  <||@
  Comment 528 946 NOP  <||@
  Comment 529 948 NOP  <||@
  Comment 530 950 JUMP ~outgoingValues: [] destination: B35 -> B51  <||@
  Comment 532 block B46 null  <||@
  Comment 532 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 532 1154 NOP  <||@
  Comment 533 1156 NOP  <||@
  Comment 534 1158 NOP  <||@
  Comment 535 1160 JUMP ~outgoingValues: [] destination: B46 -> B47  <||@
  Comment 535 block B47 null  <||@
  Comment 535 1162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 535 1164 NOP  <||@
  Comment 536 1166 NOP  <||@
  Comment 537 1168 NOP  <||@
  Comment 538 1170 NOP  <||@
  Comment 539 1172 NOP  <||@
  Comment 540 1174 NOP  <||@
  Comment 541 1176 NOP  <||@
  Comment 542 1178 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 545 1180 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]  <||@
  Comment 545 {Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]}  <||@
  Comment 550 1182 JUMP ~outgoingValues: [] destination: B47 -> B52  <||@
  Comment 552 block B6 null  <||@
  Comment 552 144 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 146 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 557 148 NOP  <||@
  Comment 558 150 NOP  <||@
  Comment 559 152 NOP  <||@
  Comment 560 154 NOP  <||@
  Comment 561 156 NOP  <||@
  Comment 562 158 NOP  <||@
  Comment 563 160 MOV x: [r9|QWORD] y: 3 size: QWORD  <||@
  Comment 570 162 r8|QWORD = MOV input: [r11|QWORD + 62] size: QWORD  <||@
  Comment 574 164 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD  <||@
  Comment 583 block B7 null  <||@
  Comment 583 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 583 168 NOP  <||@
  Comment 584 170 NOP  <||@
  Comment 585 172 NOP  <||@
  Comment 586 174 NOP  <||@
  Comment 587 176 NOP  <||@
  Comment 588 178 NOP  <||@
  Comment 589 180 NOP  <||@
  Comment 590 182 NOP  <||@
  Comment 591 184 NOP  <||@
  Comment 592 186 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 599 188 rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 605 190 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 611 block B9 null  <||@
  Comment 611 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 611 212 NOP  <||@
  Comment 612 214 NOP  <||@
  Comment 613 216 NOP  <||@
  Comment 614 218 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 619 220 JUMP ~outgoingValues: [] destination: B9 -> B12  <||@
  Comment 624 block B3 null  <||@
  Comment 624 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 624 94 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 629 96 NOP  <||@
  Comment 630 98 NOP  <||@
  Comment 631 100 NOP  <||@
  Comment 632 102 NOP  <||@
  Comment 633 104 NOP  <||@
  Comment 634 106 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 637 108 TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: -4089 size: QWORD  <||@
  Comment 650 block B4 null  <||@
  Comment 650 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 112 NOP  <||@
  Comment 651 114 NOP  <||@
  Comment 652 116 NOP  <||@
  Comment 653 118 NOP  <||@
  Comment 654 120 MOV x: [r9|QWORD] y: 0 size: QWORD  <||@
  Comment 661 124 JUMP ~outgoingValues: [] destination: B4 -> B12  <||@
  Comment 666 block B22 null  <||@
  Comment 666 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 480 stack:72|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 671 482 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 676 484 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 681 486 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 685 488 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 690 490 NOP  <||@
  Comment 691 492 NOP  <||@
  Comment 692 494 NOP  <||@
  Comment 693 496 NOP  <||@
  Comment 694 498 NOP  <||@
  Comment 695 500 NOP  <||@
  Comment 696 502 NOP  <||@
  Comment 697 504 NOP  <||@
  Comment 698 506 NOP  <||@
  Comment 699 508 NOP  <||@
  Comment 700 510 NOP  <||@
  Comment 701 512 NOP  <||@
  Comment 702 514 NOP  <||@
  Comment 703 516 NOP  <||@
  Comment 704 518 NOP  <||@
  Comment 705 520 NOP  <||@
  Comment 706 522 NOP  <||@
  Comment 707 524 NOP  <||@
  Comment 708 526 NOP  <||@
  Comment 709 528 NOP  <||@
  Comment 710 530 NOP  <||@
  Comment 711 532 NOP  <||@
  Comment 712 534 NOP  <||@
  Comment 713 536 NOP  <||@
  Comment 714 538 NOP  <||@
  Comment 715 540 NOP  <||@
  Comment 716 542 NOP  <||@
  Comment 717 544 NOP  <||@
  Comment 718 546 NOP  <||@
  Comment 719 548 NOP  <||@
  Comment 720 550 NOP  <||@
  Comment 721 552 NOP  <||@
  Comment 722 554 NOP  <||@
  Comment 723 556 NOP  <||@
  Comment 724 558 NOP  <||@
  Comment 725 560 NOP  <||@
  Comment 726 562 NOP  <||@
  Comment 727 564 NOP  <||@
  Comment 728 566 NOP  <||@
  Comment 729 568 NOP  <||@
  Comment 730 570 NOP  <||@
  Comment 731 572 NOP  <||@
  Comment 732 574 NOP  <||@
  Comment 733 576 NOP  <||@
  Comment 734 578 NOP  <||@
  Comment 735 580 NOP  <||@
  Comment 736 582 NOP  <||@
  Comment 737 584 NOP  <||@
  Comment 738 586 NOP  <||@
  Comment 739 588 NOP  <||@
  Comment 740 590 NOP  <||@
  Comment 741 592 NOP  <||@
  Comment 742 594 NOP  <||@
  Comment 743 596 NOP  <||@
  Comment 744 598 NOP  <||@
  Comment 745 600 NOP  <||@
  Comment 746 602 NOP  <||@
  Comment 747 604 NOP  <||@
  Comment 748 606 NOP  <||@
  Comment 749 608 NOP  <||@
  Comment 750 610 NOP  <||@
  Comment 751 612 NOP  <||@
  Comment 752 614 NOP  <||@
  Comment 753 616 NOP  <||@
  Comment 754 618 NOP  <||@
  Comment 755 620 NOP  <||@
  Comment 756 622 NOP  <||@
  Comment 757 624 NOP  <||@
  Comment 758 626 NOP  <||@
  Comment 759 628 rsi|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 762 630 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 765 632 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 768 634 rax|DWORD = CALL_DIRECT parameters: [rsi|DWORD, rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<ArraysSupport.newLength(int, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:22, 15]  <||@
  Comment 771 {HotSpotMethod<ArraysSupport.newLength(int, int, int)>}  <||@
  Comment 771 INVOKESTATIC  <||@
  Comment 776 [stack:8, stack:16, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 22, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |-                  |-                  |-  |- 
     stack:   |stack:56|QWORD[.]  |stack:72|QWORD[.]  |   |  
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                           |1                  |2               |3              
     locals:  |stack:56|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[stack:56|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 784 636 rsi|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 789 638 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 791 640 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:25, 15]  <||@
  Comment 791 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 791 INVOKESTATIC  <||@
  Comment 796 [stack:16, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:100) [bci: 25, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:56|QWORD[.]  |   |   |  
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                           |1                  |2               |3              
     locals:  |stack:56|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[stack:56|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 804 642 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 809 644 AMD64G1PREWRITEBARRIER (~address: [rcx|QWORD[.] + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed  <||@
  Comment 865 646 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4b9f5a97 encoding: base: 0 shift: 3  <||@
  Comment 872 648 MOV (x: [rcx|QWORD[.] + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 875 650 AMD64G1POSTWRITEBARRIER (~address: rcx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@45ce7ed  <||@
  Comment 966 652 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 969 654 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 974 656 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 979 658 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 984 660 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 987 662 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 991 664 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 996 block B38 null  <||@
  Comment 996 1000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 996 1002 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 999 1004 NOP  <||@
  Comment 1000 1006 NOP  <||@
  Comment 1001 1008 NOP  <||@
  Comment 1002 1010 NOP  <||@
  Comment 1003 1012 NOP  <||@
  Comment 1004 1014 NOP  <||@
  Comment 1005 1016 r11|QWORD = MOV input: [rcx|QWORD[.]] size: QWORD  <||@
  Comment 1008 1018 r8|QWORD = MOV input: [r11|QWORD + 134] size: QWORD  <||@
  Comment 1015 1020 TESTBRANCH (x: r8|QWORD, y: r8|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B50 size: QWORD  <||@
  Comment 1024 block B39 null  <||@
  Comment 1024 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1024 1024 NOP  <||@
  Comment 1025 1026 NOP  <||@
  Comment 1026 1028 NOP  <||@
  Comment 1027 1030 NOP  <||@
  Comment 1028 1032 NOP  <||@
  Comment 1029 1034 NOP  <||@
  Comment 1030 1036 rax|QWORD = MOV input: [r11|QWORD + 150] size: QWORD  <||@
  Comment 1037 1038 rax|QWORD = OR (x: rax|QWORD, ~y: [r11|QWORD + 142]) size: QWORD  <||@
  Comment 1044 1040 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD  <||@
  Comment 1053 block B40 null  <||@
  Comment 1053 1042 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1053 1044 NOP  <||@
  Comment 1054 1046 NOP  <||@
  Comment 1055 1048 NOP  <||@
  Comment 1056 1050 NOP  <||@
  Comment 1057 1052 MOV x: [r11|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1065 1054 JUMP ~outgoingValues: [] destination: B40 -> B51  <||@
  Comment 1070 block B10 null  <||@
  Comment 1070 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 224 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1075 226 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1079 228 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1084 230 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1087 232 NOP  <||@
  Comment 1088 234 NOP  <||@
  Comment 1089 236 NOP  <||@
  Comment 1090 238 NOP  <||@
  Comment 1091 240 CMPBRANCH (x: r8|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 size: QWORD  <||@
  Comment 1100 block B13 null  <||@
  Comment 1100 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1100 282 NOP  <||@
  Comment 1101 284 NOP  <||@
  Comment 1102 286 NOP  <||@
  Comment 1103 288 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1103 block B14 null  <||@
  Comment 1103 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1103 292 NOP  <||@
  Comment 1104 294 NOP  <||@
  Comment 1105 296 NOP  <||@
  Comment 1106 298 NOP  <||@
  Comment 1107 300 NOP  <||@
  Comment 1108 302 NOP  <||@
  Comment 1109 304 NOP  <||@
  Comment 1110 308 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 1113 310 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0]  <||@
  Comment 1113 {Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL}  <||@
  Comment 1118 [rcx:0, stack:16, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1                  |2               |3              
     locals:  |rcx|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 1126 312 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1131 314 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1136 316 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1141 318 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1144 320 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1148 322 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1153 block B8 null  <||@
  Comment 1153 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1153 194 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1158 196 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1162 198 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1167 200 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1170 202 NOP  <||@
  Comment 1171 204 NOP  <||@
  Comment 1172 206 NOP  <||@
  Comment 1173 208 JUMP ~outgoingValues: [] destination: B8 -> B14  <||@
  Comment 1175 block B41 null  <||@
  Comment 1175 1056 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1175 1058 NOP  <||@
  Comment 1176 1060 NOP  <||@
  Comment 1177 1062 NOP  <||@
  Comment 1178 1064 NOP  <||@
  Comment 1179 1066 CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1193 block B43 null  <||@
  Comment 1193 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1193 1082 NOP  <||@
  Comment 1194 1084 NOP  <||@
  Comment 1195 1086 NOP  <||@
  Comment 1196 1088 NOP  <||@
  Comment 1197 1090 NOP  <||@
  Comment 1198 1092 NOP  <||@
  Comment 1199 1094 MOV x: [r11|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1207 1096 MEMBAR barriers: 4  <||@
  Comment 1212 1098 CMPCONSTBRANCH x: [r11|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B49 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1226 block B44 null  <||@
  Comment 1226 1100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 1102 NOP  <||@
  Comment 1227 1104 NOP  <||@
  Comment 1228 1106 NOP  <||@
  Comment 1229 1108 NOP  <||@
  Comment 1230 1110 NOP  <||@
  Comment 1231 1112 NOP  <||@
  Comment 1232 1114 NOP  <||@
  Comment 1233 1116 NOP  <||@
  Comment 1234 1118 NOP  <||@
  Comment 1235 1120 NOP  <||@
  Comment 1236 1122 NOP  <||@
  Comment 1237 1124 NOP  <||@
  Comment 1238 1126 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1245 1128 rax|QWORD = CAS (address: [r11|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1251 1130 rsi|DWORD = SETCC condition: =  <||@
  Comment 1259 1132 rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1262 1134 rdx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 1264 1136 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 1138 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1272 block B11 null  <||@
  Comment 1272 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1272 244 NOP  <||@
  Comment 1273 246 NOP  <||@
  Comment 1274 248 NOP  <||@
  Comment 1275 250 NOP  <||@
  Comment 1276 252 INC value: [r11|QWORD + 134] size: QWORD  <||@
  Comment 1283 256 r8|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1288 262 rcx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1292 264 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 1297 block B5 null  <||@
  Comment 1297 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1297 128 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1302 130 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1306 132 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1311 134 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 136 NOP  <||@
  Comment 1315 138 NOP  <||@
  Comment 1316 140 NOP  <||@
  Comment 1317 142 JUMP ~outgoingValues: [] destination: B5 -> B14  <||@
  Comment 1322 block B50 null  <||@
  Comment 1322 1204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1322 1206 NOP  <||@
  Comment 1323 1208 NOP  <||@
  Comment 1324 1210 NOP  <||@
  Comment 1325 1212 NOP  <||@
  Comment 1326 1214 NOP  <||@
  Comment 1327 1216 r8|QWORD = DEC value: r8|QWORD size: QWORD  <||@
  Comment 1330 1218 MOV (x: [r11|QWORD + 134], y: r8|QWORD) size: QWORD  <||@
  Comment 1337 1220 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 1342 block B42 null  <||@
  Comment 1342 1068 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1342 1070 NOP  <||@
  Comment 1343 1072 NOP  <||@
  Comment 1344 1074 NOP  <||@
  Comment 1345 1078 JUMP ~outgoingValues: [] destination: B42 -> B47  <||@
  Comment 1350 block B49 null  <||@
  Comment 1350 1194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1350 1196 NOP  <||@
  Comment 1351 1198 NOP  <||@
  Comment 1352 1200 NOP  <||@
  Comment 1353 1202 JUMP ~outgoingValues: [] destination: B49 -> B51  <||@
  Comment 1358 block B26 null  <||@
  Comment 1358 718 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1358 720 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1363 722 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1367 724 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 726 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1375 728 NOP  <||@
  Comment 1376 730 NOP  <||@
  Comment 1377 732 NOP  <||@
  Comment 1378 734 r10|DWORD = MOVE input: int[-41241|0xffffffffffff5ee7]  <||@
  Comment 1384 736 JUMP ~outgoingValues: [] destination: B26 -> B33  <||@
  Comment 1384 block B33 null  <||@
  Comment 1384 842 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1384 844 NOP  <||@
  Comment 1385 846 NOP  <||@
  Comment 1386 848 NOP  <||@
  Comment 1387 850 NOP  <||@
  Comment 1388 852 NOP  <||@
  Comment 1389 854 NOP  <||@
  Comment 1390 856 NOP  <||@
  Comment 1391 858 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1398 860 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1409 862 DEOPT info [bci:31, 15]  <||@
  Comment 1409 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1414 [rcx:0, stack:16]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1                  |2               |3              
     locals:  |rcx|QWORD[.]                           |stack:64|QWORD[.]  |stack:44|DWORD  |stack:36|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |                   |                |                 <||@
  Comment 1422 block B30 null  <||@
  Comment 1422 786 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1422 788 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1427 790 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1431 792 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1436 794 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1439 796 NOP  <||@
  Comment 1440 798 NOP  <||@
  Comment 1441 800 NOP  <||@
  Comment 1442 802 r10|DWORD = MOVE input: int[-43289|0xffffffffffff56e7]  <||@
  Comment 1448 804 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 1450 block B16 null  <||@
  Comment 1450 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1450 354 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1455 356 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1459 358 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1464 360 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1467 362 NOP  <||@
  Comment 1468 364 NOP  <||@
  Comment 1469 366 NOP  <||@
  Comment 1470 368 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1476 376 JUMP ~outgoingValues: [] destination: B16 -> B19  <||@
  Comment 1476 block B19 null  <||@
  Comment 1476 420 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1476 372 r11|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1481 422 NOP  <||@
  Comment 1482 424 NOP  <||@
  Comment 1483 426 NOP  <||@
  Comment 1484 428 NOP  <||@
  Comment 1485 430 NOP  <||@
  Comment 1486 432 NOP  <||@
  Comment 1487 434 NOP  <||@
  Comment 1488 436 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1495 438 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1506 440 DEOPT info [bci:0]  <||@
  Comment 1506 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1511 [rcx:0, rdx:0]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rcx|QWORD[.]                           |rdx|QWORD[.]  |r11|DWORD  |r8|DWORD 
     locks:   |monitor[rcx|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1519 block B28 null  <||@
  Comment 1519 750 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1519 752 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1524 754 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1528 756 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1533 758 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 760 NOP  <||@
  Comment 1537 762 NOP  <||@
  Comment 1538 764 NOP  <||@
  Comment 1539 766 r10|DWORD = MOVE input: int[-42265|0xffffffffffff5ae7]  <||@
  Comment 1545 768 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 1550 block B32 null  <||@
  Comment 1550 822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1550 824 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1555 826 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1559 828 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1564 830 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 832 NOP  <||@
  Comment 1568 834 NOP  <||@
  Comment 1569 836 NOP  <||@
  Comment 1570 838 r10|DWORD = MOVE input: int[-44313|0xffffffffffff52e7]  <||@
  Comment 1576 840 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 1581 block B24 null  <||@
  Comment 1581 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1581 684 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1586 686 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1590 688 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1595 690 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1598 692 NOP  <||@
  Comment 1599 694 NOP  <||@
  Comment 1600 696 NOP  <||@
  Comment 1601 698 r10|DWORD = MOVE input: int[-40217|0xffffffffffff62e7]  <||@
  Comment 1607 700 JUMP ~outgoingValues: [] destination: B24 -> B33  <||@
  Comment 1612 block B18 null  <||@
  Comment 1612 394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1612 396 stack:36|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1617 398 stack:44|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1621 400 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 402 rcx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1629 404 NOP  <||@
  Comment 1630 406 NOP  <||@
  Comment 1631 408 NOP  <||@
  Comment 1632 410 r10|DWORD = MOVE input: int[-39187|0xffffffffffff66ed]  <||@
  Comment 1638 418 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1648 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1673 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1683 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1698 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1731 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1736 [rdx:0, rsi:0, stack:24]at java.io.ByteArrayOutputStream.write(byte[], int, int) [bci: -2, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD  |r8|DWORD   <||@
  Comment 1766 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1771 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:131) [bci: 0, duringCall: false, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1801 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1806 [rdx:0, rsi:0, rdi:0, stack:24]at java.io.ByteArrayOutputStream.ensureCapacity(ByteArrayOutputStream.java:103) [bci: 31, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:132) [bci: 15, duringCall: true, rethrow: false]
              |0                                      |1             |2          |3        
     locals:  |rsi|QWORD[.]                           |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD 
     locks:   |monitor[rsi|QWORD[.], stack:32|QWORD]  |              |           |           <||@
  Comment 1814 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1814 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1820 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1820 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
