begin_compilation
  name " HotSpotCompilation-9982[java.lang.String.encode(Charset, byte, byte[])]"
  method "HotSpotCompilation-9982[java.lang.String.encode(Charset, byte, byte[])]"
  date 1724269762716
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.nio.charset.Charset
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v16 v19 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v25 v71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j170 v71 v50 v182 j109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v99 v181 a128 i179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 1]
rawvalue: UTF_8@1318781552
stableDimension: 0
stamp: a!# sun.nio.cs.UTF_8
stampKind: a java.lang.Object
value: Object[UTF_8@1318781552]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.999998260497463
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v8 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1298) [bci: 2]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1298) [bci: 2]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 1.0438649447497284E-5
stamp: void
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 5]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a30 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a30  <|@  <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
at java.lang.String.encode(String.java:867) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)>
=== Inputs ===
arguments: a3 i10 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 i10  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 867
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encodeUTF8(byte, byte[], boolean)>
localsSize: 9
locksSize: 0
sourceFile: String.java
sourceLine: 1299
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a30 <|@
d <@d|@=== Debug Properties ===
bci: 7
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
at java.lang.String.encode(String.java:867) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#String.encodeUTF8_UTF16
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v50 
stateDuring: ?91 
=== Succesors ===
next: v47 
=== Usages ===
a48 
=== Predecessor ===
v27 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v50 stateDuring: ?91 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
a30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1302) [bci: 11]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1302) [bci: 14]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: j109 
=== Usages ===
i36 v37 v158 j176 a128 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v182 lastLocationAccess: - #next: j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: i36 
=== Usages ===
j110 
=== Predecessor ===
i179 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: i36  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
x: j109 
y: j34 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j109 y: j34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
array: j110 
len: i179 
=== Succesors ===
next: v82 
=== Usages ===
v37 
=== Predecessor ===
j109 >@ <|@
instruction <@CountPositives|@jdk.graal.compiler.replacements.nodes.CountPositivesNode>@ lastLocationAccess: - array: j110 len: i179 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i179 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i36 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
i36 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 14]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j150 
=== Usages ===
v183 v184 
=== Predecessor ===
v168 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j150 v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: j151 
=== Usages ===
j118 v185 v186 a127 v190 v187 v188 v189 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
v119 
=== Predecessor ===
j150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v177 j138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i179  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j176 
y: j137 
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j176 y: j137  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j138 
y: j116 
=== Succesors ===
=== Usages ===
j118 v187 v188 v189 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j138 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid j118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
x: j117 
y: j150 
=== Succesors ===
=== Usages ===
v119 v152 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j117 y: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j151 
y: j118 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j151 y: j118  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
j151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v121 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v111 i179 
=== Succesors ===
next: v181 
=== Usages ===
v181 a148 
=== Predecessor ===
v121 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v111 i179 #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-42097|0xffffffffffff5b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a128 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a128 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a128 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: j118 
stateAfter: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: j118 stateAfter: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v187 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v187 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v188 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v188 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v189 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v189 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: j123 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: j123 stateAfter: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
value: v178 
stateAfter: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - value: v178 stateAfter: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: i179 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: i179 stateAfter: - #next: v126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j150 
=== Succesors ===
next: v130 
=== Usages ===
a148 
=== Predecessor ===
v126 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j150 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v131 
values: a127 a128 
=== Succesors ===
=== Usages ===
j174 a63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: a127 a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: j170 
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: j170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: j174 
=== Usages ===
v191 
=== Predecessor ===
v131 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a148 
=== Succesors ===
next: v177 
=== Usages ===
v192 
=== Predecessor ===
j170 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a148 #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j170 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j170 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j174 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v191 v192 j176 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v191 v192 j176 #next: v62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a63 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a!# byte[]
=== Inputs ===
object: a148 
=== Succesors ===
next: v49 
=== Usages ===
a48 
=== Predecessor ===
v62 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a148 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
a63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v46 
values: a30 a63 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v46 values: a30 a63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v47 v49 
=== Succesors ===
next: v14 
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v47 v49 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 13]
stamp: void
=== Inputs ===
memoryMap: - 
result: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a48  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -20243
stableDimension: 0
stamp: i32 [-20243]
stampKind: i32
value: int[-20243|0xffffffffffffb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 28]
rawvalue: US_ASCII@1731106892
stableDimension: 0
stamp: a!# sun.nio.cs.US_ASCII
stampKind: a java.lang.Object
value: Object[US_ASCII@1731106892]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a18 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a18  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v88 #falseSuccessor: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a22 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a22  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 36]
referencedType: [null]
returnStamp: a# byte[]
signature: [HotSpotResolvedPrimitiveType<byte>, UnresolvedJavaType<[B>]
stamp: void
targetMethod: HotSpotMethod<String.encodeASCII(byte, byte[])>
=== Inputs ===
arguments: i2 a3 
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2 a3  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 873
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a22 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 36]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#String.encodeASCII
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?92 
=== Succesors ===
next: v24 
=== Usages ===
v24 
=== Predecessor ===
v88 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?92 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 39]
stamp: void
=== Inputs ===
memoryMap: - 
result: a22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 15]
rawvalue: ISO_8859_1@803246410
stableDimension: 0
stamp: a!# sun.nio.cs.ISO_8859_1
stampKind: a java.lang.Object
value: Object[ISO_8859_1@803246410]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a15 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a15  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v84 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267]
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291]
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: i32 [-22291 - -20243] bits:1...101xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v93 
values: i95 i104 i107 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: i95 i104 i107  <|@  <|@
f <@~|@floating>@ <|@
tid j98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v93 
values: j96 j105 j108 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: j96 j105 j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v94 v103 v106 
=== Succesors ===
next: v99 
=== Usages ===
i97 j98 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v94 v103 v106 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i97 
speculation: j98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i97 speculation: j98  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.nio.charset.Charset
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 v16 v19 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v25 v71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 j170 v71 v50 v182 j109 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 866
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 
=== Succesors ===
=== Usages ===
v99 v181 a128 i179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 1]
rawvalue: UTF_8@1318781552
stableDimension: 0
stamp: a!# sun.nio.cs.UTF_8
stampKind: a java.lang.Object
value: Object[UTF_8@1318781552]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:866) [bci: 4]
profileData: PROFILED designatedSuccessorProbability: 0.999998260497463
stamp: void
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v8 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v8 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 v25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1298) [bci: 2]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1298) [bci: 2]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 1.0438649447497284E-5
stamp: void
=== Inputs ===
condition: v25 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v25 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 5]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a30 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a30  <|@  <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
at java.lang.String.encode(String.java:867) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<boolean>]
stamp: void
targetMethod: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)>
=== Inputs ===
arguments: a3 i10 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 i10  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 867
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encodeUTF8(byte, byte[], boolean)>
localsSize: 9
locksSize: 0
sourceFile: String.java
sourceLine: 1299
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?45 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a30 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 7
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
at java.lang.String.encode(String.java:867) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#String.encodeUTF8_UTF16
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v50 
stateDuring: ?91 
=== Succesors ===
next: v47 
=== Usages ===
a48 
=== Predecessor ===
v27 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v50 stateDuring: ?91 #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
a30 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1302) [bci: 11]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-13067|0xffffffffffffccf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.encodeUTF8(String.java:1302) [bci: 14]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: j109 
=== Usages ===
i36 v37 v158 j176 a128 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v182 lastLocationAccess: - #next: j109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j109 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: i36 
=== Usages ===
j110 
=== Predecessor ===
i179 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: i36  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j110 <|@
result v7|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
x: j109 
y: j34 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j109 y: j34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i36 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringCoding.countPositives(byte[], int, int) [bci: -1]
at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 3]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: i32
=== Inputs ===
lastLocationAccess: - 
array: j110 
len: i179 
=== Succesors ===
next: v82 
=== Usages ===
v37 
=== Predecessor ===
j109 >@ <|@
instruction <@CountPositives|@jdk.graal.compiler.replacements.nodes.CountPositivesNode>@ lastLocationAccess: - array: j110 len: i179 #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i179 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i36 y: i179  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
i36 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 14]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j112 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j150 
=== Usages ===
v183 v184 
=== Predecessor ===
v168 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j150 v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j150 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: j151 
=== Usages ===
j118 v185 v186 a127 v190 v187 v188 v189 
=== Predecessor ===
j112 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: j151  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j112 
index: - 
=== Succesors ===
=== Usages ===
j151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j112 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: v122 
=== Usages ===
v119 
=== Predecessor ===
j150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid j176 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v177 j138 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i179  <|@  <|@
f <@~|@floating>@ <|@
tid j137 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j138 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j176 
y: j137 
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j176 y: j137  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j117 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j138 
y: j116 
=== Succesors ===
=== Usages ===
j118 v187 v188 v189 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j138 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid j118 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
x: j117 
y: j150 
=== Succesors ===
=== Usages ===
v119 v152 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j117 y: j150  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j151 
y: j118 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j151 y: j118  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v121 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
j151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v121 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a128 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v111 i179 
=== Succesors ===
next: v181 
=== Usages ===
v181 a148 
=== Predecessor ===
v121 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v111 i179 #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-42097|0xffffffffffff5b8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a128 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
a128 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a128 #next: v132  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v122 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: j118 
stateAfter: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: j118 stateAfter: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v12|QWORD + v9|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v187 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v187 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v12|QWORD + v9|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v188 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v188 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v12|QWORD + v9|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j117 
index: j150 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: j150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
address: v189 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v189 #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: j123 
stateAfter: - 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: j123 stateAfter: - #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v9|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
value: v178 
stateAfter: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - value: v178 stateAfter: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v9|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j150 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j150 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: i179 
stateAfter: - 
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: i179 stateAfter: - #next: v126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j150 
=== Succesors ===
next: v130 
=== Usages ===
a148 
=== Predecessor ===
v126 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j150 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
a127 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a148 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v131 
values: a127 a128 
=== Succesors ===
=== Usages ===
j174 a63 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v131 values: a127 a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 
=== Succesors ===
next: j170 
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 #next: j170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j170 <|@
result v19|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a3 
=== Succesors ===
next: j174 
=== Usages ===
v191 
=== Predecessor ===
v131 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a3 #next: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: i64
=== Inputs ===
object: a148 
=== Succesors ===
next: v177 
=== Usages ===
v192 
=== Predecessor ===
j170 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a148 #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [v19|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j170 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j170 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v20|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j174 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v191 v192 j176 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v191 v192 j176 #next: v62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a63 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a63 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.lang.String.encodeUTF8(String.java:1303) [bci: 22]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: a!# byte[]
=== Inputs ===
object: a148 
=== Succesors ===
next: v49 
=== Usages ===
a48 
=== Predecessor ===
v62 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a148 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
a63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a48 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v46 
values: a30 a63 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v46 values: a30 a63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v47 v49 
=== Succesors ===
next: v14 
=== Usages ===
a48 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v47 v49 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:867) [bci: 13]
stamp: void
=== Inputs ===
memoryMap: - 
result: a48 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a48  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringCoding.hasNegatives(StringCoding.java:38) [bci: 7]
at java.lang.String.encodeUTF8(String.java:1302) [bci: 15]
at java.lang.String.encode(String.java:867) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid j108 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result int[-20243|0xffffffffffffb0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -20243
stableDimension: 0
stamp: i32 [-20243]
stampKind: i32
value: int[-20243|0xffffffffffffb0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 28]
rawvalue: US_ASCII@1731106892
stableDimension: 0
stamp: a!# sun.nio.cs.US_ASCII
stampKind: a java.lang.Object
value: Object[US_ASCII@1731106892]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a18 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a18  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v85 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v88 #falseSuccessor: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a22 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a22  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 36]
referencedType: [null]
returnStamp: a# byte[]
signature: [HotSpotResolvedPrimitiveType<byte>, UnresolvedJavaType<[B>]
stamp: void
targetMethod: HotSpotMethod<String.encodeASCII(byte, byte[])>
=== Inputs ===
arguments: i2 a3 
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i2 a3  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.encode(Charset, byte, byte[])>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 873
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
a22 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a22 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 36]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#String.encodeASCII
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?92 
=== Succesors ===
next: v24 
=== Usages ===
v24 
=== Predecessor ===
v88 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?92 #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:873) [bci: 39]
stamp: void
=== Inputs ===
memoryMap: - 
result: a22 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 15]
rawvalue: ISO_8859_1@803246410
stableDimension: 0
stamp: a!# sun.nio.cs.ISO_8859_1
stampKind: a java.lang.Object
value: Object[ISO_8859_1@803246410]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a15 
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a15  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v84 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid j96 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[-21267|0xffffffffffffaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267]
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v84 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:872) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291]
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i97 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: i32 [-22291 - -20243] bits:1...101xxx0011101101
valueDescription: i32
=== Inputs ===
merge: v93 
values: i95 i104 i107 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: i95 i104 i107  <|@  <|@
f <@~|@floating>@ <|@
tid j98 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v93 
values: j96 j105 j108 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v93 values: j96 j105 j108  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v94 v103 v106 
=== Succesors ===
next: v99 
=== Usages ===
i97 j98 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v94 v103 v106 #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.encode(String.java:869) [bci: 18]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i97 
speculation: j98 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i97 speculation: j98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   -1  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v21|q [0, 1[[88, 90[[212, 213[[234, 236[[266, 268[[298, 300[[354, 356[[358, 360[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[86, 88[[210, 213[[264, 266[[296, 299[[352, 355[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 26[[84, 88[[208, 213[[262, 266[[294, 299[[350, 355[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[206, 213[[298, 299[[354, 355[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [26, 130[[238, 271[[304, 320[[362, 429[26 MustHaveRegister 34 ShouldHaveRegister 318 ShouldHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [28, 130[[238, 271[[304, 350[[362, 429[28 MustHaveRegister 46 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [30, 202[[238, 294[[304, 352[[362, 429[30 MustHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 202 ShouldHaveRegister 294 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [78, 166[[238, 264[78 MustHaveRegister 86 ShouldHaveRegister 92 MustHaveRegister 120 ShouldHaveRegister 166 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v2|q [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [82, 84[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d rax|q [90, 92[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [118, 168[118 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v5|d [120, 210[[238, 274[120 MustHaveRegister 122 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [124, 161[124 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [126, 154[126 MustHaveRegister 128 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q rax|q [268, 273[268 MustHaveRegister 270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v9|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v17|q [172, 215[204 ShouldHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v2|q [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v18|q [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v18|q [216, 234[234 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q rax|q [356, 358[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v21|q [0, 1[[88, 90[[212, 213[[234, 236[[266, 268[[298, 300[[354, 356[[358, 360[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[86, 88[[210, 213[[264, 266[[296, 299[[352, 355[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 26[[84, 88[[208, 213[[262, 266[[294, 299[[350, 355[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[206, 213[[298, 299[[354, 355[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [26, 130[[238, 271[[304, 320[[362, 429[26 MustHaveRegister 34 ShouldHaveRegister 318 ShouldHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdi|d]" v1|d rdx|- [28, 130[[238, 271[[304, 350[[362, 429[28 MustHaveRegister 46 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [30, 202[[238, 294[[304, 352[[362, 429[30 MustHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 202 ShouldHaveRegister 294 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbp|d]" v5|d -1 [78, 166[[238, 264[78 MustHaveRegister 86 ShouldHaveRegister 92 MustHaveRegister 120 ShouldHaveRegister 166 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v2|q [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [82, 84[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|q [90, 92[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [118, 168[118 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|d [120, 210[[238, 274[120 MustHaveRegister 122 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [124, 161[124 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|q [126, 154[126 MustHaveRegister 128 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [268, 273[268 MustHaveRegister 270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v9|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v17|q [172, 207[204 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|q [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v18|q [216, 234[234 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [356, 358[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r11|q]" v26|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[vstack:0|q]" v18|q v18|q [207, 211[ "OneSpillStore"
  v28|q QWORD "[vstack:0|q]" v18|q v18|q [211, 215[214 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = STACKMOVE (input: v27|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v21|q [0, 1[[88, 90[[212, 213[[234, 236[[266, 268[[298, 300[[354, 356[[358, 360[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[86, 88[[210, 213[[264, 266[[296, 299[[352, 355[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 26[[84, 88[[208, 213[[262, 266[[294, 299[[350, 355[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[206, 213[[298, 299[[354, 355[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [26, 130[[238, 271[[304, 320[[362, 429[26 MustHaveRegister 34 ShouldHaveRegister 318 ShouldHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdi|d]" v1|d rdx|- [28, 130[[238, 271[[304, 350[[362, 429[28 MustHaveRegister 46 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [30, 202[[238, 294[[304, 352[[362, 429[30 MustHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 202 ShouldHaveRegister 294 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbp|d]" v5|d -1 [78, 166[[238, 264[78 MustHaveRegister 86 ShouldHaveRegister 92 MustHaveRegister 120 ShouldHaveRegister 166 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v2|q [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [82, 84[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|q [90, 92[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [118, 168[118 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|d [120, 210[[238, 274[120 MustHaveRegister 122 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [124, 161[124 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|q [126, 154[126 MustHaveRegister 128 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [268, 273[268 MustHaveRegister 270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v9|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v17|q [172, 207[204 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|q [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v18|q [216, 234[234 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [356, 358[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r11|q]" v26|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[vstack:0|q]" v18|q v18|q [207, 211[ "OneSpillStore"
  v28|q QWORD "[vstack:0|q]" v18|q v18|q [211, 215[214 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = STACKMOVE (input: v27|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v15|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v4|QWORD[.]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [int[-20243|0xffffffffffffb0ed], long[1300|0x514]] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-22291|0xffffffffffffa8ed], long[660|0x294]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-21267|0xffffffffffffaced], long[20|0x14]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v21|q [0, 1[[88, 90[[212, 213[[234, 236[[266, 268[[298, 300[[354, 356[[358, 360[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 30[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v5|d [0, 28[[86, 88[[210, 213[[264, 266[[296, 299[[352, 355[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 22[[212, 213[[298, 299[[354, 355[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v7|q [0, 26[[84, 88[[208, 213[[262, 266[[294, 299[[350, 355[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[206, 213[[298, 299[[354, 355[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[88, 89[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[212, 213[[298, 299[[354, 355[ "NoDefinitionFound"
  v0|q QWORD "[rbx|q]" v0|q rsi|- [26, 130[[238, 271[[304, 320[[362, 429[26 MustHaveRegister 34 ShouldHaveRegister 318 ShouldHaveRegister 386 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdi|d]" v1|d rdx|- [28, 130[[238, 271[[304, 350[[362, 429[28 MustHaveRegister 46 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [30, 202[[238, 294[[304, 352[[362, 429[30 MustHaveRegister 78 MustHaveRegister 80 ShouldHaveRegister 202 ShouldHaveRegister 294 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rsi|q]" v3|q -1 [32, 34[32 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q rax|q [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbp|d]" v5|d -1 [78, 166[[238, 264[78 MustHaveRegister 86 ShouldHaveRegister 92 MustHaveRegister 120 ShouldHaveRegister 166 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q v2|q [80, 82[80 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [82, 84[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|q [90, 92[90 MustHaveRegister 92 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [118, 168[118 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|d [120, 210[[238, 274[120 MustHaveRegister 122 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdx|q]" v11|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q v11|q [124, 161[124 MustHaveRegister 126 ShouldHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[r11|q]" v13|q v12|q [126, 154[126 MustHaveRegister 128 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [260, 262[260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q rax|q [268, 273[268 MustHaveRegister 270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v9|q [168, 171[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v17|q [172, 207[204 ShouldHaveRegister  "OneSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|q [202, 206[202 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v18|q [204, 208[204 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q v18|q [216, 234[234 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q rax|q [356, 358[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r10|d]" v25|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[r11|q]" v26|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[vstack:0|q]" v18|q v18|q [207, 211[ "OneSpillStore"
  v28|q QWORD "[vstack:0|q]" v18|q v18|q [211, 215[214 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = STACKMOVE (input: v27|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [v21|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [v25|DWORD, v26|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: v3|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV input: [v2|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction v6|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction v7|QWORD[*] = LEA address: [v6|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   90  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v8|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction v9|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction v11|QWORD = LEA address: [v10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction v12|QWORD = AND x: v11|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: v13|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: v13|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [v12|QWORD + v9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [v9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [v9|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [v9|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction v17|QWORD[.] = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v19|QWORD[*] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction v20|QWORD[*] = MOVE input: v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [v19|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [v20|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = STACKMOVE (input: v27|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v28|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  262  <|@ instruction rsi|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  268  <|@ instruction v15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v15|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v15|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr  300  <|@ instruction v4|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction v22|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: v22|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  356  <|@ instruction v23|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rax|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction v24|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: v24|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v25|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v26|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  120  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  126  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  264  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  270  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  386  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [268, 276[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [268, 276[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552] <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  118  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  146  <|@ instruction r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD <|@ <|@
      nr  152  <|@ instruction r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607092238213500851
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  220  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  222  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182309109139482
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  268  <|@ instruction stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182403131971453
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918159101925807
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  180  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 4532279505823384256
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.encodeUTF8(String.java:1299) [bci: 7]
locals: - - - - - - - - - 
java.lang.String.encode(String.java:867) [bci: 10]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10] <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892] <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4520821395102892032
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.String.encode(String.java:873) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36] <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  312  <|@ instruction r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed] <|@ <|@
      nr  314  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" "B9" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
java.lang.String.encode(String.java:866) [bci: 0]
locals: rbx|QWORD[.] rdi|DWORD rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410] <|@ <|@
      nr  384  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  410  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr  412  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  396  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getstatic     #18         // sun.nio.cs.UTF_8.INSTANCE:sun.nio.cs.UTF_8
     4: if_acmpne     14
     7: iload_1       
     8: aload_2       
     9: iconst_1      
    10: invokestatic  #55         // encodeUTF8:(byte, byte[], boolean)byte[]
    13: areturn       
    14: aload_0       
    15: getstatic     #25         // sun.nio.cs.ISO_8859_1.INSTANCE:sun.nio.cs.ISO_8859_1
    18: if_acmpne     27
    21: iload_1       
    22: aload_2       
    23: invokestatic  #56         // encode8859_1:(byte, byte[])byte[]
    26: areturn       
    27: aload_0       
    28: getstatic     #27         // sun.nio.cs.US_ASCII.INSTANCE:sun.nio.cs.US_ASCII
    31: if_acmpne     40
    34: iload_1       
    35: aload_2       
    36: invokestatic  #57         // encodeASCII:(byte, byte[])byte[]
    39: areturn       
    40: aload_0       
    41: iload_1       
    42: aload_2       
    43: iconst_1      
    44: invokestatic  #58         // encodeWithEncoder:(java.nio.charset.Charset, byte, byte[], boolean)byte[]
    47: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85260200009090909090909090909048896c2410488bde8bfa48beaddeaddeaddeadde483bf30f853c0100009090909083ff010f840a01000090909090909090909090909090908b690c488bf1488d76108bd5e8000000003be80f855d0100009090909090909090909090498bb7b8010000448bd5498d52174883e2f84c8bda4c03de4d3b9fc80100000f878900000090909090909090909090904d899fb80100000f188432000100000f188432400100000f1884328001000048c70601000000c74608addeadde896e0c9090909090909090909090909090488bd6488d791048893424488d7210498bd2e800000000488b34249090909090909090488bc6488b6c24104883c418493ba7500400000f8726010000c5f877c39090909090909090909048beaddeaddeaddeadde8bd5e8000000000f1f8400000000008500488bf0eb88909090909090909090488bf1ba010000006690e8000000000f1f840000000000488bf0eb8c909090909048beaddeaddeaddeadde483bf30f856f00000090909090909090909090909090908bf7488bd1666690e8000000000f1f840000000000488b6c24104883c418493ba7500400000f8796000000c5f877c390909049c7c31405000041baedb0ffff90909090909090458997840400004d899f90040000e8000000000f1f840000000000909090909049baaddeaddeaddeadde4c3bd30f841200000090909049c7c39402000041baeda8ffffebb490909049c7c31400000041baedacffffeba248896c2410e800000000e9cbfdfffff4488d0dc6feffff49898f68040000e99dfdfffff4488d0d56ffffff49898f68040000e989fdfffff441c78784040000f5ccffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f5bffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 41 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD  <||@
  Comment 41 26 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 44 28 rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 46 30 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552]  <||@
  Comment 46 {Object[UTF_8@1318781552]}  <||@
  Comment 56 32 CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD  <||@
  Comment 65 block B1 null  <||@
  Comment 65 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 65 36 NOP  <||@
  Comment 66 38 NOP  <||@
  Comment 67 40 NOP  <||@
  Comment 68 42 NOP  <||@
  Comment 69 44 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 78 block B3 null  <||@
  Comment 78 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 78 NOP  <||@
  Comment 79 80 NOP  <||@
  Comment 80 82 NOP  <||@
  Comment 81 84 NOP  <||@
  Comment 82 86 NOP  <||@
  Comment 83 88 NOP  <||@
  Comment 84 90 NOP  <||@
  Comment 85 92 NOP  <||@
  Comment 86 94 NOP  <||@
  Comment 87 96 NOP  <||@
  Comment 88 98 NOP  <||@
  Comment 89 100 NOP  <||@
  Comment 90 102 NOP  <||@
  Comment 91 104 NOP  <||@
  Comment 92 106 rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 92 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 108 rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 98 110 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 102 112 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 102 114 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 104 116 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL  <||@
  Comment 104 {Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 109 118 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 122 NOP  <||@
  Comment 118 124 NOP  <||@
  Comment 119 126 NOP  <||@
  Comment 120 128 NOP  <||@
  Comment 121 130 NOP  <||@
  Comment 122 132 NOP  <||@
  Comment 123 134 NOP  <||@
  Comment 124 136 NOP  <||@
  Comment 125 138 NOP  <||@
  Comment 126 140 NOP  <||@
  Comment 127 142 NOP  <||@
  Comment 128 144 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 135 146 r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 138 148 rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD  <||@
  Comment 142 150 rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD  <||@
  Comment 146 152 r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 152 154 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 165 block B6 null  <||@
  Comment 165 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 192 NOP  <||@
  Comment 166 194 NOP  <||@
  Comment 167 196 NOP  <||@
  Comment 168 198 NOP  <||@
  Comment 169 200 NOP  <||@
  Comment 170 202 NOP  <||@
  Comment 171 204 NOP  <||@
  Comment 172 206 NOP  <||@
  Comment 173 208 NOP  <||@
  Comment 174 210 NOP  <||@
  Comment 175 212 NOP  <||@
  Comment 176 214 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 183 216 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 191 218 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 199 220 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 207 222 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 214 224 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 221 226 MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 224 228 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 224 230 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 224 block B7 null  <||@
  Comment 224 232 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 224 234 NOP  <||@
  Comment 225 236 NOP  <||@
  Comment 226 238 NOP  <||@
  Comment 227 240 NOP  <||@
  Comment 228 242 NOP  <||@
  Comment 229 244 NOP  <||@
  Comment 230 246 NOP  <||@
  Comment 231 248 NOP  <||@
  Comment 232 250 NOP  <||@
  Comment 233 252 NOP  <||@
  Comment 234 254 NOP  <||@
  Comment 235 256 NOP  <||@
  Comment 236 258 NOP  <||@
  Comment 237 260 NOP  <||@
  Comment 238 262 rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 238 264 rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 241 266 rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD  <||@
  Comment 245 268 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 249 270 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 253 272 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 256 274 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 256 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 261 276 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 265 278 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 265 block B8 null  <||@
  Comment 265 280 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 265 282 NOP  <||@
  Comment 266 284 NOP  <||@
  Comment 267 286 NOP  <||@
  Comment 268 288 NOP  <||@
  Comment 269 290 NOP  <||@
  Comment 270 292 NOP  <||@
  Comment 271 294 NOP  <||@
  Comment 272 296 NOP  <||@
  Comment 273 298 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 276 300 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 285 POLL_RETURN_FAR  <||@
  Comment 302 block B5 null  <||@
  Comment 302 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 302 158 NOP  <||@
  Comment 303 160 NOP  <||@
  Comment 304 162 NOP  <||@
  Comment 305 164 NOP  <||@
  Comment 306 166 NOP  <||@
  Comment 307 168 NOP  <||@
  Comment 308 170 NOP  <||@
  Comment 309 172 NOP  <||@
  Comment 310 174 NOP  <||@
  Comment 311 176 NOP  <||@
  Comment 312 178 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 312 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 322 180 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 324 182 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 324 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 329 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 337 184 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 337 [rax:0, rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 337 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 339 186 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 188 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 344 block B2 null  <||@
  Comment 344 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 48 NOP  <||@
  Comment 345 50 NOP  <||@
  Comment 346 52 NOP  <||@
  Comment 347 54 NOP  <||@
  Comment 348 56 NOP  <||@
  Comment 349 58 NOP  <||@
  Comment 350 60 NOP  <||@
  Comment 351 62 NOP  <||@
  Comment 352 64 NOP  <||@
  Comment 353 66 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 356 68 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 361 70 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10]  <||@
  Comment 363 {HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)>}  <||@
  Comment 363 INVOKESTATIC  <||@
  Comment 368 []at java.lang.String.encodeUTF8(String.java:1299) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.String.encode(String.java:867) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 376 72 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 379 74 JUMP ~outgoingValues: [] destination: B2 -> B8  <||@
  Comment 381 block B10 null  <||@
  Comment 381 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 318 NOP  <||@
  Comment 382 320 NOP  <||@
  Comment 383 322 NOP  <||@
  Comment 384 324 NOP  <||@
  Comment 385 326 NOP  <||@
  Comment 386 328 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892]  <||@
  Comment 386 {Object[US_ASCII@1731106892]}  <||@
  Comment 396 330 CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 405 block B11 null  <||@
  Comment 405 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 334 NOP  <||@
  Comment 406 336 NOP  <||@
  Comment 407 338 NOP  <||@
  Comment 408 340 NOP  <||@
  Comment 409 342 NOP  <||@
  Comment 410 344 NOP  <||@
  Comment 411 346 NOP  <||@
  Comment 412 348 NOP  <||@
  Comment 413 350 NOP  <||@
  Comment 414 352 NOP  <||@
  Comment 415 354 NOP  <||@
  Comment 416 356 NOP  <||@
  Comment 417 358 NOP  <||@
  Comment 418 360 NOP  <||@
  Comment 419 362 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 421 364 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 424 366 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36]  <||@
  Comment 427 {HotSpotMethod<String.encodeASCII(byte, byte[])>}  <||@
  Comment 427 INVOKESTATIC  <||@
  Comment 432 []at java.lang.String.encode(String.java:873) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 440 368 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 449 POLL_RETURN_FAR  <||@
  Comment 466 block B9 null  <||@
  Comment 466 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 466 304 NOP  <||@
  Comment 467 306 NOP  <||@
  Comment 468 308 NOP  <||@
  Comment 469 310 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 476 312 r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed]  <||@
  Comment 482 314 JUMP ~outgoingValues: [] destination: B9 -> B15  <||@
  Comment 482 block B15 null  <||@
  Comment 482 414 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 482 416 NOP  <||@
  Comment 483 418 NOP  <||@
  Comment 484 420 NOP  <||@
  Comment 485 422 NOP  <||@
  Comment 486 424 NOP  <||@
  Comment 487 426 NOP  <||@
  Comment 488 428 NOP  <||@
  Comment 489 430 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 496 432 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 503 434 DEOPT info [bci:0]  <||@
  Comment 503 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 508 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 516 block B12 null  <||@
  Comment 516 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 516 372 NOP  <||@
  Comment 517 374 NOP  <||@
  Comment 518 376 NOP  <||@
  Comment 519 378 NOP  <||@
  Comment 520 380 NOP  <||@
  Comment 521 382 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410]  <||@
  Comment 521 {Object[ISO_8859_1@803246410]}  <||@
  Comment 531 384 CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 540 block B14 null  <||@
  Comment 540 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 402 NOP  <||@
  Comment 541 404 NOP  <||@
  Comment 542 406 NOP  <||@
  Comment 543 408 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 550 410 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 556 412 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 558 block B13 null  <||@
  Comment 558 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 388 NOP  <||@
  Comment 559 390 NOP  <||@
  Comment 560 392 NOP  <||@
  Comment 561 394 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 568 396 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 574 398 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 581 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 606 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 626 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 659 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 694 [rax:0, rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 702 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 702 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 708 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9982[java.lang.String.encode(Charset, byte, byte[])]"
  method "HotSpotCompilation-9982[java.lang.String.encode(Charset, byte, byte[])]"
  date 1724269762900
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af5f1c0 89842400c0feff4883ec189041817f20000000000f85260200009090909090909090909048896c2410488bde8bfa48bee8cad72d06000000483bf30f853c0100009090909083ff010f840a01000090909090909090909090909090908b690c488bf1488d76108bd5e8532898fe3be80f855d0100009090909090909090909090498bb7b8010000448bd5498d52174883e2f84c8bda4c03de4d3b9fc80100000f878900000090909090909090909090904d899fb80100000f188432000100000f188432400100000f1884328001000048c70601000000c74608c0220000896e0c9090909090909090909090909090488bd6488d791048893424488d7210498bd2e87baa80fe488b34249090909090909090488bc6488b6c24104883c418493ba7500400000f8726010000c5f877c39090909090909090909048bec022002b787f00008bd5e8f7f896fe0f1f8400000000008500488bf0eb88909090909090909090488bf1ba010000006690e8506682fe0f1f840020030003488bf0eb8c909090909048be1008e72d06000000483bf30f856f00000090909090909090909090909090908bf7488bd1666690e8106682fe0f1f840060030004488b6c24104883c418493ba7500400000f8796000000c5f877c390909049c7c31405000041baedb0ffff90909090909090458997840400004d899f90040000e8bebd82fe0f1f840000000000909090909049ba7008e72d060000004c3bd30f841200000090909049c7c39402000041baeda8ffffebb490909049c7c31400000041baedacffffeba248896c2410e816be80fee9cbfdfffff4488d0dc6feffff49898f68040000e9ddcb82fef4488d0d56ffffff49898f68040000e9c9cb82fef441c78784040000f5ccffff49c7879004000000000000e827bd82fe0f1f84000000000041c787840400008f5bffff49c7879004000000000000e804bd82fe0f1f840000000000e87d5e96fef4e897ba82fef4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 41 24 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6bb310d8 slotKind: QWORD  <||@
  Comment 41 26 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 44 28 rdi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 46 30 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[UTF_8@1318781552]  <||@
  Comment 46 {Object[UTF_8@1318781552]}  <||@
  Comment 56 32 CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.999998260497463 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 size: QWORD  <||@
  Comment 65 block B1 null  <||@
  Comment 65 34 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 65 36 NOP  <||@
  Comment 66 38 NOP  <||@
  Comment 67 40 NOP  <||@
  Comment 68 42 NOP  <||@
  Comment 69 44 CMPCONSTBRANCH x: rdi|DWORD trueDestinationProbability: 1.0438649447497284E-5 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 y: 1 size: DWORD inlinedY: null  <||@
  Comment 78 block B3 null  <||@
  Comment 78 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 78 78 NOP  <||@
  Comment 79 80 NOP  <||@
  Comment 80 82 NOP  <||@
  Comment 81 84 NOP  <||@
  Comment 82 86 NOP  <||@
  Comment 83 88 NOP  <||@
  Comment 84 90 NOP  <||@
  Comment 85 92 NOP  <||@
  Comment 86 94 NOP  <||@
  Comment 87 96 NOP  <||@
  Comment 88 98 NOP  <||@
  Comment 89 100 NOP  <||@
  Comment 90 102 NOP  <||@
  Comment 91 104 NOP  <||@
  Comment 92 106 rbp|DWORD = MOV input: [rcx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 92 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 108 rsi|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 98 110 rsi|QWORD[*] = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 102 112 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 102 114 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 104 116 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL  <||@
  Comment 104 {Stub<IntrinsicStubsGen.stringCodingCountPositives>@0x7f78998e1a80:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 109 118 CMPBRANCH (x: rbp|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B9 size: DWORD  <||@
  Comment 117 block B4 null  <||@
  Comment 117 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 117 122 NOP  <||@
  Comment 118 124 NOP  <||@
  Comment 119 126 NOP  <||@
  Comment 120 128 NOP  <||@
  Comment 121 130 NOP  <||@
  Comment 122 132 NOP  <||@
  Comment 123 134 NOP  <||@
  Comment 124 136 NOP  <||@
  Comment 125 138 NOP  <||@
  Comment 126 140 NOP  <||@
  Comment 127 142 NOP  <||@
  Comment 128 144 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 135 146 r10|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 138 148 rdx|QWORD = LEA address: [r10|QWORD + 23] size: QWORD  <||@
  Comment 142 150 rdx|QWORD = AND x: rdx|QWORD y: -8 size: QWORD  <||@
  Comment 146 152 r11|QWORD = ADD (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 152 154 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 165 block B6 null  <||@
  Comment 165 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 192 NOP  <||@
  Comment 166 194 NOP  <||@
  Comment 167 196 NOP  <||@
  Comment 168 198 NOP  <||@
  Comment 169 200 NOP  <||@
  Comment 170 202 NOP  <||@
  Comment 171 204 NOP  <||@
  Comment 172 206 NOP  <||@
  Comment 173 208 NOP  <||@
  Comment 174 210 NOP  <||@
  Comment 175 212 NOP  <||@
  Comment 176 214 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 183 216 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 191 218 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 199 220 AMD64PREFETCH ~address: [rdx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 207 222 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 214 224 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 221 226 MOV (x: [rsi|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 224 228 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 224 230 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 224 block B7 null  <||@
  Comment 224 232 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 224 234 NOP  <||@
  Comment 225 236 NOP  <||@
  Comment 226 238 NOP  <||@
  Comment 227 240 NOP  <||@
  Comment 228 242 NOP  <||@
  Comment 229 244 NOP  <||@
  Comment 230 246 NOP  <||@
  Comment 231 248 NOP  <||@
  Comment 232 250 NOP  <||@
  Comment 233 252 NOP  <||@
  Comment 234 254 NOP  <||@
  Comment 235 256 NOP  <||@
  Comment 236 258 NOP  <||@
  Comment 237 260 NOP  <||@
  Comment 238 262 rcx|QWORD[*] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 238 264 rdx|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 241 266 rdi|QWORD = LEA address: [rcx|QWORD[*] + 16] size: QWORD  <||@
  Comment 245 268 stack:32|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 249 270 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 253 272 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 256 274 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 256 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 261 276 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 265 278 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 265 block B8 null  <||@
  Comment 265 280 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 265 282 NOP  <||@
  Comment 266 284 NOP  <||@
  Comment 267 286 NOP  <||@
  Comment 268 288 NOP  <||@
  Comment 269 290 NOP  <||@
  Comment 270 292 NOP  <||@
  Comment 271 294 NOP  <||@
  Comment 272 296 NOP  <||@
  Comment 273 298 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 276 300 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 285 POLL_RETURN_FAR  <||@
  Comment 302 block B5 null  <||@
  Comment 302 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 302 158 NOP  <||@
  Comment 303 160 NOP  <||@
  Comment 304 162 NOP  <||@
  Comment 305 164 NOP  <||@
  Comment 306 166 NOP  <||@
  Comment 307 168 NOP  <||@
  Comment 308 170 NOP  <||@
  Comment 309 172 NOP  <||@
  Comment 310 174 NOP  <||@
  Comment 311 176 NOP  <||@
  Comment 312 178 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 312 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 322 180 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 324 182 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 324 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 329 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 337 184 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 337 [rax:0, rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 337 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 339 186 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 342 188 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 344 block B2 null  <||@
  Comment 344 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 344 48 NOP  <||@
  Comment 345 50 NOP  <||@
  Comment 346 52 NOP  <||@
  Comment 347 54 NOP  <||@
  Comment 348 56 NOP  <||@
  Comment 349 58 NOP  <||@
  Comment 350 60 NOP  <||@
  Comment 351 62 NOP  <||@
  Comment 352 64 NOP  <||@
  Comment 353 66 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 356 68 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 361 70 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:7, 10]  <||@
  Comment 363 {HotSpotMethod<String.encodeUTF8_UTF16(byte[], boolean)>}  <||@
  Comment 363 INVOKESTATIC  <||@
  Comment 368 []at java.lang.String.encodeUTF8(String.java:1299) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.String.encode(String.java:867) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 376 72 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 379 74 JUMP ~outgoingValues: [] destination: B2 -> B8  <||@
  Comment 381 block B10 null  <||@
  Comment 381 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 381 318 NOP  <||@
  Comment 382 320 NOP  <||@
  Comment 383 322 NOP  <||@
  Comment 384 324 NOP  <||@
  Comment 385 326 NOP  <||@
  Comment 386 328 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[US_ASCII@1731106892]  <||@
  Comment 386 {Object[US_ASCII@1731106892]}  <||@
  Comment 396 330 CMPBRANCH (x: rsi|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: QWORD  <||@
  Comment 405 block B11 null  <||@
  Comment 405 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 405 334 NOP  <||@
  Comment 406 336 NOP  <||@
  Comment 407 338 NOP  <||@
  Comment 408 340 NOP  <||@
  Comment 409 342 NOP  <||@
  Comment 410 344 NOP  <||@
  Comment 411 346 NOP  <||@
  Comment 412 348 NOP  <||@
  Comment 413 350 NOP  <||@
  Comment 414 352 NOP  <||@
  Comment 415 354 NOP  <||@
  Comment 416 356 NOP  <||@
  Comment 417 358 NOP  <||@
  Comment 418 360 NOP  <||@
  Comment 419 362 rsi|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 421 364 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 424 366 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD, rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<String.encodeASCII(byte, byte[])> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:36]  <||@
  Comment 427 {HotSpotMethod<String.encodeASCII(byte, byte[])>}  <||@
  Comment 427 INVOKESTATIC  <||@
  Comment 432 []at java.lang.String.encode(String.java:873) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 440 368 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 449 POLL_RETURN_FAR  <||@
  Comment 466 block B9 null  <||@
  Comment 466 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 466 304 NOP  <||@
  Comment 467 306 NOP  <||@
  Comment 468 308 NOP  <||@
  Comment 469 310 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 476 312 r10|DWORD = MOVE input: int[-20243|0xffffffffffffb0ed]  <||@
  Comment 482 314 JUMP ~outgoingValues: [] destination: B9 -> B15  <||@
  Comment 482 block B15 null  <||@
  Comment 482 414 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 482 416 NOP  <||@
  Comment 483 418 NOP  <||@
  Comment 484 420 NOP  <||@
  Comment 485 422 NOP  <||@
  Comment 486 424 NOP  <||@
  Comment 487 426 NOP  <||@
  Comment 488 428 NOP  <||@
  Comment 489 430 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 496 432 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 503 434 DEOPT info [bci:0]  <||@
  Comment 503 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 508 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 516 block B12 null  <||@
  Comment 516 370 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 516 372 NOP  <||@
  Comment 517 374 NOP  <||@
  Comment 518 376 NOP  <||@
  Comment 519 378 NOP  <||@
  Comment 520 380 NOP  <||@
  Comment 521 382 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[ISO_8859_1@803246410]  <||@
  Comment 521 {Object[ISO_8859_1@803246410]}  <||@
  Comment 531 384 CMPBRANCH (x: r10|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 540 block B14 null  <||@
  Comment 540 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 540 402 NOP  <||@
  Comment 541 404 NOP  <||@
  Comment 542 406 NOP  <||@
  Comment 543 408 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 550 410 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 556 412 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 558 block B13 null  <||@
  Comment 558 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 558 388 NOP  <||@
  Comment 559 390 NOP  <||@
  Comment 560 392 NOP  <||@
  Comment 561 394 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 568 396 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 574 398 JUMP ~outgoingValues: [] destination: B13 -> B15  <||@
  Comment 581 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 606 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 626 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 659 [rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 694 [rax:0, rcx:0, rbx:0]at java.lang.String.encode(String.java:866) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2            
     locals:  |rbx|QWORD[.]  |rdi|DWORD  |rcx|QWORD[.]   <||@
  Comment 702 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 702 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 708 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
