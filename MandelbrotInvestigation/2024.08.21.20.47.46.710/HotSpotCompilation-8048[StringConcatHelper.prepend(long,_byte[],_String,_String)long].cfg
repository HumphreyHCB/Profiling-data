begin_compilation
  name " HotSpotCompilation-8048[java.lang.StringConcatHelper.prepend(long, byte[], String, String)]"
  method "HotSpotCompilation-8048[java.lang.StringConcatHelper.prepend(long, byte[], String, String)]"
  date 1724269753857
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a379  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j364 ?85 j377 j368 j355 v394 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v390 v388 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?85 v10 v393 v391 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: lload_0
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 343
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: j1 - a2 a3 a4 
=== Succesors ===
=== Usages ===
v320 a379 i381 i382 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - a2 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a379 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-38411|0xffffffffffff69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v388 
lastLocationAccess: - 
=== Succesors ===
next: i380 
=== Usages ===
a154 v389 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v388 lastLocationAccess: - #next: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v390 
lastLocationAccess: - 
=== Succesors ===
next: i381 
=== Usages ===
i163 
=== Predecessor ===
a379 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v390 lastLocationAccess: - #next: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a379 
=== Succesors ===
=== Usages ===
i381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-41995|0xffffffffffff5bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v389 
lastLocationAccess: - 
=== Succesors ===
next: i382 
=== Usages ===
i35 j360 v74 i66 i176 
=== Predecessor ===
i380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v389 lastLocationAccess: - #next: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-64779|0xffffffffffff02f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v394 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
i139 i176 i217 
=== Predecessor ===
i381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v394 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i380 
=== Succesors ===
=== Usages ===
i35 v40 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i380  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i381 
y: i163 
=== Succesors ===
=== Usages ===
j37 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i381 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j37 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i35 
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j1 
y: j37 
=== Succesors ===
=== Usages ===
v26 i28 j146 ?83 j86 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1 y: j37  <|@  <|@
f <@~|@floating>@ <|@
tid j24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 4294967296
stableDimension: 0
stamp: i64 [4294967296]
stampKind: i64
value: long[4294967296|0x100000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j23 
y: j24 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j23 y: j24  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j339 j319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i382 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v272 #falseSuccessor: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j72 i139 j131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i382 
y: i65 
=== Succesors ===
=== Usages ===
v127 v67 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 32
stamp: i32
=== Inputs ===
value: j23 
=== Succesors ===
=== Usages ===
j356 j386 v60 i66 v177 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j23  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 v101 v121 v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i25 
=== Succesors ===
=== Usages ===
v306 v298 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i25 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a379 
=== Succesors ===
=== Usages ===
j351 j362 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a379  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j339 j339 j319 j319 j319 j319 j339 j339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 j81 j376 j140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v296 #falseSuccessor: v297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -75545
stableDimension: 0
stamp: i32 [-75545]
stampKind: i32
value: int[-75545|0xfffffffffffed8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i382 
y: i381 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i382 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i28 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v300 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -76569
stableDimension: 0
stamp: i32 [-76569]
stampKind: i32
value: int[-76569|0xfffffffffffed4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j351 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: j355 
=== Usages ===
v395 
=== Predecessor ===
v301 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a154 #next: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v361 
=== Usages ===
v396 
=== Predecessor ===
j351 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j355 
index: j356 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: j356  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i381 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v395 v396 j360 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
j355 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v395 v396 j360 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -77593
stableDimension: 0
stamp: i32 [-77593]
stampKind: i32
value: int[-77593|0xfffffffffffed0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v304 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32
=== Inputs ===
x: i28 
y: i381 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i66 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -78617
stableDimension: 0
stamp: i32 [-78617]
stampKind: i32
value: int[-78617|0xfffffffffffecce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j362 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: j364 
=== Usages ===
j363 
=== Predecessor ===
v309 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a154 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v74 
=== Usages ===
j365 
=== Predecessor ===
j362 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j362 
y: j69 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j362 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
j72 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j386 
y: i65 
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j386 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j72 
y: j69 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j72 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j81 
y: j364 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j81 y: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j363 
dst: j365 
len: i381 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
j364 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j363 dst: j365 len: i381 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 9]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 9]
profileData: PROFILED designatedSuccessorProbability: 0.7738373684898093
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a383  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
lastLocationAccess: - 
=== Succesors ===
next: i384 
=== Usages ===
a196 v392 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 lastLocationAccess: - #next: i384  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 343
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a2 - a4 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a2 - a4  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String)>
localsSize: 4
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
values: j23 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85 values: j23  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: return
code: ResolvedJavaMethodBytecode<String.getBytes(byte[], int, byte)>
localsSize: 4
locksSize: 0
sourceFile: String.java
sourceLine: 4730
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
=== Succesors ===
=== Usages ===
v340 i384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i384 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52491|0xffffffffffff32f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?79 
guard: - 
address: v392 
lastLocationAccess: - 
=== Succesors ===
next: i385 
=== Usages ===
i96 j373 v133 i126 i217 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?79 guard: - address: v392 lastLocationAccess: - #next: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v278 
=== Usages ===
i204 
=== Predecessor ===
i384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
i96 v101 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i384 
y: i204 
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i384 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j98 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
j86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i96  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j23 
y: j98 
=== Succesors ===
=== Usages ===
v87 i89 j146 j146 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j23 y: j98  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j86 
y: j24 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j86 y: j24  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
i385 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v276 #falseSuccessor: v277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 32
stamp: i32
=== Inputs ===
value: j86 
=== Succesors ===
=== Usages ===
j369 j387 v121 i126 v218 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j86  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i25 
=== Succesors ===
=== Usages ===
v290 v282 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i25 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i204 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a383 
=== Succesors ===
=== Usages ===
j366 j375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a383  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v280 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -71449
stableDimension: 0
stamp: i32 [-71449]
stampKind: i32
value: int[-71449|0xfffffffffffee8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i382 
y: i384 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i382 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i217 
y: i89 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i217 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -72473
stableDimension: 0
stamp: i32 [-72473]
stampKind: i32
value: int[-72473|0xfffffffffffee4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j366 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a196 
=== Succesors ===
next: j368 
=== Usages ===
v397 
=== Predecessor ===
v285 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a196 #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v374 
=== Usages ===
v398 
=== Predecessor ===
j366 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j366 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j369 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j368 
index: j369 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: j369  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i384 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v397 v398 j373 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v397 v398 j373 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -73497
stableDimension: 0
stamp: i32 [-73497]
stampKind: i32
value: int[-73497|0xfffffffffffee0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32
=== Inputs ===
x: i89 
y: i384 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i89 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i126 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v292 #falseSuccessor: v293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -74521
stableDimension: 0
stamp: i32 [-74521]
stampKind: i32
value: int[-74521|0xfffffffffffedce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a196 
=== Succesors ===
next: j377 
=== Usages ===
j376 
=== Predecessor ===
v293 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a196 #next: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v133 
=== Usages ===
j378 
=== Predecessor ===
j375 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j375 
y: j69 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j375 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j387 
y: i65 
=== Succesors ===
=== Usages ===
j140 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j387 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid j140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j131 
y: j69 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j131 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j140 
y: j377 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j140 y: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j376 
dst: j378 
len: i384 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j376 dst: j378 len: i384 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: i64 [-9223372036854775808 - 4294967295]
valueDescription: i64
=== Inputs ===
merge: v18 
values: j23 j86 j86 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v18 values: j23 j86 j86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v19 v145 
=== Succesors ===
next: v22 
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v19 v145 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: j146 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -70419
stableDimension: 0
stamp: i32 [-70419]
stampKind: i32
value: int[-70419|0xfffffffffffeeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [-74521 - -70419] bits:1...1011xxxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v335 
values: i342 i344 i346 i348 i350 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v335 values: i342 i344 i346 i348 i350  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v335 
values: j317 j151 j317 j317 j317 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v335 values: j317 j151 j317 j317 j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v343 v345 v347 v349 
=== Succesors ===
next: v340 
=== Usages ===
i338 j339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v343 v345 v347 v349 #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?79 
actionAndReason: i338 
speculation: j339 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?79 actionAndReason: i338 speculation: j339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -69395
stableDimension: 0
stamp: i32 [-69395]
stampKind: i32
value: int[-69395|0xfffffffffffef0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [-78617 - -69395] bits:1...1011xxxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v314 
values: i326 i328 i330 i332 i334 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v314 values: i326 i328 i330 i332 i334  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v314 
values: j317 j151 j317 j317 j317 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v314 values: j317 j151 j317 j317 j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v325 v327 v329 v331 v333 
=== Succesors ===
next: v320 
=== Usages ===
i318 j319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v325 v327 v329 v331 v333 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i318 
speculation: j319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i318 speculation: j319  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a379 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a379  <|@  <|@
f <@~|@floating>@ <|@
tid j1 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j23 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 j364 ?85 j377 j368 j355 v394 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v390 v388 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?85 v10 v393 v391 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: lload_0
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 343
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: j1 - a2 a3 a4 
=== Succesors ===
=== Usages ===
v320 a379 i381 i382 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: j1 - a2 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a379 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-38411|0xffffffffffff69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v388 
lastLocationAccess: - 
=== Succesors ===
next: i380 
=== Usages ===
a154 v389 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v388 lastLocationAccess: - #next: i380  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i380 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v390 
lastLocationAccess: - 
=== Succesors ===
next: i381 
=== Usages ===
i163 
=== Predecessor ===
a379 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v390 lastLocationAccess: - #next: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
result [v4|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a379 
=== Succesors ===
=== Usages ===
i381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i381 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-41995|0xffffffffffff5bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v389 
lastLocationAccess: - 
=== Succesors ===
next: i382 
=== Usages ===
i35 j360 v74 i66 i176 
=== Predecessor ===
i380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v389 lastLocationAccess: - #next: i382  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i382 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-64779|0xffffffffffff02f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v394 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
i139 i176 i217 
=== Predecessor ===
i381 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v394 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i380 
=== Succesors ===
=== Usages ===
i35 v40 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i380  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i381 
y: i163 
=== Succesors ===
=== Usages ===
j37 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i381 y: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j37 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i35 
=== Succesors ===
=== Usages ===
j23 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j23 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j1 
y: j37 
=== Succesors ===
=== Usages ===
v26 i28 j146 ?83 j86 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j1 y: j37  <|@  <|@
f <@~|@floating>@ <|@
tid j24 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 4294967296
stableDimension: 0
stamp: i64 [4294967296]
stampKind: i64
value: long[4294967296|0x100000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v26 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j23 
y: j24 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j23 y: j24  <|@  <|@
f <@~|@floating>@ <|@
tid j151 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j339 j319 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
i382 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v272 #falseSuccessor: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j72 i139 j131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i139 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i382 
y: i65 
=== Succesors ===
=== Usages ===
v127 v67 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 32
stamp: i32
=== Inputs ===
value: j23 
=== Succesors ===
=== Usages ===
j356 j386 v60 i66 v177 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j23  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 v101 v121 v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i28 
y: i25 
=== Succesors ===
=== Usages ===
v306 v298 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i28 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i25 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a379 
=== Succesors ===
=== Usages ===
j351 j362 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a379  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j339 j339 j319 j319 j319 j319 j339 j339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j69 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 j81 j376 j140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v42 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v42 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v296 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v296 #falseSuccessor: v297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@~|@floating>@ <|@
tid i326 <|@
result int[-75545|0xfffffffffffed8e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -75545
stableDimension: 0
stamp: i32 [-75545]
stampKind: i32
value: int[-75545|0xfffffffffffed8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i382 
y: i381 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i382 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i28 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v300 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result int[-76569|0xfffffffffffed4e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -76569
stableDimension: 0
stamp: i32 [-76569]
stampKind: i32
value: int[-76569|0xfffffffffffed4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v300 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j351 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: j355 
=== Usages ===
v395 
=== Predecessor ===
v301 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a154 #next: j355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j355 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v361 
=== Usages ===
v396 
=== Predecessor ===
j351 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v16|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j351 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j351 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j356 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
result [v17|QWORD[*] + v18|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j355 
index: j356 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: j356  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i381 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v395 v396 j360 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
j355 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v395 v396 j360 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result int[-77593|0xfffffffffffed0e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -77593
stableDimension: 0
stamp: i32 [-77593]
stampKind: i32
value: int[-77593|0xfffffffffffed0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v304 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32
=== Inputs ===
x: i28 
y: i381 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i381  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i66 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result int[-78617|0xfffffffffffecce7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -78617
stableDimension: 0
stamp: i32 [-78617]
stampKind: i32
value: int[-78617|0xfffffffffffecce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v308 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j362 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
result v21|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a154 
=== Succesors ===
next: j364 
=== Usages ===
j363 
=== Predecessor ===
v309 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a154 #next: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j364 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v74 
=== Usages ===
j365 
=== Predecessor ===
j362 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j362 
y: j69 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j362 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i28 
=== Succesors ===
=== Usages ===
j72 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i28  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j386 
y: i65 
=== Succesors ===
=== Usages ===
j81 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j386 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid j81 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j72 
y: j69 
=== Succesors ===
=== Usages ===
j365 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j72 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64
=== Inputs ===
x: j81 
y: j364 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j81 y: j364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j363 
dst: j365 
len: i381 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
j364 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j363 dst: j365 len: i381 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 9]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 9]
profileData: PROFILED designatedSuccessorProbability: 0.7738373684898093
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v12 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v12 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a383 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a383  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
result [v3|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a383 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v391 
lastLocationAccess: - 
=== Succesors ===
next: i384 
=== Usages ===
a196 v392 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v391 lastLocationAccess: - #next: i384  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String, String)>
localsSize: 5
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 343
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - a2 - a4 
=== Succesors ===
=== Usages ===
?83 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - a2 - a4  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringConcatHelper.prepend(long, byte[], String)>
localsSize: 4
locksSize: 0
sourceFile: StringConcatHelper.java
sourceLine: 324
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
values: j23 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85 values: j23  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: return
code: ResolvedJavaMethodBytecode<String.getBytes(byte[], int, byte)>
localsSize: 4
locksSize: 0
sourceFile: String.java
sourceLine: 4730
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?83 
=== Succesors ===
=== Usages ===
v340 i384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?83  <|@  <|@
f <@~|@floating>@ <|@
tid v392 <|@
result [v28|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a383 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i384 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-52491|0xffffffffffff32f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?79 
guard: - 
address: v392 
lastLocationAccess: - 
=== Succesors ===
next: i385 
=== Usages ===
i96 j373 v133 i126 i217 
=== Predecessor ===
a383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?79 guard: - address: v392 lastLocationAccess: - #next: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: v278 
=== Usages ===
i204 
=== Predecessor ===
i384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
i96 v101 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i384 
y: i204 
=== Succesors ===
=== Usages ===
j98 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i384 y: i204  <|@  <|@
f <@~|@floating>@ <|@
tid j98 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
j86 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i96  <|@  <|@
f <@~|@floating>@ <|@
tid j86 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 6]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j23 
y: j98 
=== Succesors ===
=== Usages ===
v87 i89 j146 j146 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j23 y: j98  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j86 
y: j24 
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: j86 y: j24  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
i385 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v276 #falseSuccessor: v277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 16]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 19]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 32
stamp: i32
=== Inputs ===
value: j86 
=== Succesors ===
=== Usages ===
j369 j387 v121 i126 v218 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j86  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i89 
y: i25 
=== Succesors ===
=== Usages ===
v290 v282 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i89 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i25 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i204 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a383 
=== Succesors ===
=== Usages ===
j366 j375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a383  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9987687249012156
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v280 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result int[-71449|0xfffffffffffee8e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -71449
stableDimension: 0
stamp: i32 [-71449]
stampKind: i32
value: int[-71449|0xfffffffffffee8e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i382 
y: i384 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i382 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i217 
y: i89 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i217 y: i89  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result int[-72473|0xfffffffffffee4e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -72473
stableDimension: 0
stamp: i32 [-72473]
stampKind: i32
value: int[-72473|0xfffffffffffee4e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j366 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j366 <|@
result v37|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a196 
=== Succesors ===
next: j368 
=== Usages ===
v397 
=== Predecessor ===
v285 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a196 #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result v38|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v374 
=== Usages ===
v398 
=== Predecessor ===
j366 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
result [v37|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j366 
index: - 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j366 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j369 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
result [v38|QWORD[*] + v39|QWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j368 
index: j369 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j368 index: j369  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i384 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v397 v398 j373 
=== Succesors ===
next: v19 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v397 v398 j373 #next: v19  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result int[-73497|0xfffffffffffee0e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -73497
stableDimension: 0
stamp: i32 [-73497]
stampKind: i32
value: int[-73497|0xfffffffffffee0e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32
=== Inputs ===
x: i89 
y: i384 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i89 y: i384  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i139 
y: i126 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i139 y: i126  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v292 
falseSuccessor: v293 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v292 #falseSuccessor: v293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result int[-74521|0xfffffffffffedce7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -74521
stableDimension: 0
stamp: i32 [-74521]
stampKind: i32
value: int[-74521|0xfffffffffffedce7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a196 
=== Succesors ===
next: j377 
=== Usages ===
j376 
=== Predecessor ===
v293 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a196 #next: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
result v43|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
object: a2 
=== Succesors ===
next: v133 
=== Usages ===
j378 
=== Predecessor ===
j375 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a2 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j375 
y: j69 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j375 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i89 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i89  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j387 
y: i65 
=== Succesors ===
=== Usages ===
j140 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j387 y: i65  <|@  <|@
f <@~|@floating>@ <|@
tid j140 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j131 
y: j69 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j131 y: j69  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64
=== Inputs ===
x: j140 
y: j377 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j140 y: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j376 
dst: j378 
len: i384 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
j377 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j376 dst: j378 len: i384 #next: v145  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j146 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: i64 [-9223372036854775808 - 4294967295]
valueDescription: i64
=== Inputs ===
merge: v18 
values: j23 j86 j86 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v18 values: j23 j86 j86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 20]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v19 v145 
=== Succesors ===
next: v22 
=== Usages ===
j146 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v19 v145 #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:345) [bci: 21]
stamp: void
=== Inputs ===
memoryMap: - 
result: j146 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: j146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@~|@floating>@ <|@
tid i344 <|@
result int[-70419|0xfffffffffffeeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
rawvalue: -70419
stableDimension: 0
stamp: i32 [-70419]
stampKind: i32
value: int[-70419|0xfffffffffffeeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i338 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i32 [-74521 - -70419] bits:1...1011xxxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v335 
values: i342 i344 i346 i348 i350 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v335 values: i342 i344 i346 i348 i350  <|@  <|@
f <@~|@floating>@ <|@
tid j339 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v335 
values: j317 j151 j317 j317 j317 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v335 values: j317 j151 j317 j317 j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v341 v343 v345 v347 v349 
=== Succesors ===
next: v340 
=== Usages ===
i338 j339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v341 v343 v345 v347 v349 #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:344) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?79 
actionAndReason: i338 
speculation: j339 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?79 actionAndReason: i338 speculation: j339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:323) [bci: 13]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[-69395|0xfffffffffffef0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
rawvalue: -69395
stableDimension: 0
stamp: i32 [-69395]
stampKind: i32
value: int[-69395|0xfffffffffffef0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i318 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i32 [-78617 - -69395] bits:1...1011xxxx001110x1x1
valueDescription: i32
=== Inputs ===
merge: v314 
values: i326 i328 i330 i332 i334 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v314 values: i326 i328 i330 i332 i334  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v314 
values: j317 j151 j317 j317 j317 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v314 values: j317 j151 j317 j317 j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v325 v327 v329 v331 v333 
=== Succesors ===
next: v320 
=== Usages ===
i318 j319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v325 v327 v329 v331 v333 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:322) [bci: 2]
at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i318 
speculation: j319 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i318 speculation: j319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[174, 175[[338, 339[[360, 362[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 48[[60, 63[[174, 175[[230, 233[[338, 339[[450, 452[[542, 544[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v19|q [0, 46[[172, 175[[336, 339[[448, 453[[540, 545[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[174, 175[[338, 339[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 44[[170, 175[[334, 339[[446, 453[[538, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[168, 175[[332, 339[[452, 453[[544, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 50[[174, 175[[338, 339[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [44, 126[[364, 392[[568, 578[[598, 618[[650, 691[44 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [46, 190[[200, 326[[364, 526[[548, 649[[650, 691[46 MustHaveRegister 58 MustHaveRegister 162 ShouldHaveRegister 326 ShouldHaveRegister 434 ShouldHaveRegister 526 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|d [48, 126[[364, 392[[568, 578[[598, 618[[650, 691[48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [50, 190[[200, 290[[364, 484[[548, 649[[650, 691[50 MustHaveRegister 188 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [52, 94[52 MustHaveRegister 56 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [54, 96[54 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [56, 166[[364, 450[56 MustHaveRegister 62 ShouldHaveRegister 122 ShouldHaveRegister 166 ShouldHaveRegister 388 ShouldHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [58, 190[[200, 286[[364, 456[58 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v6|d [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|d [64, 67[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v0|q [66, 199[[200, 290[[364, 484[[548, 568[[578, 598[[618, 649[66 MustHaveRegister 70 ShouldHaveRegister 92 ShouldHaveRegister 198 ShouldHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [68, 190[[200, 238[[364, 456[68 MustHaveRegister 70 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v7|d [90, 190[[200, 262[[364, 482[90 MustHaveRegister 390 ShouldHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [92, 164[[364, 438[92 MustHaveRegister 108 MustHaveRegister 124 MustHaveRegister 164 ShouldHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v4|d [94, 160[[364, 432[94 MustHaveRegister 160 ShouldHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v7|d [122, 124[122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v14|q [160, 168[160 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v1|q [162, 170[162 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [164, 170[164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v6|d [166, 172[166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v13|d [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v14|q [432, 436[432 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v1|q [434, 444[434 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [436, 446[436 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|q [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [442, 444[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [444, 448[444 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [224, 258[224 MustHaveRegister 226 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [226, 330[[456, 542[226 MustHaveRegister 232 ShouldHaveRegister 286 ShouldHaveRegister 330 ShouldHaveRegister 480 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [228, 260[228 MustHaveRegister 230 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v29|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v10|q [236, 341[[456, 547[236 MustHaveRegister 238 ShouldHaveRegister 256 ShouldHaveRegister 340 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [256, 328[[456, 530[256 MustHaveRegister 272 MustHaveRegister 288 MustHaveRegister 328 ShouldHaveRegister 466 MustHaveRegister 480 ShouldHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v28|d [258, 324[[456, 524[258 MustHaveRegister 324 ShouldHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v7|d [286, 288[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v35|q [324, 332[324 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v1|q [326, 334[326 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [328, 334[328 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v29|d [330, 336[330 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v34|d [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v35|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v1|q [526, 536[526 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [528, 538[528 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|q [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|q [536, 540[536 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v10|q [342, 360[360 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [628, 644[644 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [628, 646[646 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [670, 686[686 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [670, 688[688 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[174, 175[[338, 339[[360, 362[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 48[[60, 63[[174, 175[[230, 233[[338, 339[[450, 452[[542, 544[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v19|q [0, 46[[172, 175[[336, 339[[448, 453[[540, 545[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[174, 175[[338, 339[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 44[[170, 175[[334, 339[[446, 453[[538, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[168, 175[[332, 339[[452, 453[[544, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 50[[174, 175[[338, 339[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 126[[364, 392[[568, 578[[598, 618[[650, 691[44 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [46, 171[46 MustHaveRegister 58 MustHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[r10|q]" v2|q rcx|d [48, 126[[364, 392[[568, 578[[598, 618[[650, 691[48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [50, 126[50 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [52, 94[52 MustHaveRegister 56 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 96[54 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [56, 166[[364, 450[56 MustHaveRegister 62 ShouldHaveRegister 122 ShouldHaveRegister 166 ShouldHaveRegister 388 ShouldHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [58, 126[58 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d v6|d [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|d [64, 67[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q v0|q [66, 126[66 MustHaveRegister 70 ShouldHaveRegister 92 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [68, 126[68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v7|d [90, 126[90 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[r13|d]" v13|d -1 [92, 164[[364, 438[92 MustHaveRegister 108 MustHaveRegister 124 MustHaveRegister 164 ShouldHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v4|d [94, 160[[364, 432[94 MustHaveRegister 160 ShouldHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v7|d [122, 124[122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdi|q]" v16|q v14|q [160, 168[160 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v1|q [162, 170[162 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [164, 170[164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [166, 172[166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d v13|d [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v14|q [432, 436[432 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v1|q [434, 444[434 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [436, 446[436 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q v24|q [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [442, 444[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q v26|q [444, 448[444 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d -1 [224, 258[224 MustHaveRegister 226 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [226, 330[[456, 542[226 MustHaveRegister 232 ShouldHaveRegister 286 ShouldHaveRegister 330 ShouldHaveRegister 480 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d -1 [228, 260[228 MustHaveRegister 230 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d v29|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v10|q [236, 290[236 MustHaveRegister 238 ShouldHaveRegister 256 ShouldHaveRegister  "OneSpillStore"
  v34|d DWORD "[r9|d]" v34|d -1 [256, 328[[456, 530[256 MustHaveRegister 272 MustHaveRegister 288 MustHaveRegister 328 ShouldHaveRegister 466 MustHaveRegister 480 ShouldHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|d [258, 324[[456, 524[258 MustHaveRegister 324 ShouldHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d v7|d [286, 288[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v35|q [324, 332[324 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v1|q [326, 334[326 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [328, 334[328 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v29|d [330, 336[330 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v34|d [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v35|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v1|q [526, 536[526 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [528, 538[528 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q v45|q [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v47|q [536, 540[536 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v10|q [342, 360[360 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [628, 644[644 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r9|q]" v51|q -1 [628, 646[646 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d -1 [670, 686[686 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [670, 688[688 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[vstack:0|q]" v1|q v1|q [171, 190[[200, 326[[364, 526[[548, 649[[650, 670[326 ShouldHaveRegister 434 ShouldHaveRegister 526 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[vstack:1|q]" v3|q v3|q [126, 173[ "OneSpillStore"
  v56|d DWORD "[vstack:3|d]" v7|d v7|d [126, 173[ "OneSpillStore"
  v57|q QWORD "[vstack:2|q]" v10|q v10|q [126, 173[ "OneSpillStore"
  v58|q QWORD "[-]" v11|q v11|q [126, 173[ "OneSpillStore"
  v59|d DWORD "[vstack:4|d]" v12|d v12|d [126, 173[ "OneSpillStore"
  v60|q QWORD "[vstack:1|q]" v3|q v3|q [173, 178[ "OneSpillStore"
  v61|q QWORD "[vstack:2|q]" v10|q v10|q [173, 199[198 ShouldHaveRegister  "OneSpillStore"
  v62|q QWORD "[-]" v11|q v11|q [173, 190[ "OneSpillStore"
  v63|d DWORD "[vstack:3|d]" v7|d v7|d [173, 190[[200, 274[ "OneSpillStore"
  v64|d DWORD "[vstack:4|d]" v12|d v12|d [173, 190[[200, 262[[364, 468[390 ShouldHaveRegister  "OneSpillStore"
  v65|q QWORD "[rdx|q]" v1|q v1|q [670, 691[ "OneSpillStore"
  v66|q QWORD "[r8|q]" v3|q v3|q [178, 190[[200, 290[[364, 484[[548, 649[[650, 691[188 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v67|q QWORD "[r11|q]" v10|q v10|q [200, 290[[364, 484[[548, 568[[578, 598[[618, 649[236 MustHaveRegister  "OneSpillStore"
  v68|q QWORD "[rax|q]" v11|q v11|q [200, 238[[364, 456[238 MustHaveRegister  "OneSpillStore"
  v69|d DWORD "[rbx|d]" v7|d v7|d [274, 286[[364, 456[286 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[rbp|d]" v12|d v12|d [468, 482[482 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[vstack:5|q]" v33|q v33|q [290, 337[ "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v33|q v33|q [337, 341[[456, 484[340 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[r11|q]" v33|q v33|q [484, 547[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v59|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = STACKMOVE (input: v57|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = STACKMOVE (input: v71|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[174, 175[[338, 339[[360, 362[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 48[[60, 63[[174, 175[[230, 233[[338, 339[[450, 452[[542, 544[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v19|q [0, 46[[172, 175[[336, 339[[448, 453[[540, 545[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[174, 175[[338, 339[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 44[[170, 175[[334, 339[[446, 453[[538, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[168, 175[[332, 339[[452, 453[[544, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 50[[174, 175[[338, 339[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 126[[364, 392[[568, 578[[598, 618[[650, 691[44 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [46, 171[46 MustHaveRegister 58 MustHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[r10|q]" v2|q rcx|d [48, 126[[364, 392[[568, 578[[598, 618[[650, 691[48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [50, 126[50 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [52, 94[52 MustHaveRegister 56 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 96[54 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [56, 166[[364, 450[56 MustHaveRegister 62 ShouldHaveRegister 122 ShouldHaveRegister 166 ShouldHaveRegister 388 ShouldHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [58, 126[58 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d v6|d [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|d [64, 67[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q v0|q [66, 126[66 MustHaveRegister 70 ShouldHaveRegister 92 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [68, 126[68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v7|d [90, 126[90 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[r13|d]" v13|d -1 [92, 164[[364, 438[92 MustHaveRegister 108 MustHaveRegister 124 MustHaveRegister 164 ShouldHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v4|d [94, 160[[364, 432[94 MustHaveRegister 160 ShouldHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v7|d [122, 124[122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdi|q]" v16|q v14|q [160, 168[160 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v1|q [162, 170[162 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [164, 170[164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [166, 172[166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d v13|d [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v14|q [432, 436[432 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v1|q [434, 444[434 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [436, 446[436 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q v24|q [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [442, 444[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q v26|q [444, 448[444 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d -1 [224, 258[224 MustHaveRegister 226 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [226, 330[[456, 542[226 MustHaveRegister 232 ShouldHaveRegister 286 ShouldHaveRegister 330 ShouldHaveRegister 480 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d -1 [228, 260[228 MustHaveRegister 230 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d v29|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v10|q [236, 290[236 MustHaveRegister 238 ShouldHaveRegister 256 ShouldHaveRegister  "OneSpillStore"
  v34|d DWORD "[r9|d]" v34|d -1 [256, 328[[456, 530[256 MustHaveRegister 272 MustHaveRegister 288 MustHaveRegister 328 ShouldHaveRegister 466 MustHaveRegister 480 ShouldHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|d [258, 324[[456, 524[258 MustHaveRegister 324 ShouldHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d v7|d [286, 288[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v35|q [324, 332[324 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v1|q [326, 334[326 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [328, 334[328 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v29|d [330, 336[330 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v34|d [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v35|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v1|q [526, 536[526 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [528, 538[528 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q v45|q [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v47|q [536, 540[536 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v10|q [342, 360[360 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [628, 644[644 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r9|q]" v51|q -1 [628, 646[646 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d -1 [670, 686[686 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [670, 688[688 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[vstack:0|q]" v1|q v1|q [171, 190[[200, 326[[364, 526[[548, 649[[650, 670[326 ShouldHaveRegister 434 ShouldHaveRegister 526 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[vstack:1|q]" v3|q v3|q [126, 173[ "OneSpillStore"
  v56|d DWORD "[vstack:3|d]" v7|d v7|d [126, 173[ "OneSpillStore"
  v57|q QWORD "[vstack:2|q]" v10|q v10|q [126, 173[ "OneSpillStore"
  v58|q QWORD "[-]" v11|q v11|q [126, 173[ "OneSpillStore"
  v59|d DWORD "[vstack:4|d]" v12|d v12|d [126, 173[ "OneSpillStore"
  v60|q QWORD "[vstack:1|q]" v3|q v3|q [173, 178[ "OneSpillStore"
  v61|q QWORD "[vstack:2|q]" v10|q v10|q [173, 199[198 ShouldHaveRegister  "OneSpillStore"
  v62|q QWORD "[-]" v11|q v11|q [173, 190[ "OneSpillStore"
  v63|d DWORD "[vstack:3|d]" v7|d v7|d [173, 190[[200, 274[ "OneSpillStore"
  v64|d DWORD "[vstack:4|d]" v12|d v12|d [173, 190[[200, 262[[364, 468[390 ShouldHaveRegister  "OneSpillStore"
  v65|q QWORD "[rdx|q]" v1|q v1|q [670, 691[ "OneSpillStore"
  v66|q QWORD "[r8|q]" v3|q v3|q [178, 190[[200, 290[[364, 484[[548, 649[[650, 691[188 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v67|q QWORD "[r11|q]" v10|q v10|q [200, 290[[364, 484[[548, 568[[578, 598[[618, 649[236 MustHaveRegister  "OneSpillStore"
  v68|q QWORD "[rax|q]" v11|q v11|q [200, 238[[364, 456[238 MustHaveRegister  "OneSpillStore"
  v69|d DWORD "[rbx|d]" v7|d v7|d [274, 286[[364, 456[286 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[rbp|d]" v12|d v12|d [468, 482[482 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[vstack:5|q]" v33|q v33|q [290, 337[ "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v33|q v33|q [337, 341[[456, 484[340 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[r11|q]" v33|q v33|q [484, 547[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v59|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = STACKMOVE (input: v57|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [v10|QWORD] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = STACKMOVE (input: v71|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [v33|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [int[-71449|0xfffffffffffee8e7], long[0|0x0]] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [int[-72473|0xfffffffffffee4e7], long[0|0x0]] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [int[-78617|0xfffffffffffecce7], long[0|0x0]] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [int[-74521|0xfffffffffffedce7], long[0|0x0]] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [int[-73497|0xfffffffffffee0e7], long[0|0x0]] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [int[-75545|0xfffffffffffed8e7], long[0|0x0]] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [int[-77593|0xfffffffffffed0e7], long[0|0x0]] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [int[-70419|0xfffffffffffeeced], long[20|0x14]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [int[-76569|0xfffffffffffed4e7], long[0|0x0]] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [int[-69395|0xfffffffffffef0ed], long[20|0x14]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[174, 175[[338, 339[[360, 362[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v5|d [0, 48[[60, 63[[174, 175[[230, 233[[338, 339[[450, 452[[542, 544[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v19|q [0, 46[[172, 175[[336, 339[[448, 453[[540, 545[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[174, 175[[338, 339[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v23|q [0, 44[[170, 175[[334, 339[[446, 453[[538, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[168, 175[[332, 339[[452, 453[[544, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 50[[174, 175[[338, 339[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[174, 175[[338, 339[[452, 453[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[174, 175[[338, 339[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [44, 126[[364, 392[[568, 578[[598, 618[[650, 691[44 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [46, 171[46 MustHaveRegister 58 MustHaveRegister 162 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[r10|q]" v2|q rcx|d [48, 126[[364, 392[[568, 578[[598, 618[[650, 691[48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [50, 126[50 MustHaveRegister  "OneSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [52, 94[52 MustHaveRegister 56 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [54, 96[54 MustHaveRegister 60 ShouldHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [56, 166[[364, 450[56 MustHaveRegister 62 ShouldHaveRegister 122 ShouldHaveRegister 166 ShouldHaveRegister 388 ShouldHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rbx|d]" v7|d -1 [58, 126[58 MustHaveRegister 90 ShouldHaveRegister 122 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d v6|d [62, 64[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q v8|d [64, 67[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rcx|q]" v10|q v0|q [66, 126[66 MustHaveRegister 70 ShouldHaveRegister 92 ShouldHaveRegister  "OneSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [68, 126[68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[rbp|d]" v12|d v7|d [90, 126[90 MustHaveRegister  "OneSpillStore"
  v13|d DWORD "[r13|d]" v13|d -1 [92, 164[[364, 438[92 MustHaveRegister 108 MustHaveRegister 124 MustHaveRegister 164 ShouldHaveRegister 374 MustHaveRegister 388 ShouldHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v4|d [94, 160[[364, 432[94 MustHaveRegister 160 ShouldHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[r11|d]" v15|d v7|d [122, 124[122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rdi|q]" v16|q v14|q [160, 168[160 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v1|q [162, 170[162 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [164, 170[164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r9|q]" v19|q v6|d [166, 172[166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d v13|d [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v14|q [432, 436[432 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v1|q [434, 444[434 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rsi|q]" v23|q -1 [436, 446[436 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rcx|q]" v24|q -1 [438, 440[438 MustHaveRegister 440 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q v24|q [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rcx|q]" v26|q -1 [442, 444[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rcx|q]" v27|q v26|q [444, 448[444 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdi|d]" v28|d -1 [224, 258[224 MustHaveRegister 226 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[r10|d]" v29|d -1 [226, 330[[456, 542[226 MustHaveRegister 232 ShouldHaveRegister 286 ShouldHaveRegister 330 ShouldHaveRegister 480 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d -1 [228, 260[228 MustHaveRegister 230 ShouldHaveRegister 260 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rdx|d]" v31|d v29|d [232, 234[232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|d [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q v10|q [236, 290[236 MustHaveRegister 238 ShouldHaveRegister 256 ShouldHaveRegister  "OneSpillStore"
  v34|d DWORD "[r9|d]" v34|d -1 [256, 328[[456, 530[256 MustHaveRegister 272 MustHaveRegister 288 MustHaveRegister 328 ShouldHaveRegister 466 MustHaveRegister 480 ShouldHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v28|d [258, 324[[456, 524[258 MustHaveRegister 324 ShouldHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rbx|d]" v36|d v7|d [286, 288[286 MustHaveRegister 288 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v35|q [324, 332[324 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdx|q]" v38|q v1|q [326, 334[326 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [328, 334[328 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r10|q]" v40|q v29|d [330, 336[330 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d v34|d [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v35|q [524, 528[524 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdx|q]" v43|q v1|q [526, 536[526 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q -1 [528, 538[528 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rcx|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q v45|q [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [534, 536[534 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v47|q [536, 540[536 MustHaveRegister 540 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v10|q [342, 360[360 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [628, 644[644 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r9|q]" v51|q -1 [628, 646[646 MustHaveRegister  "NoSpillStore"
  v52|d DWORD "[r11|d]" v52|d -1 [670, 686[686 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[r9|q]" v53|q -1 [670, 688[688 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[vstack:0|q]" v1|q v1|q [171, 190[[200, 326[[364, 526[[548, 649[[650, 670[326 ShouldHaveRegister 434 ShouldHaveRegister 526 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[vstack:1|q]" v3|q v3|q [126, 173[ "OneSpillStore"
  v56|d DWORD "[vstack:3|d]" v7|d v7|d [126, 173[ "OneSpillStore"
  v57|q QWORD "[vstack:2|q]" v10|q v10|q [126, 173[ "OneSpillStore"
  v58|q QWORD "[-]" v11|q v11|q [126, 173[ "OneSpillStore"
  v59|d DWORD "[vstack:4|d]" v12|d v12|d [126, 173[ "OneSpillStore"
  v60|q QWORD "[vstack:1|q]" v3|q v3|q [173, 178[ "OneSpillStore"
  v61|q QWORD "[vstack:2|q]" v10|q v10|q [173, 199[198 ShouldHaveRegister  "OneSpillStore"
  v62|q QWORD "[-]" v11|q v11|q [173, 190[ "OneSpillStore"
  v63|d DWORD "[vstack:3|d]" v7|d v7|d [173, 190[[200, 274[ "OneSpillStore"
  v64|d DWORD "[vstack:4|d]" v12|d v12|d [173, 190[[200, 262[[364, 468[390 ShouldHaveRegister  "OneSpillStore"
  v65|q QWORD "[rdx|q]" v1|q v1|q [670, 691[ "OneSpillStore"
  v66|q QWORD "[r8|q]" v3|q v3|q [178, 190[[200, 290[[364, 484[[548, 649[[650, 691[188 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister  "OneSpillStore"
  v67|q QWORD "[r11|q]" v10|q v10|q [200, 290[[364, 484[[548, 568[[578, 598[[618, 649[236 MustHaveRegister  "OneSpillStore"
  v68|q QWORD "[rax|q]" v11|q v11|q [200, 238[[364, 456[238 MustHaveRegister  "OneSpillStore"
  v69|d DWORD "[rbx|d]" v7|d v7|d [274, 286[[364, 456[286 MustHaveRegister  "OneSpillStore"
  v70|d DWORD "[rbp|d]" v12|d v12|d [468, 482[482 ShouldHaveRegister  "OneSpillStore"
  v71|q QWORD "[vstack:5|q]" v33|q v33|q [290, 337[ "OneSpillStore"
  v72|q QWORD "[vstack:5|q]" v33|q v33|q [337, 341[[456, 484[340 ShouldHaveRegister  "OneSpillStore"
  v73|q QWORD "[r11|q]" v33|q v33|q [484, 547[546 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v59|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = STACKMOVE (input: v57|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v61|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[4294967296|0x100000000] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: v61|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: v33|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = STACKMOVE (input: v71|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v72|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [v49|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: v10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: v67|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: v33|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v72|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v73|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] // MoveResolver resolve mapping <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [v50|DWORD, v51|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [v52|DWORD, v53|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v4|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v4|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|QWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD = SUB (x: v0|QWORD, ~y: v9|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction v11|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction v12|DWORD = SHR value: v7|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction v13|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction v15|DWORD = SUB (x: v7|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v15|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v16|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction v17|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction v18|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction v19|QWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [v16|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [v17|QWORD[*] + v18|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = STACKMOVE (input: v59|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = STACKMOVE (input: v56|DWORD, ~backupSlot: vstack:6|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = STACKMOVE (input: v57|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = STACKMOVE (input: v55|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: v60|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v3|QWORD[.], y: v3|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v61|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOVE input: long[4294967296|0x100000000] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: v61|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction v29|DWORD = MOV input: [v28|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction v30|DWORD = MOVSXB input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: v30|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction v31|DWORD = SHR (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction v32|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction v33|QWORD = SUB (x: v10|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v33|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v34|DWORD = MOV value: v33|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: v30|DWORD, y: v30|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v36|DWORD = SUB (x: v7|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: v34|DWORD, y: v36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: v33|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction v37|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v38|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction v39|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction v40|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [v37|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [v38|QWORD[*] + v39|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = STACKMOVE (input: v71|QWORD, ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v72|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: v49|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOVE input: v12|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: v10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: v13|DWORD, y: v13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction v20|DWORD = ADD (x: v13|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction v21|QWORD[*] = MOVE input: v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction v22|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction v23|QWORD[*] = LEA address: [v21|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction v24|QWORD = MOV value: v13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction v25|QWORD = SHL value: v24|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction v26|QWORD = LEA address: [v25|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction v27|QWORD[*] = ADD (x: v26|QWORD, y: v22|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: v67|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: v69|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVE input: v33|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v64|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v41|DWORD = ADD (x: v34|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: v41|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: v72|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction v42|QWORD[*] = MOVE input: v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction v43|QWORD[*] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction v44|QWORD[*] = LEA address: [v42|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v45|QWORD = MOV value: v34|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction v46|QWORD = SHL value: v45|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction v48|QWORD[*] = ADD (x: v47|QWORD, y: v43|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v73|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] // MoveResolver resolve mapping <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v50|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v51|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: v10|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - v1|QWORD[.] - v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v53|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: v0|QWORD - v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: vstack:4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] // MoveResolver resolve mapping <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  166  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  198  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  228  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  260  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  340  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: vstack:4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  438  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  454  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  538  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  576  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] // MoveResolver resolve mapping <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] // MoveResolver resolve mapping <|@ <|@
      nr  626  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  688  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  690  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction vstack:2|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction vstack:1|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: vstack:2|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction vstack:4|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: vstack:4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction vstack:2|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction vstack:3|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction vstack:5|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: vstack:5|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - vstack:0|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  758  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [106, 758[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [164, 216[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [160, 382[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [162, 472[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [158, 588[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [504, 620[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [106, 758[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:64|q]" vstack:1|q -1 [164, 216[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [160, 382[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:44|d]" vstack:3|d -1 [162, 472[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:28|d]" vstack:4|d -1 [158, 588[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:40|q]" vstack:5|q -1 [504, 620[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  758  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  282  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  758  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rdi:0, r8:0, stack:8]
live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rdi:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr   62  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr   64  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction rbp|DWORD = SHR value: rbx|DWORD size: DWORD <|@ <|@
      nr   86  <|@ instruction r13|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607171328459865256
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605145326914028557
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B20" "B25" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B27" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE input: long[4294967296|0x100000000] <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  408  <|@ st <@st|@reference-map: [rdi:0, r8:0, stack:8]
live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3] <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  412  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4597316387834490828
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction r9|DWORD = MOV value: rcx|QWORD size: DWORD <|@ <|@
      nr  440  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3 <|@ <|@
      nr  442  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4597306354952438213
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  544  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4563321077056843776
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOV value: r13|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  348  <|@ instruction stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  560  <|@ instruction stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553772459255139993
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  666  <|@ instruction rcx|QWORD = MOV value: r9|DWORD size: DWORD <|@ <|@
      nr  668  <|@ instruction rcx|QWORD = SHL value: rcx|QWORD size: QWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  672  <|@ instruction rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7] <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B27" "B22" "B19" "B24" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  742  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
java.lang.String.getBytes(String.java:4730) [bci: 43]
locals: - - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21]
locals: r11|QWORD - - - 
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3]
locals: - - stack:56|QWORD[.] - r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:43, 21, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7] <|@ <|@
      nr  500  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7] <|@ <|@
      nr  284  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B3" "B29" "B8" "B5" "B10" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr  782  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0]
live-base-pointers: []
java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0]
locals: rsi|QWORD - rdx|QWORD[.] r10|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  614  <|@ instruction r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7] <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  582  <|@ instruction r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7] <|@ <|@
      nr  584  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  116  <|@ instruction r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7] <|@ <|@
      nr  120  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced] <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  150  <|@ instruction r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7] <|@ <|@
      nr  154  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  746  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction r9|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  756  <|@ instruction r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed] <|@ <|@
      nr  760  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: lload_0       
     1: aload_2       
     2: aload_3       
     3: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
     6: lstore_0      
     7: aload         4
     9: ifnull        20
    12: lload_0       
    13: aload_2       
    14: aload         4
    16: invokestatic  #12         // prepend:(long, byte[], java.lang.String)long
    19: lstore_0      
    20: lload_0       
    21: lreturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec389041817f20000000000f85a70300009090909090909090909090909090909090909048896c24304c8bd1418b7a14450fbe5a10448b0cfd0c0000008b5a0c418bcb418bc1d3e8488bce482bc848b80000000001000000483bc10f8e3d03000090909090909090908bebd1ed448be948c1e7034585db0f854d010000909090904585ed0f8cbc0200009090909090448bdb452bd9453beb0f8fe6020000896c242448894c2418895c24144c89042490909090909090909090909090909090488bf2458bd5488d7f104a8d7416104889542408498bd1e8000000004c8b0424909090904d85c00f852d000000909090488b4c24189090909090909090488bc1488b6c24304883c438493ba7500400000f87b3020000c5f877c348b800000000010000004c8b5c24189090909090909090909090418b7814448b14fd0c000000410fbe70108bce418bd2d3ea498bcb482bca483bc10f8e1502000090909090909090448bc948c1e70385f60f85ca000000909090904585c90f8c270100008b5c24149090909090412bda443bcb0f8f4401000048894c241890909090909090909090909090909090488b542408418bf1488d7f10488d743210498bd2e800000000488b4c2418e92affffff896c24244c8bd94889542408909090904585ed0f8c7a0100009090909090418bd54103d13b5424240f87f000000090909090909090909090909090909090909090488b542408488d7710418bcd48d1e1488d49104803ca488bd1418bc9e8000000004c895c2418895c2414e9a5feffff48894c2418909090904585c90f8ce50000008b6c24249090909090418bf14103f23bf50f87bc0000004c8b5c241890909090909090909090909090909090909090488b542408488d7710418bc948d1e1488d49104803ca488bd1418bcae800000000498bcbe950feffff90909049c7c10000000041bae7e8feff90909090909090458997840400004d898f90040000e8000000000f1f84000000000090909049c7c10000000041bae7e4feffebcc90909049c7c10000000041bbe7ccfeff488b5424089090909090909045899f840400004d898f90040000e8000000000f1f84000000000090909049c7c10000000041bae7dcfeffeb8390909049c7c10000000041bae7e0feffe96effffff488954240890909049c7c10000000041bbe7d8feffeb9b90909049c7c10000000041bbe7d0feffeb8990909049c7c11400000041baedecfeffe930ffffff488954240890909049c7c10000000041bbe7d4feffe95affffff488954240890909049c7c11400000041bbedf0feffe940ffffff48896c2430e800000000e94afcfffff4488d0d39fdffff49898f68040000e91cfcfffff441c78784040000f569ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55bffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f502ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f532ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 NOP  <||@
  Comment 41 32 NOP  <||@
  Comment 42 34 NOP  <||@
  Comment 43 36 NOP  <||@
  Comment 44 38 NOP  <||@
  Comment 45 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 50 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD  <||@
  Comment 50 44 r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 46 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 57 48 r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 62 50 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 52 rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 70 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 54 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 76 56 rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 81 58 rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 81 60 rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 87 62 rax|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 97 64 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD  <||@
  Comment 106 block B1 null  <||@
  Comment 106 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 NOP  <||@
  Comment 111 78 NOP  <||@
  Comment 112 80 NOP  <||@
  Comment 113 82 NOP  <||@
  Comment 114 84 rbp|DWORD = SHR value: rbx|DWORD size: DWORD  <||@
  Comment 118 86 r13|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 121 88 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3  <||@
  Comment 125 90 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD  <||@
  Comment 134 block B2 null  <||@
  Comment 134 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 134 94 NOP  <||@
  Comment 135 96 NOP  <||@
  Comment 136 98 NOP  <||@
  Comment 137 100 NOP  <||@
  Comment 138 102 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 147 block B4 null  <||@
  Comment 147 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 124 NOP  <||@
  Comment 148 126 NOP  <||@
  Comment 149 128 NOP  <||@
  Comment 150 130 NOP  <||@
  Comment 151 132 NOP  <||@
  Comment 152 134 r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 158 136 CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 167 block B6 null  <||@
  Comment 167 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 167 158 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 171 160 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 176 162 stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 180 164 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 184 166 NOP  <||@
  Comment 185 168 NOP  <||@
  Comment 186 170 NOP  <||@
  Comment 187 172 NOP  <||@
  Comment 188 174 NOP  <||@
  Comment 189 176 NOP  <||@
  Comment 190 178 NOP  <||@
  Comment 191 180 NOP  <||@
  Comment 192 182 NOP  <||@
  Comment 193 184 NOP  <||@
  Comment 194 186 NOP  <||@
  Comment 195 188 NOP  <||@
  Comment 196 190 NOP  <||@
  Comment 197 192 NOP  <||@
  Comment 198 194 NOP  <||@
  Comment 199 196 NOP  <||@
  Comment 200 198 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 200 200 rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 203 202 r10|QWORD = MOV value: r13|DWORD size: DWORD  <||@
  Comment 206 204 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 206 206 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 210 208 rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 215 210 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 220 212 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 223 214 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 223 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 228 216 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 232 218 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 232 block B12 null  <||@
  Comment 232 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 232 356 NOP  <||@
  Comment 233 358 NOP  <||@
  Comment 234 360 NOP  <||@
  Comment 235 362 NOP  <||@
  Comment 236 364 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 245 block B13 null  <||@
  Comment 245 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 368 NOP  <||@
  Comment 246 370 NOP  <||@
  Comment 247 372 NOP  <||@
  Comment 248 374 rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 253 376 JUMP ~outgoingValues: [] destination: B13 -> B26  <||@
  Comment 253 block B26 null  <||@
  Comment 253 686 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 253 688 NOP  <||@
  Comment 254 690 NOP  <||@
  Comment 255 692 NOP  <||@
  Comment 256 694 NOP  <||@
  Comment 257 696 NOP  <||@
  Comment 258 698 NOP  <||@
  Comment 259 700 NOP  <||@
  Comment 260 702 NOP  <||@
  Comment 261 704 rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 264 706 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 273 POLL_RETURN_FAR  <||@
  Comment 290 block B14 null  <||@
  Comment 290 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 380 rax|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 300 382 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 305 384 NOP  <||@
  Comment 306 386 NOP  <||@
  Comment 307 388 NOP  <||@
  Comment 308 390 NOP  <||@
  Comment 309 392 NOP  <||@
  Comment 310 394 NOP  <||@
  Comment 311 396 NOP  <||@
  Comment 312 398 NOP  <||@
  Comment 313 400 NOP  <||@
  Comment 314 402 NOP  <||@
  Comment 315 404 NOP  <||@
  Comment 316 406 rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 320 408 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3]  <||@
  Comment 320 [rdi:0, r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 320 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 328 410 rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 333 412 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 335 414 rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 340 416 rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 340 418 rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 346 420 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD  <||@
  Comment 355 block B15 null  <||@
  Comment 355 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 355 424 NOP  <||@
  Comment 356 426 NOP  <||@
  Comment 357 428 NOP  <||@
  Comment 358 430 NOP  <||@
  Comment 359 432 NOP  <||@
  Comment 360 434 NOP  <||@
  Comment 361 436 NOP  <||@
  Comment 362 438 r9|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 365 440 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3  <||@
  Comment 369 442 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD  <||@
  Comment 377 block B16 null  <||@
  Comment 377 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 446 NOP  <||@
  Comment 378 448 NOP  <||@
  Comment 379 450 NOP  <||@
  Comment 380 452 NOP  <||@
  Comment 381 454 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 390 block B18 null  <||@
  Comment 390 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 472 rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 394 474 NOP  <||@
  Comment 395 476 NOP  <||@
  Comment 396 478 NOP  <||@
  Comment 397 480 NOP  <||@
  Comment 398 482 NOP  <||@
  Comment 399 484 rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 402 486 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 411 block B20 null  <||@
  Comment 411 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 411 504 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 416 506 NOP  <||@
  Comment 417 508 NOP  <||@
  Comment 418 510 NOP  <||@
  Comment 419 512 NOP  <||@
  Comment 420 514 NOP  <||@
  Comment 421 516 NOP  <||@
  Comment 422 518 NOP  <||@
  Comment 423 520 NOP  <||@
  Comment 424 522 NOP  <||@
  Comment 425 524 NOP  <||@
  Comment 426 526 NOP  <||@
  Comment 427 528 NOP  <||@
  Comment 428 530 NOP  <||@
  Comment 429 532 NOP  <||@
  Comment 430 534 NOP  <||@
  Comment 431 536 NOP  <||@
  Comment 432 538 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 432 540 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 437 542 rsi|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 440 544 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 440 546 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 444 548 rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 449 550 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 452 552 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 452 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 457 554 rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 462 556 JUMP ~outgoingValues: [] destination: B20 -> B26  <||@
  Comment 467 block B7 null  <||@
  Comment 467 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 222 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 471 224 r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 474 226 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 479 228 NOP  <||@
  Comment 480 230 NOP  <||@
  Comment 481 232 NOP  <||@
  Comment 482 234 NOP  <||@
  Comment 483 236 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 492 block B9 null  <||@
  Comment 492 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 256 NOP  <||@
  Comment 493 258 NOP  <||@
  Comment 494 260 NOP  <||@
  Comment 495 262 NOP  <||@
  Comment 496 264 NOP  <||@
  Comment 497 266 rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 503 268 CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 513 block B11 null  <||@
  Comment 513 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 288 NOP  <||@
  Comment 514 290 NOP  <||@
  Comment 515 292 NOP  <||@
  Comment 516 294 NOP  <||@
  Comment 517 296 NOP  <||@
  Comment 518 298 NOP  <||@
  Comment 519 300 NOP  <||@
  Comment 520 302 NOP  <||@
  Comment 521 304 NOP  <||@
  Comment 522 306 NOP  <||@
  Comment 523 308 NOP  <||@
  Comment 524 310 NOP  <||@
  Comment 525 312 NOP  <||@
  Comment 526 314 NOP  <||@
  Comment 527 316 NOP  <||@
  Comment 528 318 NOP  <||@
  Comment 529 320 NOP  <||@
  Comment 530 322 NOP  <||@
  Comment 531 324 NOP  <||@
  Comment 532 326 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 532 328 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 537 330 rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 541 332 rcx|QWORD = MOV value: r13|DWORD size: DWORD  <||@
  Comment 544 334 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 547 336 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 551 338 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 554 340 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 554 342 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 557 344 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 560 346 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 560 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 565 348 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 570 350 stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 574 352 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 579 block B21 null  <||@
  Comment 579 558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 560 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 584 562 NOP  <||@
  Comment 585 564 NOP  <||@
  Comment 586 566 NOP  <||@
  Comment 587 568 NOP  <||@
  Comment 588 570 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 597 block B23 null  <||@
  Comment 597 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 588 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 601 590 NOP  <||@
  Comment 602 592 NOP  <||@
  Comment 603 594 NOP  <||@
  Comment 604 596 NOP  <||@
  Comment 605 598 NOP  <||@
  Comment 606 600 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 612 602 CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 620 block B25 null  <||@
  Comment 620 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 620 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 625 622 NOP  <||@
  Comment 626 624 NOP  <||@
  Comment 627 626 NOP  <||@
  Comment 628 628 NOP  <||@
  Comment 629 630 NOP  <||@
  Comment 630 632 NOP  <||@
  Comment 631 634 NOP  <||@
  Comment 632 636 NOP  <||@
  Comment 633 638 NOP  <||@
  Comment 634 640 NOP  <||@
  Comment 635 642 NOP  <||@
  Comment 636 644 NOP  <||@
  Comment 637 646 NOP  <||@
  Comment 638 648 NOP  <||@
  Comment 639 650 NOP  <||@
  Comment 640 652 NOP  <||@
  Comment 641 654 NOP  <||@
  Comment 642 656 NOP  <||@
  Comment 643 658 NOP  <||@
  Comment 644 660 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 644 662 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 649 664 rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 653 666 rcx|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 656 668 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 659 670 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 663 672 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 666 674 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 666 676 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 669 678 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 672 680 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 672 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 677 682 rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 680 684 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 685 block B17 null  <||@
  Comment 685 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 685 458 NOP  <||@
  Comment 686 460 NOP  <||@
  Comment 687 462 NOP  <||@
  Comment 688 464 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 695 466 r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7]  <||@
  Comment 701 468 JUMP ~outgoingValues: [] destination: B17 -> B28  <||@
  Comment 701 block B28 null  <||@
  Comment 701 722 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 701 724 NOP  <||@
  Comment 702 726 NOP  <||@
  Comment 703 728 NOP  <||@
  Comment 704 730 NOP  <||@
  Comment 705 732 NOP  <||@
  Comment 706 734 NOP  <||@
  Comment 707 736 NOP  <||@
  Comment 708 738 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 715 740 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 722 742 DEOPT info [bci:43, 21, 3]  <||@
  Comment 722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 727 [r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 735 block B19 null  <||@
  Comment 735 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 735 490 NOP  <||@
  Comment 736 492 NOP  <||@
  Comment 737 494 NOP  <||@
  Comment 738 496 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 745 498 r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7]  <||@
  Comment 751 500 JUMP ~outgoingValues: [] destination: B19 -> B28  <||@
  Comment 753 block B10 null  <||@
  Comment 753 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 753 272 NOP  <||@
  Comment 754 274 NOP  <||@
  Comment 755 276 NOP  <||@
  Comment 756 278 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 763 280 r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7]  <||@
  Comment 769 284 JUMP ~outgoingValues: [] destination: B10 -> B30  <||@
  Comment 769 block B30 null  <||@
  Comment 769 762 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 769 118 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 774 764 NOP  <||@
  Comment 775 766 NOP  <||@
  Comment 776 768 NOP  <||@
  Comment 777 770 NOP  <||@
  Comment 778 772 NOP  <||@
  Comment 779 774 NOP  <||@
  Comment 780 776 NOP  <||@
  Comment 781 778 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 788 780 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 795 782 DEOPT info [bci:0]  <||@
  Comment 795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 800 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 808 block B24 null  <||@
  Comment 808 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 808 606 NOP  <||@
  Comment 809 608 NOP  <||@
  Comment 810 610 NOP  <||@
  Comment 811 612 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 818 614 r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7]  <||@
  Comment 824 616 JUMP ~outgoingValues: [] destination: B24 -> B28  <||@
  Comment 826 block B22 null  <||@
  Comment 826 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 574 NOP  <||@
  Comment 827 576 NOP  <||@
  Comment 828 578 NOP  <||@
  Comment 829 580 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 836 582 r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7]  <||@
  Comment 842 584 JUMP ~outgoingValues: [] destination: B22 -> B28  <||@
  Comment 847 block B3 null  <||@
  Comment 847 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 847 106 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 852 108 NOP  <||@
  Comment 853 110 NOP  <||@
  Comment 854 112 NOP  <||@
  Comment 855 114 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 862 116 r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7]  <||@
  Comment 868 120 JUMP ~outgoingValues: [] destination: B3 -> B30  <||@
  Comment 870 block B8 null  <||@
  Comment 870 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 240 NOP  <||@
  Comment 871 242 NOP  <||@
  Comment 872 244 NOP  <||@
  Comment 873 246 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 880 248 r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7]  <||@
  Comment 886 252 JUMP ~outgoingValues: [] destination: B8 -> B30  <||@
  Comment 888 block B27 null  <||@
  Comment 888 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 710 NOP  <||@
  Comment 889 712 NOP  <||@
  Comment 890 714 NOP  <||@
  Comment 891 716 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 898 718 r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced]  <||@
  Comment 904 720 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 909 block B5 null  <||@
  Comment 909 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 909 140 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 914 142 NOP  <||@
  Comment 915 144 NOP  <||@
  Comment 916 146 NOP  <||@
  Comment 917 148 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 924 150 r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7]  <||@
  Comment 930 154 JUMP ~outgoingValues: [] destination: B5 -> B30  <||@
  Comment 935 block B29 null  <||@
  Comment 935 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 935 746 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 940 748 NOP  <||@
  Comment 941 750 NOP  <||@
  Comment 942 752 NOP  <||@
  Comment 943 754 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 950 756 r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed]  <||@
  Comment 956 760 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 966 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1019 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1024 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1054 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1059 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1094 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1124 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1129 [rdi:0, r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 1137 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1137 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1143 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8048[java.lang.StringConcatHelper.prepend(long, byte[], String, String)]"
  method "HotSpotCompilation-8048[java.lang.StringConcatHelper.prepend(long, byte[], String, String)]"
  date 1724269754185
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aef7020 89842400c0feff4883ec389041817f20030000000f85a70300009090909090909090909090909090909090909048896c24304c8bd1418b7a14450fbe5a10448b0cfd0c0000008b5a0c418bcb418bc1d3e8488bce482bc848b80000000001000000483bc10f8e3d03000090909090909090908bebd1ed448be948c1e7034585db0f854d010000909090904585ed0f8cbc0200009090909090448bdb452bd9453beb0f8fe6020000896c242448894c2418895c24144c89042490909090909090909090909090909090488bf2458bd5488d7f104a8d7416104889542408498bd1e8fc2c87fe4c8b0424909090904d85c00f852d000000909090488b4c24189090909090909090488bc1488b6c24304883c438493ba7500400000f87b3020000c5f877c348b800000000010000004c8b5c24189090909090909090909090418b7814448b14fd0c000000410fbe70108bce418bd2d3ea498bcb482bca483bc10f8e1502000090909090909090448bc948c1e70385f60f85ca000000909090904585c90f8c270100008b5c24149090909090412bda443bcb0f8f4401000048894c241890909090909090909090909090909090488b542408418bf1488d7f10488d743210498bd2e8172c87fe488b4c2418e92affffff896c24244c8bd94889542408909090904585ed0f8c7a0100009090909090418bd54103d13b5424240f87f000000090909090909090909090909090909090909090488b542408488d7710418bcd48d1e1488d49104803ca488bd1418bc9e8ab3b9efe4c895c2418895c2414e9a5feffff48894c2418909090904585c90f8ce50000008b6c24249090909090418bf14103f23bf50f87bc0000004c8b5c241890909090909090909090909090909090909090488b542408488d7710418bc948d1e1488d49104803ca488bd1418bcae83b3b9efe498bcbe950feffff90909049c7c10000000041bae7e8feff90909090909090458997840400004d898f90040000e8833e89fe0f1f84000000000090909049c7c10000000041bae7e4feffebcc90909049c7c10000000041bbe7ccfeff488b5424089090909090909045899f840400004d898f90040000e83a3e89fe0f1f84000000000090909049c7c10000000041bae7dcfeffeb8390909049c7c10000000041bae7e0feffe96effffff488954240890909049c7c10000000041bbe7d8feffeb9b90909049c7c10000000041bbe7d0feffeb8990909049c7c11400000041baedecfeffe930ffffff488954240890909049c7c10000000041bbe7d4feffe95affffff488954240890909049c7c11400000041bbedf0feffe940ffffff48896c2430e8353e87fee94afcfffff4488d0d39fdffff49898f68040000e9fc4b89fef441c78784040000f569ffff49c7879004000000000000e85a3d89fe0f1f84000000000041c78784040000f55bffff49c7879004000000000000e8373d89fe0f1f84000000000041c78784040000f502ffff49c7879004000000000000e8143d89fe0f1f84000000000041c78784040000f532ffff49c7879004000000000000e8f13c89fe0f1f840000000000e86ade9cfef4e8843a89fef4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD, rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 NOP  <||@
  Comment 40 30 NOP  <||@
  Comment 41 32 NOP  <||@
  Comment 42 34 NOP  <||@
  Comment 43 36 NOP  <||@
  Comment 44 38 NOP  <||@
  Comment 45 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 50 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@29d12a05 slotKind: QWORD  <||@
  Comment 50 44 r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 46 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 57 48 r11|DWORD = MOVSXB input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 62 50 r9|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 62 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 52 rbx|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 70 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 54 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 76 56 rax|DWORD = SHR (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 81 58 rax|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 81 60 rcx|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 87 62 rax|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 97 64 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B29 size: QWORD  <||@
  Comment 106 block B1 null  <||@
  Comment 106 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 NOP  <||@
  Comment 111 78 NOP  <||@
  Comment 112 80 NOP  <||@
  Comment 113 82 NOP  <||@
  Comment 114 84 rbp|DWORD = SHR value: rbx|DWORD size: DWORD  <||@
  Comment 118 86 r13|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 121 88 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3  <||@
  Comment 125 90 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 size: DWORD  <||@
  Comment 134 block B2 null  <||@
  Comment 134 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 134 94 NOP  <||@
  Comment 135 96 NOP  <||@
  Comment 136 98 NOP  <||@
  Comment 137 100 NOP  <||@
  Comment 138 102 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 147 block B4 null  <||@
  Comment 147 122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 147 124 NOP  <||@
  Comment 148 126 NOP  <||@
  Comment 149 128 NOP  <||@
  Comment 150 130 NOP  <||@
  Comment 151 132 NOP  <||@
  Comment 152 134 r11|DWORD = SUB (x: rbx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 158 136 CMPBRANCH (x: r13|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 167 block B6 null  <||@
  Comment 167 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 167 158 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 171 160 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 176 162 stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 180 164 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 184 166 NOP  <||@
  Comment 185 168 NOP  <||@
  Comment 186 170 NOP  <||@
  Comment 187 172 NOP  <||@
  Comment 188 174 NOP  <||@
  Comment 189 176 NOP  <||@
  Comment 190 178 NOP  <||@
  Comment 191 180 NOP  <||@
  Comment 192 182 NOP  <||@
  Comment 193 184 NOP  <||@
  Comment 194 186 NOP  <||@
  Comment 195 188 NOP  <||@
  Comment 196 190 NOP  <||@
  Comment 197 192 NOP  <||@
  Comment 198 194 NOP  <||@
  Comment 199 196 NOP  <||@
  Comment 200 198 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 200 200 rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 203 202 r10|QWORD = MOV value: r13|DWORD size: DWORD  <||@
  Comment 206 204 r9|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 206 206 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 210 208 rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|QWORD * 1 + 16] size: QWORD  <||@
  Comment 215 210 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 220 212 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 223 214 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 223 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 228 216 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 232 218 JUMP ~outgoingValues: [] destination: B6 -> B12  <||@
  Comment 232 block B12 null  <||@
  Comment 232 354 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 232 356 NOP  <||@
  Comment 233 358 NOP  <||@
  Comment 234 360 NOP  <||@
  Comment 235 362 NOP  <||@
  Comment 236 364 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.7738373684898093 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 245 block B13 null  <||@
  Comment 245 366 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 368 NOP  <||@
  Comment 246 370 NOP  <||@
  Comment 247 372 NOP  <||@
  Comment 248 374 rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 253 376 JUMP ~outgoingValues: [] destination: B13 -> B26  <||@
  Comment 253 block B26 null  <||@
  Comment 253 686 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 253 688 NOP  <||@
  Comment 254 690 NOP  <||@
  Comment 255 692 NOP  <||@
  Comment 256 694 NOP  <||@
  Comment 257 696 NOP  <||@
  Comment 258 698 NOP  <||@
  Comment 259 700 NOP  <||@
  Comment 260 702 NOP  <||@
  Comment 261 704 rax|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 264 706 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 273 POLL_RETURN_FAR  <||@
  Comment 290 block B14 null  <||@
  Comment 290 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 290 380 rax|QWORD = MOVE input: long[4294967296|0x100000000]  <||@
  Comment 300 382 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 305 384 NOP  <||@
  Comment 306 386 NOP  <||@
  Comment 307 388 NOP  <||@
  Comment 308 390 NOP  <||@
  Comment 309 392 NOP  <||@
  Comment 310 394 NOP  <||@
  Comment 311 396 NOP  <||@
  Comment 312 398 NOP  <||@
  Comment 313 400 NOP  <||@
  Comment 314 402 NOP  <||@
  Comment 315 404 NOP  <||@
  Comment 316 406 rdi|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 320 408 r10|DWORD = MOV input: [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:43, 21, 3]  <||@
  Comment 320 [rdi:0, r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 320 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 328 410 rsi|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 333 412 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 335 414 rdx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 340 416 rdx|QWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 340 418 rcx|QWORD = SUB (x: r11|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 346 420 CMPBRANCH (x: rax|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B27 size: QWORD  <||@
  Comment 355 block B15 null  <||@
  Comment 355 422 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 355 424 NOP  <||@
  Comment 356 426 NOP  <||@
  Comment 357 428 NOP  <||@
  Comment 358 430 NOP  <||@
  Comment 359 432 NOP  <||@
  Comment 360 434 NOP  <||@
  Comment 361 436 NOP  <||@
  Comment 362 438 r9|DWORD = MOV value: rcx|QWORD size: DWORD  <||@
  Comment 365 440 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20bf9583 encoding: base: 0 shift: 3  <||@
  Comment 369 442 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.9987687249012156 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 size: DWORD  <||@
  Comment 377 block B16 null  <||@
  Comment 377 444 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 377 446 NOP  <||@
  Comment 378 448 NOP  <||@
  Comment 379 450 NOP  <||@
  Comment 380 452 NOP  <||@
  Comment 381 454 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 390 block B18 null  <||@
  Comment 390 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 390 472 rbx|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 394 474 NOP  <||@
  Comment 395 476 NOP  <||@
  Comment 396 478 NOP  <||@
  Comment 397 480 NOP  <||@
  Comment 398 482 NOP  <||@
  Comment 399 484 rbx|DWORD = SUB (x: rbx|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 402 486 CMPBRANCH (x: r9|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: DWORD  <||@
  Comment 411 block B20 null  <||@
  Comment 411 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 411 504 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 416 506 NOP  <||@
  Comment 417 508 NOP  <||@
  Comment 418 510 NOP  <||@
  Comment 419 512 NOP  <||@
  Comment 420 514 NOP  <||@
  Comment 421 516 NOP  <||@
  Comment 422 518 NOP  <||@
  Comment 423 520 NOP  <||@
  Comment 424 522 NOP  <||@
  Comment 425 524 NOP  <||@
  Comment 426 526 NOP  <||@
  Comment 427 528 NOP  <||@
  Comment 428 530 NOP  <||@
  Comment 429 532 NOP  <||@
  Comment 430 534 NOP  <||@
  Comment 431 536 NOP  <||@
  Comment 432 538 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 432 540 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 437 542 rsi|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 440 544 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 440 546 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 444 548 rsi|QWORD = LEA address: [rdx|QWORD[*] + rsi|QWORD * 1 + 16] size: QWORD  <||@
  Comment 449 550 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 452 552 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 452 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 457 554 rcx|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 462 556 JUMP ~outgoingValues: [] destination: B20 -> B26  <||@
  Comment 467 block B7 null  <||@
  Comment 467 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 467 222 stack:28|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 471 224 r11|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 474 226 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 479 228 NOP  <||@
  Comment 480 230 NOP  <||@
  Comment 481 232 NOP  <||@
  Comment 482 234 NOP  <||@
  Comment 483 236 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 492 block B9 null  <||@
  Comment 492 254 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 492 256 NOP  <||@
  Comment 493 258 NOP  <||@
  Comment 494 260 NOP  <||@
  Comment 495 262 NOP  <||@
  Comment 496 264 NOP  <||@
  Comment 497 266 rdx|DWORD = ADD (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 503 268 CMPBRANCH (x: rdx|DWORD, y: stack:28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 513 block B11 null  <||@
  Comment 513 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 513 288 NOP  <||@
  Comment 514 290 NOP  <||@
  Comment 515 292 NOP  <||@
  Comment 516 294 NOP  <||@
  Comment 517 296 NOP  <||@
  Comment 518 298 NOP  <||@
  Comment 519 300 NOP  <||@
  Comment 520 302 NOP  <||@
  Comment 521 304 NOP  <||@
  Comment 522 306 NOP  <||@
  Comment 523 308 NOP  <||@
  Comment 524 310 NOP  <||@
  Comment 525 312 NOP  <||@
  Comment 526 314 NOP  <||@
  Comment 527 316 NOP  <||@
  Comment 528 318 NOP  <||@
  Comment 529 320 NOP  <||@
  Comment 530 322 NOP  <||@
  Comment 531 324 NOP  <||@
  Comment 532 326 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 532 328 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 537 330 rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 541 332 rcx|QWORD = MOV value: r13|DWORD size: DWORD  <||@
  Comment 544 334 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 547 336 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 551 338 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 554 340 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 554 342 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 557 344 rcx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 560 346 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 560 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 565 348 stack:40|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 570 350 stack:44|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 574 352 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 579 block B21 null  <||@
  Comment 579 558 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 579 560 stack:40|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 584 562 NOP  <||@
  Comment 585 564 NOP  <||@
  Comment 586 566 NOP  <||@
  Comment 587 568 NOP  <||@
  Comment 588 570 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 597 block B23 null  <||@
  Comment 597 586 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 597 588 rbp|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 601 590 NOP  <||@
  Comment 602 592 NOP  <||@
  Comment 603 594 NOP  <||@
  Comment 604 596 NOP  <||@
  Comment 605 598 NOP  <||@
  Comment 606 600 rsi|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 612 602 CMPBRANCH (x: rsi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 620 block B25 null  <||@
  Comment 620 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 620 620 r11|QWORD = MOVE input: stack:40|QWORD moveKind: QWORD  <||@
  Comment 625 622 NOP  <||@
  Comment 626 624 NOP  <||@
  Comment 627 626 NOP  <||@
  Comment 628 628 NOP  <||@
  Comment 629 630 NOP  <||@
  Comment 630 632 NOP  <||@
  Comment 631 634 NOP  <||@
  Comment 632 636 NOP  <||@
  Comment 633 638 NOP  <||@
  Comment 634 640 NOP  <||@
  Comment 635 642 NOP  <||@
  Comment 636 644 NOP  <||@
  Comment 637 646 NOP  <||@
  Comment 638 648 NOP  <||@
  Comment 639 650 NOP  <||@
  Comment 640 652 NOP  <||@
  Comment 641 654 NOP  <||@
  Comment 642 656 NOP  <||@
  Comment 643 658 NOP  <||@
  Comment 644 660 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 644 662 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 649 664 rsi|QWORD[*] = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 653 666 rcx|QWORD = MOV value: r9|DWORD size: DWORD  <||@
  Comment 656 668 rcx|QWORD = SHL value: rcx|QWORD size: QWORD  <||@
  Comment 659 670 rcx|QWORD = LEA address: [rcx|QWORD + 16] size: QWORD  <||@
  Comment 663 672 rcx|QWORD[*] = ADD (x: rcx|QWORD, y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 666 674 rsi|QWORD = MOVE input: rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 666 676 rdx|QWORD = MOVE input: rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 669 678 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 672 680 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 672 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7f78998dae00:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 677 682 rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 680 684 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 685 block B17 null  <||@
  Comment 685 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 685 458 NOP  <||@
  Comment 686 460 NOP  <||@
  Comment 687 462 NOP  <||@
  Comment 688 464 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 695 466 r10|DWORD = MOVE input: int[-71449|0xfffffffffffee8e7]  <||@
  Comment 701 468 JUMP ~outgoingValues: [] destination: B17 -> B28  <||@
  Comment 701 block B28 null  <||@
  Comment 701 722 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 701 724 NOP  <||@
  Comment 702 726 NOP  <||@
  Comment 703 728 NOP  <||@
  Comment 704 730 NOP  <||@
  Comment 705 732 NOP  <||@
  Comment 706 734 NOP  <||@
  Comment 707 736 NOP  <||@
  Comment 708 738 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 715 740 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 722 742 DEOPT info [bci:43, 21, 3]  <||@
  Comment 722 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 727 [r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 735 block B19 null  <||@
  Comment 735 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 735 490 NOP  <||@
  Comment 736 492 NOP  <||@
  Comment 737 494 NOP  <||@
  Comment 738 496 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 745 498 r10|DWORD = MOVE input: int[-72473|0xfffffffffffee4e7]  <||@
  Comment 751 500 JUMP ~outgoingValues: [] destination: B19 -> B28  <||@
  Comment 753 block B10 null  <||@
  Comment 753 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 753 272 NOP  <||@
  Comment 754 274 NOP  <||@
  Comment 755 276 NOP  <||@
  Comment 756 278 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 763 280 r11|DWORD = MOVE input: int[-78617|0xfffffffffffecce7]  <||@
  Comment 769 284 JUMP ~outgoingValues: [] destination: B10 -> B30  <||@
  Comment 769 block B30 null  <||@
  Comment 769 762 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 769 118 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 774 764 NOP  <||@
  Comment 775 766 NOP  <||@
  Comment 776 768 NOP  <||@
  Comment 777 770 NOP  <||@
  Comment 778 772 NOP  <||@
  Comment 779 774 NOP  <||@
  Comment 780 776 NOP  <||@
  Comment 781 778 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 788 780 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 795 782 DEOPT info [bci:0]  <||@
  Comment 795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 800 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 808 block B24 null  <||@
  Comment 808 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 808 606 NOP  <||@
  Comment 809 608 NOP  <||@
  Comment 810 610 NOP  <||@
  Comment 811 612 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 818 614 r10|DWORD = MOVE input: int[-74521|0xfffffffffffedce7]  <||@
  Comment 824 616 JUMP ~outgoingValues: [] destination: B24 -> B28  <||@
  Comment 826 block B22 null  <||@
  Comment 826 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 826 574 NOP  <||@
  Comment 827 576 NOP  <||@
  Comment 828 578 NOP  <||@
  Comment 829 580 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 836 582 r10|DWORD = MOVE input: int[-73497|0xfffffffffffee0e7]  <||@
  Comment 842 584 JUMP ~outgoingValues: [] destination: B22 -> B28  <||@
  Comment 847 block B3 null  <||@
  Comment 847 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 847 106 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 852 108 NOP  <||@
  Comment 853 110 NOP  <||@
  Comment 854 112 NOP  <||@
  Comment 855 114 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 862 116 r11|DWORD = MOVE input: int[-75545|0xfffffffffffed8e7]  <||@
  Comment 868 120 JUMP ~outgoingValues: [] destination: B3 -> B30  <||@
  Comment 870 block B8 null  <||@
  Comment 870 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 240 NOP  <||@
  Comment 871 242 NOP  <||@
  Comment 872 244 NOP  <||@
  Comment 873 246 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 880 248 r11|DWORD = MOVE input: int[-77593|0xfffffffffffed0e7]  <||@
  Comment 886 252 JUMP ~outgoingValues: [] destination: B8 -> B30  <||@
  Comment 888 block B27 null  <||@
  Comment 888 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 888 710 NOP  <||@
  Comment 889 712 NOP  <||@
  Comment 890 714 NOP  <||@
  Comment 891 716 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 898 718 r10|DWORD = MOVE input: int[-70419|0xfffffffffffeeced]  <||@
  Comment 904 720 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 909 block B5 null  <||@
  Comment 909 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 909 140 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 914 142 NOP  <||@
  Comment 915 144 NOP  <||@
  Comment 916 146 NOP  <||@
  Comment 917 148 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 924 150 r11|DWORD = MOVE input: int[-76569|0xfffffffffffed4e7]  <||@
  Comment 930 154 JUMP ~outgoingValues: [] destination: B5 -> B30  <||@
  Comment 935 block B29 null  <||@
  Comment 935 744 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 935 746 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 940 748 NOP  <||@
  Comment 941 750 NOP  <||@
  Comment 942 752 NOP  <||@
  Comment 943 754 r9|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 950 756 r11|DWORD = MOVE input: int[-69395|0xfffffffffffef0ed]  <||@
  Comment 956 760 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 966 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1019 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1024 [rdx:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1054 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1059 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1094 [rdx:0, rdi:0, r8:0, r10:0]at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2             |3             |4           
     locals:  |rsi|QWORD  |-  |rdx|QWORD[.]  |r10|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 1124 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1129 [rdi:0, r8:0, stack:8]at java.lang.String.getBytes(String.java:4730) [bci: 43, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:324) [bci: 21, duringCall: true, rethrow: false]
              |0          |1  |2  |3 
     locals:  |r11|QWORD  |-  |-  |- 
  at java.lang.StringConcatHelper.prepend(StringConcatHelper.java:343) [bci: 3, duringCall: true, rethrow: false]
              |0  |1  |2                  |3  |4           
     locals:  |-  |-  |stack:56|QWORD[.]  |-  |r8|QWORD[.]   <||@
  Comment 1137 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1137 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1143 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
